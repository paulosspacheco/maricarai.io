var tipuesearch = {"pages": [
     {"title": "Classes_C", "text": "   ", "tags": "", "url": "Classes_C.html"},
     {"title": "Classes_C.TJSON_BaseObject", "text": "   ", "tags": "", "url": "Classes_C.TJSON_BaseObject.html"},
     {"title": "Classes_C.TJSON_BaseObject.ObjectToJSON", "text": "    ", "tags": "", "url": "Classes_C.TJSON_BaseObject.html#ObjectToJSON"},
     {"title": "Classes_C.TJSON_BaseObject.JSONToObject", "text": "    ", "tags": "", "url": "Classes_C.TJSON_BaseObject.html#JSONToObject"},
     {"title": "Classes_C.TNSComponent", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html"},
     {"title": "Classes_C.TNSComponent.Protected", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#Protected"},
     {"title": "Classes_C.TNSComponent.State", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#State"},
     {"title": "Classes_C.TNSComponent._HTMLContent", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#_HTMLContent"},
     {"title": "Classes_C.TNSComponent.QueryInterface", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#QueryInterface"},
     {"title": "Classes_C.TNSComponent._AddRef", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#_AddRef"},
     {"title": "Classes_C.TNSComponent._Release", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#_Release"},
     {"title": "Classes_C.TNSComponent.Owner_Component", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Owner_Component"},
     {"title": "Classes_C.TNSComponent.GetAlias", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetAlias"},
     {"title": "Classes_C.TNSComponent.SetAlias", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetAlias"},
     {"title": "Classes_C.TNSComponent.SetPath", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetPath"},
     {"title": "Classes_C.TNSComponent.GetID_Dynamic", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetID_Dynamic"},
     {"title": "Classes_C.TNSComponent.GetCurrentField", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetCurrentField"},
     {"title": "Classes_C.TNSComponent.GetCurrentField", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetCurrentField"},
     {"title": "Classes_C.TNSComponent.TabIndex", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#TabIndex"},
     {"title": "Classes_C.TNSComponent.GetAcao", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetAcao"},
     {"title": "Classes_C.TNSComponent.DoOnHTMLTag_tgLink", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#DoOnHTMLTag_tgLink"},
     {"title": "Classes_C.TNSComponent.DoOnHTMLTag_tgImage", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#DoOnHTMLTag_tgImage"},
     {"title": "Classes_C.TNSComponent.DoOnHTMLTag_tgTable", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#DoOnHTMLTag_tgTable"},
     {"title": "Classes_C.TNSComponent.DoOnHTMLTag_tgImageMap", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#DoOnHTMLTag_tgImageMap"},
     {"title": "Classes_C.TNSComponent.DoOnHTMLTag_tgObject", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#DoOnHTMLTag_tgObject"},
     {"title": "Classes_C.TNSComponent.DoOnHTMLTag_tgEmbed", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#DoOnHTMLTag_tgEmbed"},
     {"title": "Classes_C.TNSComponent.DoOnHTMLTag_tgCustom", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#DoOnHTMLTag_tgCustom"},
     {"title": "Classes_C.TNSComponent.DoOnHTMLTag", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#DoOnHTMLTag"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_Path", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_Path"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_Doc_HTML", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_Doc_HTML"},
     {"title": "Classes_C.TNSComponent.ExecViewHelpCtx_F1", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#ExecViewHelpCtx_F1"},
     {"title": "Classes_C.TNSComponent.ExecViewHelpCtx_Alt_F1", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#ExecViewHelpCtx_Alt_F1"},
     {"title": "Classes_C.TNSComponent.ExecViewHelpCtx_Crtl_F1", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#ExecViewHelpCtx_Crtl_F1"},
     {"title": "Classes_C.TNSComponent.ExecViewHelpCtx", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#ExecViewHelpCtx"},
     {"title": "Classes_C.TNSComponent.EditViewHelpCtx", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#EditViewHelpCtx"},
     {"title": "Classes_C.TNSComponent.EventAvail", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#EventAvail"},
     {"title": "Classes_C.TNSComponent.GetEvent", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetEvent"},
     {"title": "Classes_C.TNSComponent.PutEvent", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#PutEvent"},
     {"title": "Classes_C.TNSComponent.GetOwner", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetOwner"},
     {"title": "Classes_C.TNSComponent.SetRecordAltered", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetRecordAltered"},
     {"title": "Classes_C.TNSComponent.ChangeMadeOnOff", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#ChangeMadeOnOff"},
     {"title": "Classes_C.TNSComponent.SetRecPosition", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetRecPosition"},
     {"title": "Classes_C.TNSComponent.SetCurrentRecord", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetCurrentRecord"},
     {"title": "Classes_C.TNSComponent.GetProcedure_GlobalStr", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetProcedure_GlobalStr"},
     {"title": "Classes_C.TNSComponent.Set_Command", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Set_Command"},
     {"title": "Classes_C.TNSComponent.SetCommand", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetCommand"},
     {"title": "Classes_C.TNSComponent.GetModule", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetModule"},
     {"title": "Classes_C.TNSComponent.SetModule", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetModule"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_StrModule", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_StrModule"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_StrCommand", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_StrCommand"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_StrCommand_Topic", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_StrCommand_Topic"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_StrCurrentModule", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_StrCurrentModule"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_StrCurrentCommand", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_StrCurrentCommand"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_StrCurrentCommand_Opcao", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_StrCurrentCommand_Opcao"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_StrCurrentCommand_Topic", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_StrCurrentCommand_Topic"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_StrCurrentCommand_Topic_Content_Run", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_StrCurrentCommand_Topic_Content_Run"},
     {"title": "Classes_C.TNSComponent.SetHelpCtx_StrCurrentCommand_Topic_Content_Run", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetHelpCtx_StrCurrentCommand_Topic_Content_Run"},
     {"title": "Classes_C.TNSComponent.Get_Ok_HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_File", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Get_Ok_HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_File"},
     {"title": "Classes_C.TNSComponent.Set_Ok_HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_File", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Set_Ok_HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_File"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_StrCurrentCommand_Topic_Content", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_StrCurrentCommand_Topic_Content"},
     {"title": "Classes_C.TNSComponent.SetHelpCtx_StrCurrentCommand_Topic_Content", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetHelpCtx_StrCurrentCommand_Topic_Content"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_Hint", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_Hint"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_Historico", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_Historico"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_Porque", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_Porque"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_Onde", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_Onde"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_Como", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_Como"},
     {"title": "Classes_C.TNSComponent.GetHelpCtx_Quais", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHelpCtx_Quais"},
     {"title": "Classes_C.TNSComponent.DoBeforeCreate", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#DoBeforeCreate"},
     {"title": "Classes_C.TNSComponent.DoAfterCreate", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#DoAfterCreate"},
     {"title": "Classes_C.TNSComponent.GetSelf", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetSelf"},
     {"title": "Classes_C.TNSComponent.BeforeOpen", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#BeforeOpen"},
     {"title": "Classes_C.TNSComponent.AfterOpen", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#AfterOpen"},
     {"title": "Classes_C.TNSComponent.Create", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Create"},
     {"title": "Classes_C.TNSComponent.CCreate", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#CCreate"},
     {"title": "Classes_C.TNSComponent.CloneComponent", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#CloneComponent"},
     {"title": "Classes_C.TNSComponent.Destroy", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Destroy"},
     {"title": "Classes_C.TNSComponent.GetState", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetState"},
     {"title": "Classes_C.TNSComponent.SetState", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetState"},
     {"title": "Classes_C.TNSComponent.Abort_Create", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Abort_Create"},
     {"title": "Classes_C.TNSComponent.IsDB", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsDB"},
     {"title": "Classes_C.TNSComponent.IsTable", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsTable"},
     {"title": "Classes_C.TNSComponent.IsField", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsField"},
     {"title": "Classes_C.TNSComponent.IsGroup", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsGroup"},
     {"title": "Classes_C.TNSComponent.IsFrame", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsFrame"},
     {"title": "Classes_C.TNSComponent.IsDialog", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsDialog"},
     {"title": "Classes_C.TNSComponent.IsInputText", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsInputText"},
     {"title": "Classes_C.TNSComponent.IsInputButton", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsInputButton"},
     {"title": "Classes_C.TNSComponent.IsInputRadio", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsInputRadio"},
     {"title": "Classes_C.TNSComponent.IsInputCheckbox", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsInputCheckbox"},
     {"title": "Classes_C.TNSComponent.isInputPassword", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#isInputPassword"},
     {"title": "Classes_C.TNSComponent.isInputHidden", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#isInputHidden"},
     {"title": "Classes_C.TNSComponent.IsSelect", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsSelect"},
     {"title": "Classes_C.TNSComponent.IsComboBox", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsComboBox"},
     {"title": "Classes_C.TNSComponent.IsMultiCheckBoxes", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsMultiCheckBoxes"},
     {"title": "Classes_C.TNSComponent.IsListBox", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsListBox"},
     {"title": "Classes_C.TNSComponent.IsStaticText", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsStaticText"},
     {"title": "Classes_C.TNSComponent.IsLabel", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsLabel"},
     {"title": "Classes_C.TNSComponent.IsWindow", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsWindow"},
     {"title": "Classes_C.TNSComponent.IsHistoryWindow", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsHistoryWindow"},
     {"title": "Classes_C.TNSComponent.IsHistory", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsHistory"},
     {"title": "Classes_C.TNSComponent.IsScroller", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsScroller"},
     {"title": "Classes_C.TNSComponent.IsGrid", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsGrid"},
     {"title": "Classes_C.TNSComponent.IsScrollBar", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#IsScrollBar"},
     {"title": "Classes_C.TNSComponent.HandleEvent", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#HandleEvent"},
     {"title": "Classes_C.TNSComponent.ClearEvent", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#ClearEvent"},
     {"title": "Classes_C.TNSComponent.ClearEvents", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#ClearEvents"},
     {"title": "Classes_C.TNSComponent.Top_Owner_NSComponent", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Top_Owner_NSComponent"},
     {"title": "Classes_C.TNSComponent.SetOwner_NSComponent", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetOwner_NSComponent"},
     {"title": "Classes_C.TNSComponent.GetRecordSelected", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetRecordSelected"},
     {"title": "Classes_C.TNSComponent.SetRecordSelected", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetRecordSelected"},
     {"title": "Classes_C.TNSComponent.SetFieldSelected", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetFieldSelected"},
     {"title": "Classes_C.TNSComponent.GetFieldSelected", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetFieldSelected"},
     {"title": "Classes_C.TNSComponent.GetHTMLContent", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#GetHTMLContent"},
     {"title": "Classes_C.TNSComponent.SetHTMLFile", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetHTMLFile"},
     {"title": "Classes_C.TNSComponent.SetHTMLFile", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetHTMLFile"},
     {"title": "Classes_C.TNSComponent.SaveHTMLContentToFile", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SaveHTMLContentToFile"},
     {"title": "Classes_C.TNSComponent.SaveHTMLContentToFile", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SaveHTMLContentToFile"},
     {"title": "Classes_C.TNSComponent.CreateHTML", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#CreateHTML"},
     {"title": "Classes_C.TNSComponent.Set_RecordAltered", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Set_RecordAltered"},
     {"title": "Classes_C.TNSComponent.Get_FieldAltered", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Get_FieldAltered"},
     {"title": "Classes_C.TNSComponent.Set_FieldAltered", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Set_FieldAltered"},
     {"title": "Classes_C.TNSComponent.Get_KeyAltered", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Get_KeyAltered"},
     {"title": "Classes_C.TNSComponent.Set_KeyAltered", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Set_KeyAltered"},
     {"title": "Classes_C.TNSComponent.Get_Appending", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Get_Appending"},
     {"title": "Classes_C.TNSComponent.Set_Appending", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Set_Appending"},
     {"title": "Classes_C.TNSComponent.SetAppend", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#SetAppend"},
     {"title": "Classes_C.TNSComponent.Get_RecordLimit", "text": "    ", "tags": "", "url": "Classes_C.TNSComponent.html#Get_RecordLimit"},
     {"title": "Classes_C.TNSComponent.Alias", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#Alias"},
     {"title": "Classes_C.TNSComponent.Path", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#Path"},
     {"title": "Classes_C.TNSComponent.ID_Dynamic", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#ID_Dynamic"},
     {"title": "Classes_C.TNSComponent.RecPosition", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#RecPosition"},
     {"title": "Classes_C.TNSComponent.CurrentRecord", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#CurrentRecord"},
     {"title": "Classes_C.TNSComponent.Procedure_GlobalStr", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#Procedure_GlobalStr"},
     {"title": "Classes_C.TNSComponent.Command", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#Command"},
     {"title": "Classes_C.TNSComponent.Module", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#Module"},
     {"title": "Classes_C.TNSComponent.HelpCtx_StrModule", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_StrModule"},
     {"title": "Classes_C.TNSComponent.HelpCtx_StrCommand", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_StrCommand"},
     {"title": "Classes_C.TNSComponent.HelpCtx_StrCommand_Topic", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_StrCommand_Topic"},
     {"title": "Classes_C.TNSComponent.HelpCtx_StrCurrentModule", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_StrCurrentModule"},
     {"title": "Classes_C.TNSComponent.HelpCtx_StrCurrentCommand", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_StrCurrentCommand"},
     {"title": "Classes_C.TNSComponent.HelpCtx_StrCurrentCommand_Opcao", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_StrCurrentCommand_Opcao"},
     {"title": "Classes_C.TNSComponent.HelpCtx_StrCurrentCommand_Topic", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_StrCurrentCommand_Topic"},
     {"title": "Classes_C.TNSComponent.HelpCtx_StrCurrentCommand_Topic_Content_Run", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_StrCurrentCommand_Topic_Content_Run"},
     {"title": "Classes_C.TNSComponent.Ok_HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_File", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#Ok_HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_File"},
     {"title": "Classes_C.TNSComponent.HelpCtx_StrCurrentCommand_Topic_Content", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_StrCurrentCommand_Topic_Content"},
     {"title": "Classes_C.TNSComponent.HelpCtx_Hint", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_Hint"},
     {"title": "Classes_C.TNSComponent.HelpCtx_Historico", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_Historico"},
     {"title": "Classes_C.TNSComponent.HelpCtx_Porque", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_Porque"},
     {"title": "Classes_C.TNSComponent.HelpCtx_Onde", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_Onde"},
     {"title": "Classes_C.TNSComponent.HelpCtx_Como", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_Como"},
     {"title": "Classes_C.TNSComponent.HelpCtx_Quais", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HelpCtx_Quais"},
     {"title": "Classes_C.TNSComponent.InstanceClass", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#InstanceClass"},
     {"title": "Classes_C.TNSComponent.OkCreate", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#OkCreate"},
     {"title": "Classes_C.TNSComponent.Owner_NSComponent", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#Owner_NSComponent"},
     {"title": "Classes_C.TNSComponent.RecordSelected", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#RecordSelected"},
     {"title": "Classes_C.TNSComponent.FieldSelected", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#FieldSelected"},
     {"title": "Classes_C.TNSComponent.HTMLContent", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HTMLContent"},
     {"title": "Classes_C.TNSComponent.OnHTMLTag", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#OnHTMLTag"},
     {"title": "Classes_C.TNSComponent.HTMLDoc", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HTMLDoc"},
     {"title": "Classes_C.TNSComponent.HTMLFile", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#HTMLFile"},
     {"title": "Classes_C.TNSComponent.PageProducer", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#PageProducer"},
     {"title": "Classes_C.TNSComponent.RecordAltered", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#RecordAltered"},
     {"title": "Classes_C.TNSComponent.FieldAltered", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#FieldAltered"},
     {"title": "Classes_C.TNSComponent.KeyAltered", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#KeyAltered"},
     {"title": "Classes_C.TNSComponent.Appending", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#Appending"},
     {"title": "Classes_C.TNSComponent.Append", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#Append"},
     {"title": "Classes_C.TNSComponent.RecordLimit", "text": "   ", "tags": "", "url": "Classes_C.TNSComponent.html#RecordLimit"},
     {"title": "Classes_C.TClass", "text": "   ", "tags": "", "url": "Classes_C.TClass.html"},
     {"title": "Classes_C.TClass.State", "text": "   ", "tags": "", "url": "Classes_C.TClass.html#State"},
     {"title": "Classes_C.TClass.GetSelf", "text": "    ", "tags": "", "url": "Classes_C.TClass.html#GetSelf"},
     {"title": "Classes_C.TClass.Create", "text": "    ", "tags": "", "url": "Classes_C.TClass.html#Create"},
     {"title": "Classes_C.TClass.Free", "text": "    ", "tags": "", "url": "Classes_C.TClass.html#Free"},
     {"title": "Classes_C.TClass.Abort_Create", "text": "    ", "tags": "", "url": "Classes_C.TClass.html#Abort_Create"},
     {"title": "Classes_C.TClass.Destroy", "text": "    ", "tags": "", "url": "Classes_C.TClass.html#Destroy"},
     {"title": "Classes_C.TClass.GetState", "text": "    ", "tags": "", "url": "Classes_C.TClass.html#GetState"},
     {"title": "Classes_C.TClass.SetState", "text": "    ", "tags": "", "url": "Classes_C.TClass.html#SetState"},
     {"title": "Classes_C.TClass.OkCreate", "text": "   ", "tags": "", "url": "Classes_C.TClass.html#OkCreate"},
     {"title": "Classes_C.TClass.Alias", "text": "   ", "tags": "", "url": "Classes_C.TClass.html#Alias"},
     {"title": "Classes_C.TClass.ClassName", "text": "   ", "tags": "", "url": "Classes_C.TClass.html#ClassName"},
     {"title": "Classes_C.Message", "text": "    ", "tags": "", "url": "Classes_C.html#Message"},
     {"title": "Classes_C.CloneComponent", "text": "    ", "tags": "", "url": "Classes_C.html#CloneComponent"},
     {"title": "Classes_C.StrJSonToJSONObject", "text": "    ", "tags": "", "url": "Classes_C.html#StrJSonToJSONObject"},
     {"title": "Classes_C.JSONObjectToStrJSon", "text": "    ", "tags": "", "url": "Classes_C.html#JSONObjectToStrJSon"},
     {"title": "Classes_C.StrJSonToArrays", "text": "    ", "tags": "", "url": "Classes_C.html#StrJSonToArrays"},
     {"title": "Classes_C.ArraysToJSONValue", "text": "    ", "tags": "", "url": "Classes_C.html#ArraysToJSONValue"},
     {"title": "Classes_C.IsValidPtr", "text": "    ", "tags": "", "url": "Classes_C.html#IsValidPtr"},
     {"title": "Classes_C.DISCARD", "text": "    ", "tags": "", "url": "Classes_C.html#DISCARD"},
     {"title": "mi.rtl", "text": "Esta unit mi.rtl é criada automaticamente pelo Lazarus para declarar todas as units do pacote mi.rtl.       O pacote mi.rtl implementa a classe TObjectss onde a mesma encapsula todas units de acesso ao sistema operacional e as classes originais do turbo pascal turbo vision adaptados para Lazarus.      ", "tags": "", "url": "mi.rtl.html"},
     {"title": "mi.rtl.ApplicationAbstract", "text": "   ", "tags": "", "url": "mi.rtl.ApplicationAbstract.html"},
     {"title": "mi.rtl.ApplicationAbstract.TApplicationAbstract", "text": "   ", "tags": "", "url": "mi.rtl.ApplicationAbstract.TApplicationAbstract.html"},
     {"title": "mi.rtl.Class_Of_Char", "text": "   ", "tags": "", "url": "mi.rtl.Class_Of_Char.html"},
     {"title": "mi.rtl.Class_Of_Char.TClass_Of_Char", "text": "A class TClass_Of_Char é usada na tabela de caracter para conversão das letras com acentos   ", "tags": "", "url": "mi.rtl.Class_Of_Char.TClass_Of_Char.html"},
     {"title": "mi.rtl.Class_Of_Char.TClass_Of_Char.Create", "text": "    ", "tags": "", "url": "mi.rtl.Class_Of_Char.TClass_Of_Char.html#Create"},
     {"title": "mi.rtl.Class_Of_Char.TClass_Of_Char.Asc_Ingles", "text": "   ", "tags": "", "url": "mi.rtl.Class_Of_Char.TClass_Of_Char.html#Asc_Ingles"},
     {"title": "mi.rtl.Class_Of_Char.TClass_Of_Char.Asc_GUI", "text": "   ", "tags": "", "url": "mi.rtl.Class_Of_Char.TClass_Of_Char.html#Asc_GUI"},
     {"title": "mi.rtl.Class_Of_Char.TClass_Of_Char.Asc_HTML", "text": "   ", "tags": "", "url": "mi.rtl.Class_Of_Char.TClass_Of_Char.html#Asc_HTML"},
     {"title": "mi.rtl.Consts", "text": "     A Unit mi.rtl.Consts reúne as constantes globais usados pelo pacote mi.rtl. Esta unit foi testada nas plataformas: win32, win64 e linux.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.consts.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      13/11/2021 : Classe criada   /16/11/2021 :      Em TConsts.Initialization executar:      System.FileMode := TConsts.FileMode;   Motivo: O mapa de Bits System.FileMode não permite acesso compartilhado.         15/12/2021      Criado a constante Identification = TIdentification.      31/12/2021      Criado a constante NRec e NRecAux para manter a compatibilidade com o passado.      **24/06/2022      Criar constante FldLink                  ", "tags": "", "url": "mi.rtl.Consts.html"},
     {"title": "mi.rtl.Consts.TConsts", "text": "A classe TConsts declara todas as constantes globais do pacote MarIcarai   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html"},
     {"title": "mi.rtl.Consts.TConsts.ListaDeMsgErro", "text": "Pilha com tStrings de erros.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ListaDeMsgErro"},
     {"title": "mi.rtl.Consts.TConsts.accNormal", "text": "A constante accNormal (Const AccNormal = 0;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se que o campo pode ser editado.       EXEMPLO      Como usar o mapa de bits accNormal para saber se o campo pode ser editado.      with pDmxFieldRec&circ; do   If (access and accNormal &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s pode ser editado'),[CharFieldName]);        end;           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#accNormal"},
     {"title": "mi.rtl.Consts.TConsts.accReadOnly", "text": "A constante accReadOnly (Const ReadOnly = 1;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o campo é somente para leitura.       EXEMPLO      Como usar o mapa de bits ReadOnly para saber se o campo não pode ser editado.      with pDmxFieldRec&circ; do   If (access and ReadOnly &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s não pode ser editado'),[CharFieldName]);        end;           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#accReadOnly"},
     {"title": "mi.rtl.Consts.TConsts.accHidden", "text": "A constante accHidden (Const accHidden = 2;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o mesmo é invisível.       EXEMPLO      Como usar o mapa de bits accHidden para saber se o campo é invisível.      with pDmxFieldRec&circ; do   If (access and accHidden &lt;&gt; 0)   then begin       ShowMessage(Format('O campo %s está invisível'),[CharFieldName]);        end;           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#accHidden"},
     {"title": "mi.rtl.Consts.TConsts.accSkip", "text": "A constante accSkip (Const accSkip = 4;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o campo pode receber o focus.       EXEMPLO      Como usar o mapa de bits accSkip para saber se o campo não pode receber o focus.      with pDmxFieldRec&circ; do   If (access and accSkip &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s não pode receber o focus'),[CharFieldName]);        end;           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#accSkip"},
     {"title": "mi.rtl.Consts.TConsts.accDelimiter", "text": "A constante accDelimiter informa que o campo é delimitador de campos no Template.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#accDelimiter"},
     {"title": "mi.rtl.Consts.TConsts.accExternal", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#accExternal"},
     {"title": "mi.rtl.Consts.TConsts.accSpecA", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#accSpecA"},
     {"title": "mi.rtl.Consts.TConsts.accSpecB", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#accSpecB"},
     {"title": "mi.rtl.Consts.TConsts.accSpecC", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#accSpecC"},
     {"title": "mi.rtl.Consts.TConsts.fldStr", "text": "A constante fldStr (Const fldStr = 'S') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'S' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere maiúsculo.       EXEMPLO      Representação de um string de 10 dígitos em um buffer de 11 bytes onde o byte zero contém o tamanho da string;      Const   Nome := '\\SSSSSSSSSS'           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldStr"},
     {"title": "mi.rtl.Consts.TConsts.fldS", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldS"},
     {"title": "mi.rtl.Consts.TConsts.fldSTR_Minuscula", "text": "A constante fldSTR_Minuscula (Const fldSTR_Minuscula = 's') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 's' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere minúscula.       EXEMPLO      Representação de um string de 10 dígitos em um buffer de 11 bytes onde o byte zero contém o tamanho da string;      Const   Nome := '\\ssssssssss' //paulosergi   Nome := '\\Ssssssssss' //Paulo serg           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldSTR_Minuscula"},
     {"title": "mi.rtl.Consts.TConsts.fldSMi", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldSMi"},
     {"title": "mi.rtl.Consts.TConsts.fldSTRNUM", "text": "A constante fldSTRNUM (Const fldSTRNUM = '#') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '#' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere numérico.       EXEMPLO      Representação de um string de 11 dígitos em um buffer de 12 bytes onde o byte zero contém o tamanho da string;      Const   telefone := '\\(##) # ####-####' //85 9 9702 4498           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldSTRNUM"},
     {"title": "mi.rtl.Consts.TConsts.fldSN", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldSN"},
     {"title": "mi.rtl.Consts.TConsts.fldAnsiChar", "text": "A constante fldAnsiChar (Const fldAnsiChar = 'C') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'C' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere maiúsculo.       EXEMPLO      Representação de um AnsiString de 10 dígitos em um buffer de 11 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const   Nome := '\\CCCCCCCCCC'; //PAULO SÉRG           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldAnsiChar"},
     {"title": "mi.rtl.Consts.TConsts.fldAC", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldAC"},
     {"title": "mi.rtl.Consts.TConsts.fldAnsiChar_Minuscula", "text": "A constante fldAnsiChar_Minuscula (Const fldAnsiChar = 'c') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'c' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere minúsculo.       EXEMPLO      Representação de um AnsiString de 10 dígitos em um buffer de 11 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const   Nome := '\\cccccccccc'; //paulo Sérg   Nome := '\\Cccccccccc'; //Paulo Sérg           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldAnsiChar_Minuscula"},
     {"title": "mi.rtl.Consts.TConsts.fldACMi", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldACMi"},
     {"title": "mi.rtl.Consts.TConsts.fldAnsiCharNUM", "text": "A constante fldAnsiCharNUM (Const fldAnsiChar = '0') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '0' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere numérico ['0'..'9']] .       EXEMPLO      Representação de um AnsiString de 11 dígitos em um buffer de 12 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const    telefone := '\\(00) 0 0000-0000' //85 9 9702 4498           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldAnsiCharNUM"},
     {"title": "mi.rtl.Consts.TConsts.fldACN", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldACN"},
     {"title": "mi.rtl.Consts.TConsts.fldAnsiCharVAL", "text": "A constante fldAnsiCharVAL (Const fldAnsiChar = '0') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '0' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere numérico ['0'..'9']] com formatação dbase.       EXEMPLO      Representação de um AnsiString de 11 dígitos em um buffer de 12 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const    telefone := '\\(NN) N NNNN-NNNN' //85 9 9702 4498           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldAnsiCharVAL"},
     {"title": "mi.rtl.Consts.fldBYTE", "text": "byte Field   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldBYTE"},
     {"title": "mi.rtl.Consts.TConsts.fldSHORTINT", "text": "shortint Field   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldSHORTINT"},
     {"title": "mi.rtl.Consts.TConsts.fldSmallWORD", "text": "word Field NortSoft   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldSmallWORD"},
     {"title": "mi.rtl.Consts.TConsts.fldSmallInt", "text": "integer Field NortSoft   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldSmallInt"},
     {"title": "mi.rtl.Consts.TConsts.fldLONGINT", "text": "longint Field   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldLONGINT"},
     {"title": "mi.rtl.Consts.TConsts.fldRealNum", "text": "real number Field (uses TRealNum)   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldRealNum"},
     {"title": "mi.rtl.Consts.TConsts.fldRealNum_Positivo", "text": "real number Field positive (uses TRealNum)   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldRealNum_Positivo"},
     {"title": "mi.rtl.Consts.TConsts.fldBoolean", "text": "A constante fldBoolean (fldBoolean = 'X') indica que o campo é do tipo byte e só pode ter dois valores.       NOTA      Valores possíveis:      0 - False; não   1 = True; sim      A forma de editá-los deve ser com o componente checkbox.      EXEMPLO      Resourcestring   tmp_Aceita = '\\X Aceita o contrato +ChFN+'Aceita_contrato'+CharHint+'Aceita os termos do contrato?';   Template = tmp_Aceita+'&tilde;Aceita os termos do contrato&tilde;        ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldBoolean"},
     {"title": "mi.rtl.Consts.TConsts.fldHexValue", "text": "hexadecimal numeric entry   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldHexValue"},
     {"title": "mi.rtl.Consts.CharUpperlimit", "text": "Limite superior do campo (Somente 1 a 255)   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharUpperlimit"},
     {"title": "mi.rtl.Consts.fldENUM", "text": "enumerated Field   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldENUM"},
     {"title": "mi.rtl.Consts.TConsts.fldBLOb", "text": "A constante fldBLOb indica que o campo é não formatado podendo ser um Record, porém a edição do mesmo será feito por outros meios.       NOTA      Para informar ao buffer do registro que o campo é fldBLOb, a função CreateBlobField é necessário.   A class function TUiMethods.CreateBlobField(Len: integer; AccMode,Default: byte) : DmxIDstr; reserva espaço para o mesmo.   Pendência: Preciso criar um exemplo de uso deste tipo de informação.         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldBLOb"},
     {"title": "mi.rtl.Consts.TConsts.FldRadioButton", "text": "O tipo do campo FldRadioButton é um campo tipo TCluster e é representado no Template em um controle TRadioButton       NOTAS      Um Template pode conter vários campos do tipo cluster e o mesmo é identificado após a sequencia \\K? onde ? indica que a informação pertence ao campo ?      Exemplo:      SEXO      \\Ka Masculino   \\Ka Feminino   \\Ka Indefinido            Os campos clusteres possuem o mesmo número do campo e na primeira ocorrência contém o nome do campo na lista pDmxFieldRec.      EXEMPLO     Result :=   NewSItem('&tilde;  SEXO&tilde;',   NewSItem('&tilde;  &tilde;\\Ka Masculino',   NewSItem('&tilde;  &tilde;\\Ka Feminino',   NewSItem('&tilde;  &tilde;\\Ka Indefinido',   NewSItem('&tilde;  ESTADO CIVIL&tilde;',   NewSItem('&tilde;  &tilde;\\Kb Solteiro',   NewSItem('&tilde;  &tilde;\\Kb Casado',   NewSItem('&tilde;  &tilde;\\Kb Divorciado',   nil))))))))        ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldRadioButton"},
     {"title": "mi.rtl.Consts.TConsts.FldDbRadioButton", "text": "O tipo do campo FldDbRadioButton é um campo tipo String e é representado no Template em controle TDbRadioButton       NOTAS      Um Template pode conter vários campos do tipo DbRaidoButton e o mesmo é identificado após a sequencia \\k? onde ? indica que a informação pertence ao campo ?      Exemplo:      SEXO      \\ka Masculino   \\ka Feminino   \\ka Indefinido            Os campos DbRadioButton possuem o mesmo número do campo e na primeira ocorrência contém o nome do campo na lista pDmxFieldRec.   O motivo pelo qual FldDbRadioButton foi criado é que o banco de dados do freepascal reconhece esse tipo como string com o nome do caption selecionado.   O tamanho da string deve ser o tamanho da maior string da lista de opções.         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldDbRadioButton"},
     {"title": "mi.rtl.Consts.TConsts.fldZEROMOD", "text": "zero modifier   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldZEROMOD"},
     {"title": "mi.rtl.Consts.TConsts.fldCONTRACTION", "text": "A constante fldCONTRACTION omite da visão do usuário a parte do campo que não precisa ser mostrado, ou seja: limita a parte visível do texto permitindo scroll lateral do mesmo.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldCONTRACTION"},
     {"title": "mi.rtl.Consts.TConsts.fldAPPEND", "text": "A constante fldAPPEND é usada para concatenar duas listas do tipo PSItem.       A constante fldAPPEND é necessário porque DmxScroller trabalha com string curta e a mesma tem um tamanho de 255 caracteres, onde o tamanho está na posição 0.   Como usar a constante fldAPPEND:       A função CreateAppendFields retorna a constante fldAPPEND mais o endereço da string a ser concatenada.       EXEMPLO      procedure Template : ShortString;   Var     S1,s2,Template : TString; begin   S1 := '&tilde;Nome do Aluno....:&tilde;\\ssssssssssssssssssssssssssssssssss';   s2 := '&tilde;Endereço do aluno:&tilde;\\sssssssssssssssssssssssss';   result := S1+CreateAppendFields(s2); end;     NOTA      A contante fldAPPEND foi criada porque o projeto inicial foi para turbo pascal e ambiente console.   A versão atual podemos usar AnsiString visto que o limite do mesmo é a memória.   Para usar AnsiString é necessário converter para PSitem com a função: StringToSItem.       EXEMPLO:      function TMI_UI_InputBox.DmxScroller_Form1GetTemplate(aNext: PSItem): PSItem; begin   with DmxScroller_Form1 do   begin     if _Template  &lt;&gt; ''     then Result := StringToSItem(_Template, 80);  //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Esquerda) //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Central) //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Direita) //    Result := StringToSItem(_Template, 80,TObjectsTypes.TAlinhamento.Alinhamento_Justificado)      else result := nil;   end; end;                    ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldAPPEND"},
     {"title": "mi.rtl.Consts.TConsts.fldSItems", "text": "link to chain of TSItem Templates   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldSItems"},
     {"title": "mi.rtl.Consts.fldExtended", "text": "Real 10 bytes   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldExtended"},
     {"title": "mi.rtl.Consts.TConsts.fldReal4", "text": "Real 4 Byte positivos e negativos   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldReal4"},
     {"title": "mi.rtl.Consts.TConsts.fldReal4Positivo", "text": "Real 4 Byte positivos   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldReal4Positivo"},
     {"title": "mi.rtl.Consts.TConsts.fldReal4P", "text": "P = Real de mostrado x por 100 positivos e negativos   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldReal4P"},
     {"title": "mi.rtl.Consts.TConsts.fldReal4PPositivo", "text": "P = Real de mostrado x por 100 positivos   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldReal4PPositivo"},
     {"title": "mi.rtl.Consts.TConsts.FldLink", "text": "A constante FldLink indica que o campo contem um campo com 255 posições que contém um endereço para um página html ou não:       LINKS POSSÍVEIS:      &circ;L+1 = Endereço de uma página na web a ser acessada pelo browser.   &circ;L+2 = Nome de uma ação da lista actionItens.         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldLink"},
     {"title": "mi.rtl.Consts.TConsts.FldlinkUrl", "text": "Endereço de uma página na web a ser acessada pelo browser.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldlinkUrl"},
     {"title": "mi.rtl.Consts.TConsts.FldlinkAction", "text": "Nome de uma ação da lista actionItens.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldlinkAction"},
     {"title": "mi.rtl.Consts.TConsts.fldData", "text": "D = TipoData DD/DD/DD   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldData"},
     {"title": "mi.rtl.Consts.TConsts.fld_LData", "text": "d = TDataTime;Guarda a data compactada 'dd/dd/dd'   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fld_LData"},
     {"title": "mi.rtl.Consts.TConsts.fldLData", "text": "#1 = TDataTime;Guarda a data compactada '##/##/##'   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldLData"},
     {"title": "mi.rtl.Consts.TConsts.FldSData", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldSData"},
     {"title": "mi.rtl.Consts.TConsts.fldLHora", "text": "#2 = Longint;Guarda a hora compactada ##:##:##   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fldLHora"},
     {"title": "mi.rtl.Consts.TConsts.FldSHora", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldSHora"},
     {"title": "mi.rtl.Consts.TConsts.fld_LHora", "text": "h = Longint;Guarda a hora compactada hh:hh:hh   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fld_LHora"},
     {"title": "mi.rtl.Consts.TConsts.FldOperador", "text": "#3 = Byte indica que o campo é um operador matemático   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldOperador"},
     {"title": "mi.rtl.Consts.TConsts.FldDateTimeDos", "text": "#4 = Longint;Guarda a data e hora compactada ##/##/## ##:##:## e o ano não pode ser menor que 1980.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldDateTimeDos"},
     {"title": "mi.rtl.Consts.TConsts.FldSDateTimeDos", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldSDateTimeDos"},
     {"title": "mi.rtl.Consts.TConsts.CharShowPassword", "text": "Usado para omitir os caracteres que estão sendo digitados em qualquer tipo de campo   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharShowPassword"},
     {"title": "mi.rtl.Consts.TConsts.ChSP", "text": "A contante ChSP é igual CharShowPassword.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ChSP"},
     {"title": "mi.rtl.Consts.TConsts.CharShowPasswordChar", "text": "Caractere a ser mostrado quando CharShowPassword em fldField for igual = &circ;W   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharShowPasswordChar"},
     {"title": "mi.rtl.Consts.TConsts.CharExecAction", "text": "A contante CharExecAction é usado para associar ao campo atual uma classe TAction.       NOTA      O interpretador de Templates associa a ação do Template ao corrente campo.         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharExecAction"},
     {"title": "mi.rtl.Consts.TConsts.ChEA", "text": "A contante ChEA é igual CharExecAction.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ChEA"},
     {"title": "mi.rtl.Consts.TConsts.CharLupa_Left", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharLupa_Left"},
     {"title": "mi.rtl.Consts.TConsts.CharLupa_Right", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharLupa_Right"},
     {"title": "mi.rtl.Consts.TConsts.Char_Seta_para_Cima", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Seta_para_Cima"},
     {"title": "mi.rtl.Consts.TConsts.Char_Seta_para_Baixo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Seta_para_Baixo"},
     {"title": "mi.rtl.Consts.TConsts.Char_Seta_para_direita", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Seta_para_direita"},
     {"title": "mi.rtl.Consts.TConsts.Char_Seta_para_esquerda", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Seta_para_esquerda"},
     {"title": "mi.rtl.Consts.TConsts.Char_Seta_Back", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Seta_Back"},
     {"title": "mi.rtl.Consts.TConsts.Char_Seta_End", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Seta_End"},
     {"title": "mi.rtl.Consts.TConsts.Char_Seta_On", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Seta_On"},
     {"title": "mi.rtl.Consts.TConsts.Char_Seta_Em_breve_Flecha", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Seta_Em_breve_Flecha"},
     {"title": "mi.rtl.Consts.TConsts.Char_Seta_Top", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Seta_Top"},
     {"title": "mi.rtl.Consts.TConsts.Char_Seta_Cicle", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Seta_Cicle"},
     {"title": "mi.rtl.Consts.TConsts.Char_Bandeira_triangular", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Bandeira_triangular"},
     {"title": "mi.rtl.Consts.TConsts.Char_Ponto_Interrogacao", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Ponto_Interrogacao"},
     {"title": "mi.rtl.Consts.TConsts.Char_Ponto_Exclamacao", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Ponto_Exclamacao"},
     {"title": "mi.rtl.Consts.TConsts.Char_Dedo_Direita", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Dedo_Direita"},
     {"title": "mi.rtl.Consts.TConsts.Char_Proxima_Faixa", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Proxima_Faixa"},
     {"title": "mi.rtl.Consts.TConsts.Char_AvancoRapido", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_AvancoRapido"},
     {"title": "mi.rtl.Consts.TConsts.Char_Retrocesso_Rapido", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Retrocesso_Rapido"},
     {"title": "mi.rtl.Consts.TConsts.Char_Ultima_Faixa", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Ultima_Faixa"},
     {"title": "mi.rtl.Consts.TConsts.Char_GoBof", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_GoBof"},
     {"title": "mi.rtl.Consts.TConsts.Char_Next", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Next"},
     {"title": "mi.rtl.Consts.TConsts.Char_Prev", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Prev"},
     {"title": "mi.rtl.Consts.TConsts.Char_GoEof", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_GoEof"},
     {"title": "mi.rtl.Consts.TConsts.Char_Refresh", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Refresh"},
     {"title": "mi.rtl.Consts.TConsts.CharFieldName", "text": "A constante CharFieldName informa o nome do campo no Template. O nome do campo é passado após &circ;B e o mesmo não pode conter espaço em branco.       EXEMPLO DE USO      NewSitem(&tilde;Nome do produto: &tilde; SSSSSSSSSSSSSSSS`SSSSSSS&circ;BNome_do_Produto,nil);        ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharFieldName"},
     {"title": "mi.rtl.Consts.TConsts.ChFN", "text": "A constante ChFN é igual a CharFieldName, foi criada para facilitar seu uso.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ChFN"},
     {"title": "mi.rtl.Consts.TConsts.CharListComboBox", "text": "A contante CharListComboBox indica que o campo corrente possuem uma lista de opções do mesmo tipo campo.       EXEMPLO DE USO      NewSItem('&tilde;Dia de vencimento:&tilde;\\sssssssssss'+ChFN+'Dia'+           CreateOptions(2,NewSItem('Dia 10',                           NewSItem('Dia 15',                           NewSItem('Dia 20',                           NewSItem('Dia 25 e 26',                         nil)))))+           CharHint+'O template do campo deve ser do tamanho do maior item da lista.' +           '&tilde; dias&tilde;',         nil);     NOTA      O template do campo deve ser do tamanho do maior item da lista.         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharListComboBox"},
     {"title": "mi.rtl.Consts.TConsts.ChLCB", "text": "A contante ChLCB é igual a CharListComboBox   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ChLCB"},
     {"title": "mi.rtl.Consts.TConsts.TypeDate", "text": "the same Date Field with a Day/Month/Year sequence   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TypeDate"},
     {"title": "mi.rtl.Consts.TConsts._TypeDate", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#_TypeDate"},
     {"title": "mi.rtl.Consts.TConsts.TypeHora", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TypeHora"},
     {"title": "mi.rtl.Consts.TConsts.FldMemo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FldMemo"},
     {"title": "mi.rtl.Consts.TConsts.TypeMemo", "text": "Usado em conjunto com FldBLob   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TypeMemo"},
     {"title": "mi.rtl.Consts.TConsts.CTypeReal", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CTypeReal"},
     {"title": "mi.rtl.Consts.TConsts.CTypeAnsiChar", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CTypeAnsiChar"},
     {"title": "mi.rtl.Consts.TConsts.CTypeString", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CTypeString"},
     {"title": "mi.rtl.Consts.TConsts.CTypeInteger", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CTypeInteger"},
     {"title": "mi.rtl.Consts.TConsts.CTypeDate", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CTypeDate"},
     {"title": "mi.rtl.Consts.TConsts.CTypeHour", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CTypeHour"},
     {"title": "mi.rtl.Consts.TConsts.CTypeBlob", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CTypeBlob"},
     {"title": "mi.rtl.Consts.TConsts.CTypeOperator", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CTypeOperator"},
     {"title": "mi.rtl.Consts.TConsts.CTypeKnown", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CTypeKnown"},
     {"title": "mi.rtl.Consts.TConsts.efSync", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#efSync"},
     {"title": "mi.rtl.Consts.TConsts.efAsync", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#efAsync"},
     {"title": "mi.rtl.Consts.TConsts.SW_SHOWNORMAL", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#SW_SHOWNORMAL"},
     {"title": "mi.rtl.Consts.TConsts.Password_Admin", "text": "0 = Indica uso normal do produto; 1= Indica que a Password_admin esta logado   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Password_Admin"},
     {"title": "mi.rtl.Consts.TConsts.Admin_Logado", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Admin_Logado"},
     {"title": "mi.rtl.Consts.TConsts.FileModeDenyALL", "text": "Indica se o arquivo e exclusivo. Usado em Set_FileModeDenyALL   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FileModeDenyALL"},
     {"title": "mi.rtl.Consts.TConsts.FlushBuffer", "text": "     A constante FlushBuffer dar opção para usar cache de disco ou não.       NOTA      Se True então executa executa FlushDOSFile apos atualização dos arquivos.            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FlushBuffer"},
     {"title": "mi.rtl.Consts.TConsts.FlushBuffer_Disk", "text": "     A constante FlushBuffer_Disk é usado para indicar a banco de dados MarIcarai se deve usar cache de disco ou não.      NOTA      Se True executa executa SysFileFlushBuffers após atualização dos arquivos.            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FlushBuffer_Disk"},
     {"title": "mi.rtl.Consts.TConsts.FlushBuffer_Disk_Transaction", "text": "     A constante FlushBuffer_Disk_Transaction é usado para indicar ao banco de dados MarIcarai se deve usar cache de disco ou não.      NOTAS      False = habilita cache de gravação das transações   True = Desabilita cache de gravação das transações            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FlushBuffer_Disk_Transaction"},
     {"title": "mi.rtl.Consts.TConsts.OkTempoDeTentativas", "text": "     A constante OkTempoDeTentativas habilita o loop TempoDeTentativas nas leitura e escritas ao arquivo.      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#OkTempoDeTentativas"},
     {"title": "mi.rtl.Consts.TConsts.TempoDeTentativas", "text": "     A constante TempoDeTentativas é o tempo em segundos de tentativos nos processos de abertura, leitura e gravação de arquivos.      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TempoDeTentativas"},
     {"title": "mi.rtl.Consts.TConsts.UAnsiChar", "text": "Último caractere digitado   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#UAnsiChar"},
     {"title": "mi.rtl.Consts.TConsts.TeclaF", "text": "Usado em readKey para capturar as Teclas Alt, Ctrl, Shift etc.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TeclaF"},
     {"title": "mi.rtl.Consts.TConsts.Identification", "text": "     A constante Identification é usada para manter os dados do usuário logado ao sistema.       Id_branch : 0; //Número da filial do usuário logado   Id_user : 1; // Número do usuário Logado;   UserName : 'PauloSSPacheco'; // Nome do usuário logado   FullUserName : ''; //: Nome completo do usuário logado   password : ''; //: Password do usuário logado         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Identification"},
     {"title": "mi.rtl.Consts.TConsts.TimeCmTime", "text": "Número da filial do usuário logado Número do usuário Logado; Nome do usuário logado Nome completo do usuário logado Password do usuário logado   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TimeCmTime"},
     {"title": "mi.rtl.Consts.TConsts.CTRL_SLEEP_ENABLE", "text": "     A constante pública global CTRL_SLEEP_ENABLE indica se o sistema deve executar a aplicação central caso a rotina atual tiver em loop aguardando alguma ação.      Exemplo: Tentando abrir um arquivo onde o mesmo se encontra dentro de uma transação.         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CTRL_SLEEP_ENABLE"},
     {"title": "mi.rtl.Consts.TConsts.FORMS_APPLICATION_PROCESS_MESSAGES", "text": "     A contante FORMS_APPLICATION_PROCESS_MESSAGES indica se deve ou não executar a aplicação principal;      True : Processa as mensagem da aplicação gráfica quando necessário;   False : ignora.         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FORMS_APPLICATION_PROCESS_MESSAGES"},
     {"title": "mi.rtl.Consts.TConsts.FORMS_APPLICATION_SHOW_MODAL", "text": "     Se a constante FORMS_APPLICATION_SHOW_MODAL=True indica que FORMS_APPLICATION_PROCESS_MESSAGES=true e o método TForm_VCL_DmxEditor.ShowModal está em execução.      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FORMS_APPLICATION_SHOW_MODAL"},
     {"title": "mi.rtl.Consts.TConsts.HANDLE_INVALID", "text": "     A constante HANDLE_INVALID é usada para checar se um handle de um dispositivo é válido ou não      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#HANDLE_INVALID"},
     {"title": "mi.rtl.Consts.TConsts.LF", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#LF"},
     {"title": "mi.rtl.Consts.TConsts.CR", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CR"},
     {"title": "mi.rtl.Consts.TConsts.New_Line", "text": "     A constantes New_Line é usado em writeln para passar a linha.      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#New_Line"},
     {"title": "mi.rtl.Consts.TConsts.fmOpenRead", "text": "     Abre um arquivo com acesso somente leitura.       Mapa de bits : 0 = Bit 0 desligado.   REFERÊNCIA:      [fmopenread](https://www.freepascal.org/docs-html/rtl/sysutils/fmopenread.html)            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fmOpenRead"},
     {"title": "mi.rtl.Consts.TConsts.fmOpenWrite", "text": "     Abre um arquivo com acesso somente gravação.       Mapa de bits : 1 = Bit 0 ligado   REFERÊNCIA:      [fmopenwrite](https://www.freepascal.org/docs-html/rtl/sysutils/fmopenwrite.html)            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fmOpenWrite"},
     {"title": "mi.rtl.Consts.TConsts.fmOpenReadWrite", "text": "     Abre um arquivo com acesso de leitura e gravação       Mapa de bits : 10 = Bit 1 ligado   REFERÊNCIA:      [fmopenreadwrite](https://www.freepascal.org/docs-html/rtl/sysutils/fmopenreadwrite.html)            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fmOpenReadWrite"},
     {"title": "mi.rtl.Consts.TConsts.fmShareCompat", "text": "     A Constante fmShareCompat é usada na abertura do arquivo indicando no modo de compatibilidade com o DOS       Mapa de bits: 0 = bit 0(zero) desligado   REFERÊNCIA:      [fmshareexclusive](https://www.freepascal.org/docs-html/rtl/sysutils/fmsharecompat.html)            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fmShareCompat"},
     {"title": "mi.rtl.Consts.TConsts.fmShareExclusive", "text": "     Flag usado para tornar acesso ao arquivo no modo exclusivo.       NOTA      Binário: 10000 = Bit 4 ligado   As contantes usadas para abertura de arquivo da unit SysUtils é totalmente diferente das constantes usadas na unit system, por isso o exemplo abaixo não funciona.      REFERÊNCIA:      [fmshareexclusive](https://www.freepascal.org/docs-html/rtl/sysutils/fmshareexclusive.html)      EXEMPLO:       function TFormTests.fTest_Reset(Var f : file  ):longint;  Begin    AssignFile(f,'./doc/index.html');   {$i-}  Reset(f); {$i+}  Result := IoResult;    If Result &lt;&gt; 0    then ShowMessage('Error: '+ErrorMessage(result));  end;   procedure TFormTests.Button_Test_ResetClick(Sender: TObject);    Var      f1,f2 : file;  begin    fileMode := fmOpenReadWrite or fmShareExclusive  or fmShareCompat     ShowMessage(IntToStr(fileMode));     if fTest_Reset(f1) = 0    Then fTest_Reset(f2);     closeFile(f1);    closeFile(f2);  end;           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fmShareExclusive"},
     {"title": "mi.rtl.Consts.TConsts.fmShareDenyWrite", "text": "     Bloqueie o arquivo para que outros processos possam apenas ler.       Mapa de Bit: 100000 = Bit 5 ligado.   REFERÊNCIA:      [fmsharedenywrite](https://www.freepascal.org/docs-html/rtl/sysutils/fmsharedenywrite.html)            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fmShareDenyWrite"},
     {"title": "mi.rtl.Consts.TConsts.fmShareDenyRead", "text": "     Bloqueie o arquivo para que outros processos não possam ler.       Mapa de bits: 110000 = Bit 4 e 5 ligado.   REFERÊNCIA:      [fmsharedenyread](https://www.freepascal.org/docs-html/rtl/sysutils/fmsharedenyread.html)            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fmShareDenyRead"},
     {"title": "mi.rtl.Consts.TConsts.fmShareDenyNone", "text": "     Não bloqueie o arquivo.       Mapa de bits: 1000000 = Bit 6 ligado   REFERÊNCIA:      [fmsharedenynone](https://www.freepascal.org/docs-html/rtl/sysutils/fmsharedenynone.html)            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fmShareDenyNone"},
     {"title": "mi.rtl.Consts.TConsts.GLOBAL_RIGHTS", "text": "     A constante GLOBAL_RIGHTS é usada em FileCreate se o sistema for linux.       REFERÊNCIA      https://www.gnu.org/software/libc/manual/html_node/Permission-Bits.html            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#GLOBAL_RIGHTS"},
     {"title": "mi.rtl.Consts.TConsts.faReadOnly", "text": "     O atributo faReadOnly indica que o arquivo é somente para leitura.       REFERÊNCIA      https://www.freepascal.org/docs-html/rtl/sysutils/fareadonly.html   https://www.freepascal.org/docs-html/rtl/sysutils/findfirst.html      NOTA      Usado em TSearchRec e FindFirst            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#faReadOnly"},
     {"title": "mi.rtl.Consts.TConsts.faDirectory", "text": "     O atributo faDirectory indica que o arquivo é um diretório.       REFERÊNCIA      https://www.freepascal.org/docs-html/rtl/sysutils/fadirectory.html   https://www.freepascal.org/docs-html/rtl/sysutils/findfirst.html      NOTA      Usado em TSearchRec e FindFirst      EXEMPLO      procedure TFormTests.Button_GetInfoFileClick(Sender: TObject);    function GetInfoFile(FileName:string ; out info : TSearchRec): Integer;    begin      Result := FindFirst(FileName,faDirectory,Info);      if Result = 0      then Begin             ShowMessage('O Diretório '+fileName+' encontrado.');           end      else begin             ShowMessage('O diretório '+fileName+' não encontrado.');           end;   end;    var    Info: TSearchRec;    err : integer; begin   err := GetInfoFile(ExpandFileName('..'),info);   if err = 0 then   Begin     showMessage(intToStr(info.Attr));     FindClose(Info);   end; end;           ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#faDirectory"},
     {"title": "mi.rtl.Consts.TConsts.faNormal", "text": "     O atributo faNormal indica que é uma arquivo normal.       REFERÊNCIA      https://www.freepascal.org/docs-html/rtl/sysutils/fanormal.html      NOTA      Usado em FindFirst para indicar que arquivos normais devem ser incluídos no resultado.            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#faNormal"},
     {"title": "mi.rtl.Consts.TConsts.faAnyFile", "text": "     O atributo faAnyFile indica que corresponder a qualquer arquivo       REFERÊNCIA      https://www.freepascal.org/docs-html/rtl/sysutils/faanyfile.html      NOTA      Use este atributo na chamada FindFirst para localizar todos os arquivos correspondentes.            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#faAnyFile"},
     {"title": "mi.rtl.Consts.TConsts.faArchive", "text": "     O atributo faArchive indica que o bit do arquivo está definido.      REFERÊNCIA      https://www.freepascal.org/docs-html/rtl/sysutils/faarchive.html      NOTA      Significa que o arquivo tem o conjunto de bits de arquivo. Usado em TSearchRec e FindFirst            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#faArchive"},
     {"title": "mi.rtl.Consts.TConsts.fsFromBeginning", "text": "     O mapa de bits fsFromBeginning indica ao TFiles.FileSeek que o deslocamento é relativo ao primeiro byte do arquivo. Esta posição é baseada em zero. ou seja, o primeiro byte está no deslocamento 0 (zero).      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fsFromBeginning"},
     {"title": "mi.rtl.Consts.TConsts.fsFromCurrent", "text": "     O mapa de bits fsFromCurrent indica ao TFiles.FileSeek que o deslocamento é relativo à posição atual.      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fsFromCurrent"},
     {"title": "mi.rtl.Consts.TConsts.fsFromEnd", "text": "     O mapa de bits fsFromEnd indica ao TFiles.FileSeek que o deslocamento é relativo ao final do arquivo. Isso significa que o deslocamento só pode ser zero ou negativo neste caso.      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#fsFromEnd"},
     {"title": "mi.rtl.Consts.TConsts.ArquivoNaoEncontrado2", "text": "* *   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ArquivoNaoEncontrado2"},
     {"title": "mi.rtl.Consts.TConsts.PathNaoEncontrado", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#PathNaoEncontrado"},
     {"title": "mi.rtl.Consts.TConsts.muitosArquivosAbertoSimultaneamente", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#muitosArquivosAbertoSimultaneamente"},
     {"title": "mi.rtl.Consts.TConsts.AcessoNegado5", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#AcessoNegado5"},
     {"title": "mi.rtl.Consts.TConsts.Seek_fora_da_faixa_do_arquivo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Seek_fora_da_faixa_do_arquivo"},
     {"title": "mi.rtl.Consts.TConsts.ErroDeMemoria", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErroDeMemoria"},
     {"title": "mi.rtl.Consts.TConsts.ErroFormatoInvalido", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErroFormatoInvalido"},
     {"title": "mi.rtl.Consts.TConsts.NaoPodeExecutarTrocaDeNomesEntreDiscos", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#NaoPodeExecutarTrocaDeNomesEntreDiscos"},
     {"title": "mi.rtl.Consts.TConsts.ArquivoNaoEncontrado18", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ArquivoNaoEncontrado18"},
     {"title": "mi.rtl.Consts.TConsts.DiscoProtegidoContraEscrita", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#DiscoProtegidoContraEscrita"},
     {"title": "mi.rtl.Consts.TConsts.UnidadeDesconhecida", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#UnidadeDesconhecida"},
     {"title": "mi.rtl.Consts.TConsts.DriveNaoEstaPronto", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#DriveNaoEstaPronto"},
     {"title": "mi.rtl.Consts.TConsts.ErroDeDadosCRC", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErroDeDadosCRC"},
     {"title": "mi.rtl.Consts.TConsts.Falha_Geral", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Falha_Geral"},
     {"title": "mi.rtl.Consts.TConsts.AcessoNegado32", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#AcessoNegado32"},
     {"title": "mi.rtl.Consts.TConsts.ErroViolacaoDeLacre", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErroViolacaoDeLacre"},
     {"title": "mi.rtl.Consts.TConsts.MudancaDeDiscoInvalida", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#MudancaDeDiscoInvalida"},
     {"title": "mi.rtl.Consts.TConsts.Campo_nao_existe_no_registro_do_arquivo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Campo_nao_existe_no_registro_do_arquivo"},
     {"title": "mi.rtl.Consts.TConsts.Tipo_em_memoria_incompativel_com_o_tipo_do_campo_no_arquivo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Tipo_em_memoria_incompativel_com_o_tipo_do_campo_no_arquivo"},
     {"title": "mi.rtl.Consts.TConsts.Erro_de_sintaxe_na_expressao", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Erro_de_sintaxe_na_expressao"},
     {"title": "mi.rtl.Consts.TConsts.Tipos_de_campos_incompativeis", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Tipos_de_campos_incompativeis"},
     {"title": "mi.rtl.Consts.TConsts.Tipos_de_campo_nao_conhecido", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Tipos_de_campo_nao_conhecido"},
     {"title": "mi.rtl.Consts.TConsts.Campo_em_duplicidade_na_estrutura_da_tabela", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Campo_em_duplicidade_na_estrutura_da_tabela"},
     {"title": "mi.rtl.Consts.TConsts.Arquivo_ja_existe", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Arquivo_ja_existe"},
     {"title": "mi.rtl.Consts.TConsts.NaoPodeCriarDiretorio", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#NaoPodeCriarDiretorio"},
     {"title": "mi.rtl.Consts.TConsts.ParametroInvalido", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ParametroInvalido"},
     {"title": "mi.rtl.Consts.TConsts.ErroDeLeituraEmDisco", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErroDeLeituraEmDisco"},
     {"title": "mi.rtl.Consts.TConsts.ErroDeGravacaoEmDisco", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErroDeGravacaoEmDisco"},
     {"title": "mi.rtl.Consts.TConsts.ErroArquivoFechado", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErroArquivoFechado"},
     {"title": "mi.rtl.Consts.TConsts.ErroArquivoFechadoParaEntrada", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErroArquivoFechadoParaEntrada"},
     {"title": "mi.rtl.Consts.TConsts.ErrorArquivoFechadoParaSaida", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErrorArquivoFechadoParaSaida"},
     {"title": "mi.rtl.Consts.TConsts.Formato_numerico_invalido_ou_incompativel", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Formato_numerico_invalido_ou_incompativel"},
     {"title": "mi.rtl.Consts.TConsts.DiscoCheio", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#DiscoCheio"},
     {"title": "mi.rtl.Consts.TConsts.ErroDeEscritaNoDispositivoDeSaidaImpressora", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErroDeEscritaNoDispositivoDeSaidaImpressora"},
     {"title": "mi.rtl.Consts.TConsts.ErroFaltaHardware", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErroFaltaHardware"},
     {"title": "mi.rtl.Consts.TConsts.Err_Division_by_zero", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Err_Division_by_zero"},
     {"title": "mi.rtl.Consts.TConsts.ErrorNaChecagemDeFaixa", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErrorNaChecagemDeFaixa"},
     {"title": "mi.rtl.Consts.TConsts.Objeto_Nao_Inicializado", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Objeto_Nao_Inicializado"},
     {"title": "mi.rtl.Consts.TConsts.Chamada_a_um_Metodo_Abstrato", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Chamada_a_um_Metodo_Abstrato"},
     {"title": "mi.rtl.Consts.TConsts.Stream_Registration_error", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Stream_Registration_error"},
     {"title": "mi.rtl.Consts.TConsts.Collection_Index_Out_of_range", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Collection_Index_Out_of_range"},
     {"title": "mi.rtl.Consts.TConsts.ErrorTentativa_de_abrir_um_arquivo_aberto", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ErrorTentativa_de_abrir_um_arquivo_aberto"},
     {"title": "mi.rtl.Consts.TConsts.Erro_Tentativa_de_excluir_um_registro_excluido", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Erro_Tentativa_de_excluir_um_registro_excluido"},
     {"title": "mi.rtl.Consts.TConsts.Erro_Tentativa_de_ler_um_registro_excluido", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Erro_Tentativa_de_ler_um_registro_excluido"},
     {"title": "mi.rtl.Consts.TConsts.Erro_outro_usuario_da_rede_alterou_o_registro", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Erro_outro_usuario_da_rede_alterou_o_registro"},
     {"title": "mi.rtl.Consts.TConsts.Estrutura_da_tabela_esta_danificada", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Estrutura_da_tabela_esta_danificada"},
     {"title": "mi.rtl.Consts.TConsts.Tentativa_de_gravar_em_um_registro_compartilhado_sem_que_o_mesmo_esteja_travado", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Tentativa_de_gravar_em_um_registro_compartilhado_sem_que_o_mesmo_esteja_travado"},
     {"title": "mi.rtl.Consts.TConsts.AppCli_Evento_Executado_Por_Outro_Processo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#AppCli_Evento_Executado_Por_Outro_Processo"},
     {"title": "mi.rtl.Consts.TConsts.AppCLi_Svr_Api_Nao_Instalado", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#AppCLi_Svr_Api_Nao_Instalado"},
     {"title": "mi.rtl.Consts.TConsts.TTransaction_Commit_esperado", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TTransaction_Commit_esperado"},
     {"title": "mi.rtl.Consts.TConsts.Erro_Expression_is_not_valid", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Erro_Expression_is_not_valid"},
     {"title": "mi.rtl.Consts.TConsts.Erro_Many_Parenthesis", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Erro_Many_Parenthesis"},
     {"title": "mi.rtl.Consts.TConsts.Erro_Many_operators", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Erro_Many_operators"},
     {"title": "mi.rtl.Consts.TConsts.Erro_Operador_aritmetico_esperado", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Erro_Operador_aritmetico_esperado"},
     {"title": "mi.rtl.Consts.TConsts.Err_CalcVal_Not_Ready_Number", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Err_CalcVal_Not_Ready_Number"},
     {"title": "mi.rtl.Consts.TConsts.REC_TOO_LARGE", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#REC_TOO_LARGE"},
     {"title": "mi.rtl.Consts.TConsts.REC_TOO_SMALL", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#REC_TOO_SMALL"},
     {"title": "mi.rtl.Consts.TConsts.KeyTooLarge", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#KeyTooLarge"},
     {"title": "mi.rtl.Consts.TConsts.RecSizeMismatch", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#RecSizeMismatch"},
     {"title": "mi.rtl.Consts.TConsts.KeySizeMismatch", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#KeySizeMismatch"},
     {"title": "mi.rtl.Consts.TConsts.MemOverflow", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#MemOverflow"},
     {"title": "mi.rtl.Consts.TConsts.ArqIndexInconsistente", "text": "turbo access. Erros Db e DaAccess   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ArqIndexInconsistente"},
     {"title": "mi.rtl.Consts.TConsts.O_gerente_de_transacoes_esta_inativo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#O_gerente_de_transacoes_esta_inativo"},
     {"title": "mi.rtl.Consts.TConsts.Erro_Excecao_inesperada", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Erro_Excecao_inesperada"},
     {"title": "mi.rtl.Consts.TConsts.Acesso_negado_ao_arquivo_por_falta_de_autorizacao_de_seu_superior_imediato", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Acesso_negado_ao_arquivo_por_falta_de_autorizacao_de_seu_superior_imediato"},
     {"title": "mi.rtl.Consts.TConsts.Registro_nao_localizado", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Registro_nao_localizado"},
     {"title": "mi.rtl.Consts.TConsts.O_Evento_OnEnter_Retornou_falso", "text": "&gt; Erro retornados nas buscas de registros   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#O_Evento_OnEnter_Retornou_falso"},
     {"title": "mi.rtl.Consts.TConsts.O_Evento_OnExit_Retornou_falso", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#O_Evento_OnExit_Retornou_falso"},
     {"title": "mi.rtl.Consts.TConsts.Attempt_to_insert_record_without_is_selected", "text": "Erro gerado ao tentar incluir um registro sem que o mesmo não esteja no modo appending   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Attempt_to_insert_record_without_is_selected"},
     {"title": "mi.rtl.Consts.TConsts.attempt_to_edit_a_record_not_selecting", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#attempt_to_edit_a_record_not_selecting"},
     {"title": "mi.rtl.Consts.TConsts.LastError", "text": "     Após uma chamada ao sistema operacional a variável publica global LastError guarda 0 (zero) se sucesso ou o código do erro se houve fracasso.      A função LastError é atualizada em SetResult.         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#LastError"},
     {"title": "mi.rtl.Consts.TConsts.TaStatus", "text": "     A variável pública global TaStatus indica o status da última operação de acesso ao banco de dados Turbo Access.      Nota: Sua função é semelhante a LastError;         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TaStatus"},
     {"title": "mi.rtl.Consts.TConsts.OK", "text": "     A variável pública global OK indica se houver erro na última ação.      Nota: Atualizada em SetResult onde OK=true houve sucesso e OK=false houve fracasso.         ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#OK"},
     {"title": "mi.rtl.Consts.TConsts.FileMode", "text": "A constante pública FileMode guarda o modo padrão de abertura dos arquivos;       NOTAS:      Usada em FileOpen e FileCreate.   O mapa de bits usado FileMode é inicializado com:      Const FileMode : word = fmOpenReadWrite;         EXEMPLO     procedure TMi_Rtl_Tests.Action_test_FileCreateExecute(Sender: TObject);    var     aHandle,aHandle2,aHandle3 :  TMI_ui_types.THandle;     err:integer;     s : AnsiString; begin   with TMI_ui_types do   begin     err := FileCreate('text.txt',fileMode, ShareMode ,aHandle);     if err = 0     then begin            SysMessageBox('Arquivo text.txt criado na pasta corrente.','Action_test_FileCreateExecute',false);            s := ExpandFileName('text.txt');             FileMode := fmOpenReadWrite;            ShareMode := fmShareCompat or fmShareDenyNone;             err := FileOpen(s,FileMode, shareMode,aHandle2);            if err = 0            Then begin                   SysMessageBox('Arquivo text.txt aberto com o modo fmOpenReadWrite e atributo fmShareCompat or fmShareDenyNone.','Action_test_FileCreateExecute',false);                   FileClose(aHandle2);                 end            else SysMessageBox(TStrError.ErrorMessage(err),'Action_test_FileCreateExecute',true);             ShareMode := fmShareCompat or fmShareExclusive;            err := FileOpen(s,fileMode,ShareMode ,aHandle3);            if err = 0            Then begin                   SysMessageBox('Arquivo text.txt aberto com o modo fmOpenReadWrite e atributo fmShareCompat or fmShareExclusive.','Action_test_FileCreateExecute',false);                   FileClose(aHandle3);                 end            else SysMessageBox(TStrError.ErrorMessage(err),'Action_test_FileCreateExecute',true);              FileClose(aHandle);          end          else SysMessageBox(TStrError.ErrorMessage(err),'Action_test_FileCreateExecute',true);   end; end;        ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FileMode"},
     {"title": "mi.rtl.Consts.TConsts.FileModeAnt", "text": "     A function SetFileMode salva a variável FileModeAnt atual antes de modificar fileMode.;      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FileModeAnt"},
     {"title": "mi.rtl.Consts.TConsts.ShareMode", "text": "A constante pública ShareMode guarda o modo padrão de compartilhamento na abertura dos arquivos;       NOTAS:      Usada em FileOpen e FileCreate.   O mapa de bits usado ShareMode é inicializado com:      Const ShareMode : cardinal = fmShareCompat or fmShareDenyNone;         EXEMPLO      procedure TMi_Rtl_Tests.Action_test_FileCreateExecute(Sender: TObject);    var     aHandle,aHandle2,aHandle3 :  TMI_ui_types.THandle;     err:integer;     s : AnsiString; begin   with TMI_ui_types do   begin     err := FileCreate('text.txt',fileMode, ShareMode ,aHandle);     if err = 0     then begin            SysMessageBox('Arquivo text.txt criado na pasta corrente.','Action_test_FileCreateExecute',false);            s := ExpandFileName('text.txt');             FileMode := fmOpenReadWrite;            ShareMode := fmShareCompat or fmShareDenyNone;             err := FileOpen(s,FileMode, shareMode,aHandle2);            if err = 0            Then begin                   SysMessageBox('Arquivo text.txt aberto com o modo fmOpenReadWrite e atributo fmShareCompat or fmShareDenyNone.','Action_test_FileCreateExecute',false);                   FileClose(aHandle2);                 end            else SysMessageBox(TStrError.ErrorMessage(err),'Action_test_FileCreateExecute',true);             ShareMode := fmShareCompat or fmShareExclusive;            err := FileOpen(s,fileMode,ShareMode ,aHandle3);            if err = 0            Then begin                   SysMessageBox('Arquivo text.txt aberto com o modo fmOpenReadWrite e atributo fmShareCompat or fmShareExclusive.','Action_test_FileCreateExecute',false);                   FileClose(aHandle3);                 end            else SysMessageBox(TStrError.ErrorMessage(err),'Action_test_FileCreateExecute',true);              FileClose(aHandle);          end          else SysMessageBox(TStrError.ErrorMessage(err),'Action_test_FileCreateExecute',true);   end; end;        ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ShareMode"},
     {"title": "mi.rtl.Consts.TConsts.MaxDirSizeFat32", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#MaxDirSizeFat32"},
     {"title": "mi.rtl.Consts.TConsts.MaxDirSizeNTFS", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#MaxDirSizeNTFS"},
     {"title": "mi.rtl.Consts.TConsts.MaxDirSizeLinux", "text": "     Máximo de pastas dos sistemas de arquivo do linux é limitada ao espaço em disco.      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#MaxDirSizeLinux"},
     {"title": "mi.rtl.Consts.TConsts.MaxDirSize", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#MaxDirSize"},
     {"title": "mi.rtl.Consts.TConsts.Auto_Add_Line_Default", "text": "     A contante Auto_Add_Line_Default é usada na construção de formulários de entrada automaticamente.       NOTA      true o formulário de entrada de dados insere uma linha em branco automaticamente.            ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Auto_Add_Line_Default"},
     {"title": "mi.rtl.Consts.TConsts.Comma", "text": "     Separador de milhar nas mascaras internas ao campo.      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Comma"},
     {"title": "mi.rtl.Consts.TConsts.showComma", "text": "     Separador de números na visualização }      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#showComma"},
     {"title": "mi.rtl.Consts.TConsts.DecPt", "text": "     Ponto decimal usado nas mascaras internas ao campo.      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#DecPt"},
     {"title": "mi.rtl.Consts.TConsts.showDecPt", "text": "     Char decimal point display }      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#showDecPt"},
     {"title": "mi.rtl.Consts.TConsts.CloseParenthesis", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CloseParenthesis"},
     {"title": "mi.rtl.Consts.TConsts.OpenParenthesis", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#OpenParenthesis"},
     {"title": "mi.rtl.Consts.TConsts.CharDelimiter_0", "text": "A constante CharDelimiter_0 indica qua a sequẽncia seguite é um campo de dados   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharDelimiter_0"},
     {"title": "mi.rtl.Consts.TConsts.CharDelimiter_1", "text": "A constante CharDelimiter_1 indica qua a sequẽncia seguite é um campo de dados   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharDelimiter_1"},
     {"title": "mi.rtl.Consts.TConsts.CharDelimiter_2", "text": "A constante CharDelimiter_2 separa nome da tabela do nome do campo   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharDelimiter_2"},
     {"title": "mi.rtl.Consts.TConsts.CharDelimiter_3", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharDelimiter_3"},
     {"title": "mi.rtl.Consts.TConsts.CharShowzeroes", "text": "A constante CharShowzeroes inicializa o registro com zeros   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharShowzeroes"},
     {"title": "mi.rtl.Consts.TConsts.CharFillvalue", "text": "Se o campo for numérico, preencha com '#0'(AccNormal) se for alfanumérico, preencha com ' ' AccNormal   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharFillvalue"},
     {"title": "mi.rtl.Consts.TConsts.CharAccHidden", "text": "A contante CharAccHidden torna o campo invisível   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharAccHidden"},
     {"title": "mi.rtl.Consts.TConsts.ChAH", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ChAH"},
     {"title": "mi.rtl.Consts.TConsts.CharAccSkip", "text": "A constante CharAccSkip indica que o campo não pode receber o foco.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharAccSkip"},
     {"title": "mi.rtl.Consts.TConsts.ChAS", "text": "A constante ChAS é igual a CharAccSkip   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ChAS"},
     {"title": "mi.rtl.Consts.TConsts.CharAccReadOnly", "text": "A constante CharAccReadOnly* informa que o tipo de acesso ao campo é somente para leitura e não pode ser editado.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharAccReadOnly"},
     {"title": "mi.rtl.Consts.TConsts.ChARO", "text": "A constante ChARO é igual a CharAccReadOnly   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ChARO"},
     {"title": "mi.rtl.Consts.TConsts.CharAllZeroes", "text": "A constante CharAllZeroes avisa para iniciar com #0 todos os campos   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharAllZeroes"},
     {"title": "mi.rtl.Consts.TConsts.CharProviderFlag", "text": "O caractere de controle CharProviderFlag é usado pelo método TUiDmxScroller_sql.CreateTables para indicar que o caractere seguinte tem um sinalizador usado para criar tabelas no banco de dados.       SINALIZADORES      0 = pfInUpdate : As alterações no campo devem ser propagadas para o banco de dados..   1 = pfInWhere : O campo deve ser usado na cláusula WHERE de uma instrução de atualização no caso de upWhereChanged.   2 = pfInKey : Campo é um campo chave e usado na cláusula WHERE de uma instrução de atualização.   3 = pfHidden : O valor deste campo deve ser atualizado após a inserção.   4 = pfRefreshOnInsert : O valor deste campo deve ser atualizado após a inserção.   5 = pfRefreshOnUpdate : O valor deste campo deve ser atualizado após a atualização.   6 = pfInKeyPrimary : Campo é um campo chave primária e usado na cláusula WHERE de uma instrução de atualização.   7 = pfInAutoIncrement : Campo é um campo autoincremental e usado em uma instrução de atualização.      NOTAS      O campos com access = &circ;S automaticmanente o atributo MIProviderFlag terá [pfHidden]   O valor defaults de MiProviderFlags := [pfInUpdate,pfInWhere];   Campos de chave primária      Ao atualizar registros, TSQLQuery precisa saber quais campos compõem a chave primária que pode ser usada para atualizar o registro e quais campos devem ser atualizados: com base nessas informações, ele constrói um comando SQL UPDATE, INSERT ou DELETE.   A construção da instrução SQL é controlada pela propriedade UsePrimaryKeyAsKey e pelas propriedades ProviderFlags .   A propriedade Providerflags é um conjunto de 3 sinalizadores:      pfInkey : O campo faz parte da chave primária   pfInWhere : O campo deve ser utilizado na cláusula WHERE das instruções SQL.   pfInUpdate : Atualizações ou inserções devem incluir este campo. Por padrão, ProviderFlags consiste apenas em pfInUpdate .      REFERÊNCIA      [Working_With_TSQLQuery](https://wiki.freepascal.org/Working_With_TSQLQuery)               ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharProviderFlag"},
     {"title": "mi.rtl.Consts.TConsts.CharpfInUpdate", "text": "As alterações no campo devem ser propagadas para o banco de dados..   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharpfInUpdate"},
     {"title": "mi.rtl.Consts.TConsts.CharpfInWhere", "text": "O campo deve ser usado na cláusula WHERE de uma instrução de atualização no caso de upWhereChanged.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharpfInWhere"},
     {"title": "mi.rtl.Consts.TConsts.CharPfInKey", "text": "Campo é um campo chave e usado na cláusula WHERE de uma instrução de atualização.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharPfInKey"},
     {"title": "mi.rtl.Consts.TConsts.CharPfHidden", "text": "O valor deste campo deve ser atualizado após a inserção.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharPfHidden"},
     {"title": "mi.rtl.Consts.TConsts.CharPfRefreshOnInsert", "text": "O valor deste campo deve ser atualizado após a inserção.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharPfRefreshOnInsert"},
     {"title": "mi.rtl.Consts.TConsts.CharPfRefreshOnUpdate", "text": "O valor deste campo deve ser atualizado após a atualização.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharPfRefreshOnUpdate"},
     {"title": "mi.rtl.Consts.TConsts.CharPfInKeyPrimary", "text": "Campo é um campo chave primária e usado na cláusula WHERE de uma instrução de atualização.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharPfInKeyPrimary"},
     {"title": "mi.rtl.Consts.TConsts.CharPfInKeyPrimaryAutoIncrement", "text": "Campo é um campo autoincremental e usado em uma instrução de atualização.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharPfInKeyPrimaryAutoIncrement"},
     {"title": "mi.rtl.Consts.CharForeignKey", "text": "Produz um erro indicando que a exclusão ou atualização criaria uma violação de restrição de chave estrangeira. Se a restrição for adiada, esse erro será produzido no momento da verificação da restrição se ainda existirem linhas de referência. Esta é a ação padrão.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharForeignKey"},
     {"title": "mi.rtl.Consts.TConsts.CharFk_No_Action", "text": "Produz um erro indicando que a exclusão ou atualização criaria uma violação de restrição de chave estrangeira. Isso é o mesmo que, NO ACTION exceto que o cheque não é adiável.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharFk_No_Action"},
     {"title": "mi.rtl.Consts.TConsts.CharFk_Restrict", "text": "Exclua todas as linhas que fazem referência à linha excluída ou atualize os valores das colunas de referência para os novos valores das colunas referenciadas, respectivamente.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharFk_Restrict"},
     {"title": "mi.rtl.Consts.TConsts.CharFk_Cascade", "text": "Defina a(s) coluna(s) de referência como nula.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharFk_Cascade"},
     {"title": "mi.rtl.Consts.TConsts.CharFk_Set_Null", "text": "A contante CharFk_Set_Null defina a(s) coluna(s) de referência para seus valores padrão. (Deve haver uma linha na tabela referenciada que corresponda aos valores padrão, se eles não forem nulos, ou a operação falhará.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharFk_Set_Null"},
     {"title": "mi.rtl.Consts.TConsts.CharFk_Set_Default", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharFk_Set_Default"},
     {"title": "mi.rtl.Consts.TConsts.CharHint", "text": "O A constante CharHint é usado para documentar o campo e indica que todo o texto até o próximo caractere de controle será o conteúdo do campo HelpCtx_Hint.      EXEMPLO ```pascal  Resourcestring tmp_Alunos_Idade = '\\BB'+ChFN+'idade'+CharUpperlimit+#64+ CharHint+'A idade do aluno. Valores válidos 1 a 64'+ CharHintPorque+'Este campo é necessário para que se agrupe o alunos baseado em sua faixa etária'+ CharHintOnde+'Ele será usado pelo coordenador ao classificar a turma';  tmp_Alunos_Matricula = \\IIII'+ChFN+'matricula'+CharHint+'A matricula do aluno é um campo sequencial e calculado ao incluir o registro';  tmp_Alunos = '&tilde; Idade:&tilde;'+tmp_Alunos_Idade+lf+ '&tilde; Matricula:&tilde;'+tmp_Alunos_Matricula+lf;      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharHint"},
     {"title": "mi.rtl.Consts.TConsts.ChH", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ChH"},
     {"title": "mi.rtl.Consts.TConsts.CharHintPorque", "text": "A contante CharHintPorque informa que todo texto até o próximo delimitador contém informações para o campo HelpCtx_Porque   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharHintPorque"},
     {"title": "mi.rtl.Consts.TConsts.CharHintOnde", "text": "A contante CharHintOnde informa que todo texto até o próximo delimitador contém informações para o campo HelpCtx_Onde   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CharHintOnde"},
     {"title": "mi.rtl.Consts.TConsts.Delimiters", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Delimiters"},
     {"title": "mi.rtl.Consts.TConsts.SinalDireita", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#SinalDireita"},
     {"title": "mi.rtl.Consts.TConsts.SinalDeMaisAtivo", "text": "     Mostra o sinal de + a direita dos campos numéricos      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#SinalDeMaisAtivo"},
     {"title": "mi.rtl.Consts.TConsts.MaskIsNumber", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#MaskIsNumber"},
     {"title": "mi.rtl.Consts.TConsts.Delta_Locate", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Delta_Locate"},
     {"title": "mi.rtl.Consts.TConsts.ConvertIdioma_Nil", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ConvertIdioma_Nil"},
     {"title": "mi.rtl.Consts.TConsts.Html_Nivel1", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Html_Nivel1"},
     {"title": "mi.rtl.Consts.TConsts.Html_Nivel2", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Html_Nivel2"},
     {"title": "mi.rtl.Consts.TConsts.Html_Nivel3", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Html_Nivel3"},
     {"title": "mi.rtl.Consts.TConsts.Html_Nivel4", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Html_Nivel4"},
     {"title": "mi.rtl.Consts.TConsts.Char_Nivel1", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Nivel1"},
     {"title": "mi.rtl.Consts.TConsts.Char_Nivel2", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Nivel2"},
     {"title": "mi.rtl.Consts.TConsts.Char_Nivel3", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Nivel3"},
     {"title": "mi.rtl.Consts.TConsts.Char_Nivel4", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Char_Nivel4"},
     {"title": "mi.rtl.Consts.TConsts.Array_Of_Char", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Array_Of_Char"},
     {"title": "mi.rtl.Consts.TConsts.PortaDaImpressora", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#PortaDaImpressora"},
     {"title": "mi.rtl.Consts.TConsts.opcaoRedireciona", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#opcaoRedireciona"},
     {"title": "mi.rtl.Consts.TConsts.RedirecionaImpressora", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#RedirecionaImpressora"},
     {"title": "mi.rtl.Consts.TConsts.redirecionaImpNul", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#redirecionaImpNul"},
     {"title": "mi.rtl.Consts.TConsts.NomeRedireciona", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#NomeRedireciona"},
     {"title": "mi.rtl.Consts.TConsts.ApartirDeQuePagina", "text": "Caso ApartirDeQuePagina &gt; 1 então redireciona para NUL todas as paginas dos relatórios ate que ContaPagina seja = ApartirDeQuePagina   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#ApartirDeQuePagina"},
     {"title": "mi.rtl.Consts.TConsts.PaginaInicial", "text": "Pagina inicial na listagem   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#PaginaInicial"},
     {"title": "mi.rtl.Consts.TConsts.contalinha", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#contalinha"},
     {"title": "mi.rtl.Consts.TConsts.contaPagina", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#contaPagina"},
     {"title": "mi.rtl.Consts.TConsts.CmNulo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmNulo"},
     {"title": "mi.rtl.Consts.TConsts.CmDbNextRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbNextRec"},
     {"title": "mi.rtl.Consts.TConsts.CmDbPrevRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbPrevRec"},
     {"title": "mi.rtl.Consts.TConsts.CmDbNextRecValid", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbNextRecValid"},
     {"title": "mi.rtl.Consts.TConsts.CmDbPrevRecValid", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbPrevRecValid"},
     {"title": "mi.rtl.Consts.TConsts.CmDbFindRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbFindRec"},
     {"title": "mi.rtl.Consts.TConsts.CmDbSearchRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbSearchRec"},
     {"title": "mi.rtl.Consts.TConsts.CmDbGoEof", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbGoEof"},
     {"title": "mi.rtl.Consts.TConsts.CmDbGoBof", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbGoBof"},
     {"title": "mi.rtl.Consts.TConsts.CmDbLocaliza", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbLocaliza"},
     {"title": "mi.rtl.Consts.TConsts.CmNewRecord", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmNewRecord"},
     {"title": "mi.rtl.Consts.TConsts.CmZeroizeRecord", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmZeroizeRecord"},
     {"title": "mi.rtl.Consts.TConsts.CmEvaluateRecord", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmEvaluateRecord"},
     {"title": "mi.rtl.Consts.TConsts.CmEditDlg", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmEditDlg"},
     {"title": "mi.rtl.Consts.TConsts.cmMyOK", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmMyOK"},
     {"title": "mi.rtl.Consts.TConsts.cmMyCancel", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmMyCancel"},
     {"title": "mi.rtl.Consts.TConsts.cmPrint", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmPrint"},
     {"title": "mi.rtl.Consts.TConsts.CmImport", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmImport"},
     {"title": "mi.rtl.Consts.TConsts.CmProcess", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmProcess"},
     {"title": "mi.rtl.Consts.TConsts.CmExecEndProc", "text": "Usado para acessar a pesquisa associado ao campo   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmExecEndProc"},
     {"title": "mi.rtl.Consts.TConsts.CmExecComboBox", "text": "Usado para acessar a visao associada ao campo. Usado para visualizar CamposEnumerado e lista de forma geral   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmExecComboBox"},
     {"title": "mi.rtl.Consts.TConsts.CmExecCommand", "text": "O comando vinculado ao campo focado e disparado para apliication.HanleEvent() se   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmExecCommand"},
     {"title": "mi.rtl.Consts.TConsts.CmCreate_Shortcut", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmCreate_Shortcut"},
     {"title": "mi.rtl.Consts.TConsts.CmVisualizar", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmVisualizar"},
     {"title": "mi.rtl.Consts.TConsts.CmExport_Stru", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmExport_Stru"},
     {"title": "mi.rtl.Consts.TConsts.CmExport", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmExport"},
     {"title": "mi.rtl.Consts.TConsts.CmInt", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmInt"},
     {"title": "mi.rtl.Consts.TConsts.TCmLivre", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TCmLivre"},
     {"title": "mi.rtl.Consts.TConsts.TCmCommands", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TCmCommands"},
     {"title": "mi.rtl.Consts.TConsts.TCmDb", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TCmDb"},
     {"title": "mi.rtl.Consts.TConsts.TCmDbView", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TCmDbView"},
     {"title": "mi.rtl.Consts.TConsts.TCmOutros", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#TCmOutros"},
     {"title": "mi.rtl.Consts.TConsts.CmNortSoft", "text": "**   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmNortSoft"},
     {"title": "mi.rtl.Consts.TConsts.CmDbAddRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbAddRec"},
     {"title": "mi.rtl.Consts.TConsts.CmDbDeleteRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbDeleteRec"},
     {"title": "mi.rtl.Consts.TConsts.CmDbGetRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbGetRec"},
     {"title": "mi.rtl.Consts.TConsts.CmDbPutRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbPutRec"},
     {"title": "mi.rtl.Consts.TConsts.CmDbUpdateRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbUpdateRec"},
     {"title": "mi.rtl.Consts.TConsts.CmDbSearchTop", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbSearchTop"},
     {"title": "mi.rtl.Consts.TConsts.CmDbSearchKey", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbSearchKey"},
     {"title": "mi.rtl.Consts.TConsts.CmDbUsedRecs_Valid", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbUsedRecs_Valid"},
     {"title": "mi.rtl.Consts.TConsts.CmOkEscrevaParametrosDosRelatorios", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmOkEscrevaParametrosDosRelatorios"},
     {"title": "mi.rtl.Consts.TConsts.CmDbSelecionaIndice", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbSelecionaIndice"},
     {"title": "mi.rtl.Consts.TConsts.LivreCmVisualisa", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#LivreCmVisualisa"},
     {"title": "mi.rtl.Consts.TConsts.CmQuitInterno", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmQuitInterno"},
     {"title": "mi.rtl.Consts.TConsts.CmSobre", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmSobre"},
     {"title": "mi.rtl.Consts.TConsts.CmDbOnEnter", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbOnEnter"},
     {"title": "mi.rtl.Consts.TConsts.CmDbOnExit", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbOnExit"},
     {"title": "mi.rtl.Consts.TConsts.cmCores", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmCores"},
     {"title": "mi.rtl.Consts.TConsts.CmF7", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmF7"},
     {"title": "mi.rtl.Consts.TConsts.CmDbLabel_DoubleClick", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbLabel_DoubleClick"},
     {"title": "mi.rtl.Consts.TConsts.cmDbView_DoubleClick", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDbView_DoubleClick"},
     {"title": "mi.rtl.Consts.TConsts.CmDbOrdemCressante", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbOrdemCressante"},
     {"title": "mi.rtl.Consts.TConsts.CmDbOrdemDecrescente", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbOrdemDecrescente"},
     {"title": "mi.rtl.Consts.TConsts.CmDbSelecColunaAtual", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbSelecColunaAtual"},
     {"title": "mi.rtl.Consts.TConsts.CmMouseDownmbRightButton", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmMouseDownmbRightButton"},
     {"title": "mi.rtl.Consts.TConsts.CmReindex", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmReindex"},
     {"title": "mi.rtl.Consts.TConsts.CmCadastraImpressoraRede", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmCadastraImpressoraRede"},
     {"title": "mi.rtl.Consts.TConsts.CmInfoSystem", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmInfoSystem"},
     {"title": "mi.rtl.Consts.TConsts.cmPrintSemFormatar", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmPrintSemFormatar"},
     {"title": "mi.rtl.Consts.TConsts.CmDbDoBeforeInsert", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbDoBeforeInsert"},
     {"title": "mi.rtl.Consts.TConsts.CmDbDoBeforePost", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbDoBeforePost"},
     {"title": "mi.rtl.Consts.TConsts.CmDbDoBeforeDelete", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbDoBeforeDelete"},
     {"title": "mi.rtl.Consts.TConsts.CmDbDoAfterInsert", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbDoAfterInsert"},
     {"title": "mi.rtl.Consts.TConsts.CmDbDoAfterPost", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbDoAfterPost"},
     {"title": "mi.rtl.Consts.TConsts.CmDbDoAfterDelete", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbDoAfterDelete"},
     {"title": "mi.rtl.Consts.TConsts.CmTb_SelectRefCruzadaResume", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmTb_SelectRefCruzadaResume"},
     {"title": "mi.rtl.Consts.TConsts.CmTb_SelectSelect", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmTb_SelectSelect"},
     {"title": "mi.rtl.Consts.TConsts.CmTb_SelectResume", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmTb_SelectResume"},
     {"title": "mi.rtl.Consts.TConsts.CmRegistroValido", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmRegistroValido"},
     {"title": "mi.rtl.Consts.TConsts.CmCopyTo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmCopyTo"},
     {"title": "mi.rtl.Consts.TConsts.CmCadastraImpressoraLocal", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmCadastraImpressoraLocal"},
     {"title": "mi.rtl.Consts.TConsts.CmSetAppending", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmSetAppending"},
     {"title": "mi.rtl.Consts.TConsts.CmStartTransaction", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmStartTransaction"},
     {"title": "mi.rtl.Consts.TConsts.CmCommit", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmCommit"},
     {"title": "mi.rtl.Consts.TConsts.CmRollback", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmRollback"},
     {"title": "mi.rtl.Consts.TConsts.CmOnCalcRecord_All", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmOnCalcRecord_All"},
     {"title": "mi.rtl.Consts.TConsts.CmTime", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmTime"},
     {"title": "mi.rtl.Consts.TConsts.cmEditaCores", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmEditaCores"},
     {"title": "mi.rtl.Consts.TConsts.cmSalvaCores", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmSalvaCores"},
     {"title": "mi.rtl.Consts.TConsts.cmHomePage", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmHomePage"},
     {"title": "mi.rtl.Consts.TConsts.CmDbPack", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CmDbPack"},
     {"title": "mi.rtl.Consts.TConsts.FirstCmdNum", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#FirstCmdNum"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_RollCall", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_RollCall"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Ack", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Ack"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_FieldAltered", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_FieldAltered"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Draw", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Draw"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_DrawData", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_DrawData"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Lock", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Lock"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_LockData", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_LockData"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Unlock", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Unlock"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_UnlockData", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_UnlockData"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_FixSize", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_FixSize"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_SetupRecord", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_SetupRecord"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_WrongKey", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_WrongKey"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_ZeroizeField", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_ZeroizeField"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_ZeroizeRecord", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_ZeroizeRecord"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Enter", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Enter"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Left", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Left"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Right", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Right"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Home", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Home"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_End", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_End"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_goto", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_goto"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_NextRow", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_NextRow"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Up", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Up"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Down", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Down"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_PgUp", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_PgUp"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_PgDn", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_PgDn"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_ScreenTop", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_ScreenTop"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_ScreenBottom", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_ScreenBottom"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Top", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Top"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Bottom", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Bottom"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_DoubleClick", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_DoubleClick"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_RecIndClicked", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_RecIndClicked"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_Reset", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_Reset"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_ScrollBarChanged", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_ScrollBarChanged"},
     {"title": "mi.rtl.Consts.TConsts.cmDMX_InsertRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDMX_InsertRec"},
     {"title": "mi.rtl.Consts.TConsts.cmPRN_NewPage", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmPRN_NewPage"},
     {"title": "mi.rtl.Consts.TConsts.cmPRN_EndPage", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmPRN_EndPage"},
     {"title": "mi.rtl.Consts.TConsts.cmPRN_SetOptions", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmPRN_SetOptions"},
     {"title": "mi.rtl.Consts.TConsts.cmPRN_LineFeed", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmPRN_LineFeed"},
     {"title": "mi.rtl.Consts.TConsts.cmPRN_FormFeed", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmPRN_FormFeed"},
     {"title": "mi.rtl.Consts.TConsts.cmPRN_Reset", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmPRN_Reset"},
     {"title": "mi.rtl.Consts.TConsts.cmUserScreen", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmUserScreen"},
     {"title": "mi.rtl.Consts.TConsts.cmToggleSound", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmToggleSound"},
     {"title": "mi.rtl.Consts.TConsts.cmToggleVideo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmToggleVideo"},
     {"title": "mi.rtl.Consts.TConsts.cmBeep", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmBeep"},
     {"title": "mi.rtl.Consts.TConsts.cmChime", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmChime"},
     {"title": "mi.rtl.Consts.TConsts.cmPromptMsg", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmPromptMsg"},
     {"title": "mi.rtl.Consts.TConsts.cmBlinkMsg", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmBlinkMsg"},
     {"title": "mi.rtl.Consts.TConsts.cmDbMX_GetBuffer", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDbMX_GetBuffer"},
     {"title": "mi.rtl.Consts.TConsts.cmDbMX_PutBuffer", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#cmDbMX_PutBuffer"},
     {"title": "mi.rtl.Consts.TConsts.DirectorySeparator", "text": "A contante DirectorySeparator contém o caractere separador de diretório.   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#DirectorySeparator"},
     {"title": "mi.rtl.Consts.TConsts.Lst", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#Lst"},
     {"title": "mi.rtl.Consts.TConsts.kbNoKey", "text": "   ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#kbNoKey"},
     {"title": "mi.rtl.Consts.TConsts.MessageBoxOff", "text": "Se MessageBoxOff = true então não mostra o dialogo e torna o comando defaust       Usada quando se quer despresar a ação do usuário e que ler os erros de um arquivo de erros. Normalmente deve ser usado nos programas controlados em linha de comando.      ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#MessageBoxOff"},
     {"title": "mi.rtl.Consts.TConsts.CreateEnumField", "text": "    ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CreateEnumField"},
     {"title": "mi.rtl.Consts.TConsts.CreateTSItemFields", "text": "    ", "tags": "", "url": "mi.rtl.Consts.TConsts.html#CreateTSItemFields"},
     {"title": "mi.rtl.Consts.SCmDbNextRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbNextRec"},
     {"title": "mi.rtl.Consts.SCmDbPrevRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbPrevRec"},
     {"title": "mi.rtl.Consts.SCmDbNextRecValid", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbNextRecValid"},
     {"title": "mi.rtl.Consts.SCmDbPrevRecValid", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbPrevRecValid"},
     {"title": "mi.rtl.Consts.SCmDbFindRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbFindRec"},
     {"title": "mi.rtl.Consts.SCmDbSearchRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbSearchRec"},
     {"title": "mi.rtl.Consts.SCmDbGoEof", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbGoEof"},
     {"title": "mi.rtl.Consts.SCmDbGoBof", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbGoBof"},
     {"title": "mi.rtl.Consts.SCmDbLocaliza", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbLocaliza"},
     {"title": "mi.rtl.Consts.SCmNewRecord", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmNewRecord"},
     {"title": "mi.rtl.Consts.SCmZeroizeRecord", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmZeroizeRecord"},
     {"title": "mi.rtl.Consts.SCmEvaluateRecord", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmEvaluateRecord"},
     {"title": "mi.rtl.Consts.SCmEditDlg", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmEditDlg"},
     {"title": "mi.rtl.Consts.ScmMyOK", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#ScmMyOK"},
     {"title": "mi.rtl.Consts.ScmMyCancel", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#ScmMyCancel"},
     {"title": "mi.rtl.Consts.ScmPrint", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#ScmPrint"},
     {"title": "mi.rtl.Consts.SCmImport", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmImport"},
     {"title": "mi.rtl.Consts.SCmProcess", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmProcess"},
     {"title": "mi.rtl.Consts.SCmExecEndProc", "text": "Usado para acessar a pesquisa associado ao campo   ", "tags": "", "url": "mi.rtl.Consts.html#SCmExecEndProc"},
     {"title": "mi.rtl.Consts.SCmExecComboBox", "text": "Usado para acessar a visao associada ao campo. Usado para visualizar CamposEnumerado e lista de forma geral   ", "tags": "", "url": "mi.rtl.Consts.html#SCmExecComboBox"},
     {"title": "mi.rtl.Consts.SCmExecCommand", "text": "O comando vinculado ao campo focado e disparado para apliication.HanleEvent() se   ", "tags": "", "url": "mi.rtl.Consts.html#SCmExecCommand"},
     {"title": "mi.rtl.Consts.SCmCreate_Shortcut", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmCreate_Shortcut"},
     {"title": "mi.rtl.Consts.SCmVisualizar", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmVisualizar"},
     {"title": "mi.rtl.Consts.SCmExport_Stru", "text": "Exporta a estrutura das consultas para o arquivo Schema.ini   ", "tags": "", "url": "mi.rtl.Consts.html#SCmExport_Stru"},
     {"title": "mi.rtl.Consts.SCmExport", "text": "Exporta a consulta seleciona para varios formatos de arquivos a serem implementados   ", "tags": "", "url": "mi.rtl.Consts.html#SCmExport"},
     {"title": "mi.rtl.Consts.SCmDbAddRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbAddRec"},
     {"title": "mi.rtl.Consts.SCmDbDeleteRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbDeleteRec"},
     {"title": "mi.rtl.Consts.SCmDbGetRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbGetRec"},
     {"title": "mi.rtl.Consts.SCmDbPutRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbPutRec"},
     {"title": "mi.rtl.Consts.SCmDbUpdateRec", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbUpdateRec"},
     {"title": "mi.rtl.Consts.SCmDbSearchTop", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbSearchTop"},
     {"title": "mi.rtl.Consts.SCmDbSearchKey", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbSearchKey"},
     {"title": "mi.rtl.Consts.SCmDbUsedRecs_Valid", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbUsedRecs_Valid"},
     {"title": "mi.rtl.Consts.SCmOkEscrevaParametrosDosRelatorios", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmOkEscrevaParametrosDosRelatorios"},
     {"title": "mi.rtl.Consts.SCmDbSelecionaIndice", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbSelecionaIndice"},
     {"title": "mi.rtl.Consts.SLivreCmVisualisa", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SLivreCmVisualisa"},
     {"title": "mi.rtl.Consts.SCmQuitInterno", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmQuitInterno"},
     {"title": "mi.rtl.Consts.SCmSobre", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmSobre"},
     {"title": "mi.rtl.Consts.SCmDbOnEnter", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbOnEnter"},
     {"title": "mi.rtl.Consts.SCmDbOnExit", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbOnExit"},
     {"title": "mi.rtl.Consts.ScmCores", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#ScmCores"},
     {"title": "mi.rtl.Consts.SCmF7", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmF7"},
     {"title": "mi.rtl.Consts.SCmDbLabel_DoubleClick", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbLabel_DoubleClick"},
     {"title": "mi.rtl.Consts.ScmDbView_DoubleClick", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#ScmDbView_DoubleClick"},
     {"title": "mi.rtl.Consts.SCmDbOrdemCressante", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbOrdemCressante"},
     {"title": "mi.rtl.Consts.SCmDbOrdemDecrescente", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbOrdemDecrescente"},
     {"title": "mi.rtl.Consts.SCmDbSelecColunaAtual", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbSelecColunaAtual"},
     {"title": "mi.rtl.Consts.SCmMouseDownmbRightButton", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmMouseDownmbRightButton"},
     {"title": "mi.rtl.Consts.SCmReindex", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmReindex"},
     {"title": "mi.rtl.Consts.SCmCadastraImpressoraRede", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmCadastraImpressoraRede"},
     {"title": "mi.rtl.Consts.SCmInfoSystem", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmInfoSystem"},
     {"title": "mi.rtl.Consts.ScmPrintSemFormatar", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#ScmPrintSemFormatar"},
     {"title": "mi.rtl.Consts.SCmDbDoBeforeInsert", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbDoBeforeInsert"},
     {"title": "mi.rtl.Consts.SCmDbDoBeforePost", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbDoBeforePost"},
     {"title": "mi.rtl.Consts.SCmDbDoBeforeDelete", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbDoBeforeDelete"},
     {"title": "mi.rtl.Consts.SCmDbDoAfterInsert", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbDoAfterInsert"},
     {"title": "mi.rtl.Consts.SCmDbDoAfterPost", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbDoAfterPost"},
     {"title": "mi.rtl.Consts.SCmDbDoAfterDelete", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbDoAfterDelete"},
     {"title": "mi.rtl.Consts.SCmTb_SelectRefCruzadaResume", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmTb_SelectRefCruzadaResume"},
     {"title": "mi.rtl.Consts.SCmTb_SelectSelect", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmTb_SelectSelect"},
     {"title": "mi.rtl.Consts.SCmTb_SelectResume", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmTb_SelectResume"},
     {"title": "mi.rtl.Consts.SCmRegistroValido", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmRegistroValido"},
     {"title": "mi.rtl.Consts.SCmCopyTo", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmCopyTo"},
     {"title": "mi.rtl.Consts.SCmCadastraImpressoraLocal", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmCadastraImpressoraLocal"},
     {"title": "mi.rtl.Consts.SCmSetAppending", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmSetAppending"},
     {"title": "mi.rtl.Consts.SCmStartTransaction", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmStartTransaction"},
     {"title": "mi.rtl.Consts.SCmCommit", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmCommit"},
     {"title": "mi.rtl.Consts.SCmRollback", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmRollback"},
     {"title": "mi.rtl.Consts.SCmOnCalcRecord_All", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmOnCalcRecord_All"},
     {"title": "mi.rtl.Consts.SCmTime", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmTime"},
     {"title": "mi.rtl.Consts.ScmEditaCores", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#ScmEditaCores"},
     {"title": "mi.rtl.Consts.ScmSalvaCores", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#ScmSalvaCores"},
     {"title": "mi.rtl.Consts.ScmHomePage", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#ScmHomePage"},
     {"title": "mi.rtl.Consts.SCmDbPack", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#SCmDbPack"},
     {"title": "mi.rtl.Consts.sErr201", "text": "   ", "tags": "", "url": "mi.rtl.Consts.html#sErr201"},
     {"title": "mi.rtl.Consts.StrError", "text": "-A unit mi.rtl.Consts.StrError implementa a classe TStrError do pacote mi.rtl.       VERSÃO:      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.tStrError.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      2021-12-02 -08:00 a 22:15 : Criado a unit mi.rtl.Consts.StrError e implementação da classe TStrError   2021-12-15 : Ajuste do método TStrError.ErrorMessage4;            ", "tags": "", "url": "mi.rtl.Consts.StrError.html"},
     {"title": "mi.rtl.Consts.StrError.TStrError", "text": "A classe TStrError é usada para produzir texto informativo sobre o local onde o erro ocorreu.   ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage", "text": "A função ErrorMessage retorna um texto com o nome do erro passado por ErrorCode       PARÂMETRO      ErrorCode - Número do erro      RETORNA      Nome do erro      NOTA      A versão abaixo é usada quando o sistema é windows, a mesma tem o nome do erro no linux e o nome do erro no windows separada com a palavra ou.   Quando a plataforma é linux a mensagem que aparece é os erros no linux.      LISTA DOS ERROS POSSÍVEIS      [ErrorMessage.inc](./units/include/windows/ErrorMessage.inc)   [ErrorMessage.inc](./units/include/linux/ErrorMessage.inc)        0: Result := '000: Chamada inválida a função Result.';  {1..99 RESERVADO PARA ERROS DO DOS} 1: Result := 'EPERM 1: Operação não permitida'; 2: Result := 'ENOENT 2 FileName ou diretório inexistente'; 3: Result := 'ESRCH 3 Processo inexistente'; 4: Result := 'EINTR 4 Chamada de sistema interrompida'; 5: Result := 'EIO 5 Erro de entrada/saída'; 6: Result := 'ENXIO 6 Endereço ou dispositivo inexistente'; 7: Result := 'E2BIG 7 Lista de argumentos muito longa'; 8: Result := 'ENOEXEC 8 Erro no formato exec'; 9: Result := 'EBADF 9 Descritor de FileName inválido'; 10: Result := 'ECHILD 10 Não há processos filhos'; 11: Result := 'EAGAIN 11 Recurso temporariamente indisponível'; 12: Result := 'ENOMEM 12 Não foi possível alocar memória'; 13: Result := 'EACCES 13 Permissão negada'; 14: Result := 'EFAULT 14 Endereço inválido'; 15: Result := 'ENOTBLK 15 Dispositivo de bloco requerido'; 16: Result := 'EBUSY 16 Dispositivo ou recurso está ocupado'; 17: Result := 'EEXIST 17 FileName existe'; 18: Result := 'EXDEV 18 Link entre dispositivos inválido'; 19: Result := 'ENODEV 19 Dispositivo inexistente'; 20: Result := 'ENOTDIR 20 Não é um diretório'; 21: Result := 'EISDIR 21 É um diretório'; 22: Result := 'EINVAL 22 Argumento inválido'; 23: Result := 'ENFILE 23 Muitos FileNames abertos no sistema'; 24: Result := 'EMFILE 24 Muitos FileNames abertos'; 25: Result := 'ENOTTY 25 ioctl inapropriado para dispositivo'; 26: Result := 'ETXTBSY 26 Área de texto ocupada'; 27: Result := 'EFBIG 27 FileName muito grande'; 28: Result := 'ENOSPC 28 Não há espaço disponível no dispositivo'; 29: Result := 'ESPIPE 29 Procura ilegal'; 30: Result := 'EROFS 30 Sistema de FileNames somente para leitura'; 31: Result := 'EMLINK 31 Muitos links'; 32: Result := 'EPIPE 32 Pipe quebrado'; 33: Result := 'EDOM 33 Argumento numérico fora de domínio'; 34: Result := 'ERANGE 34 Resultado numérico fora de alcance'; 35: Result := 'EDEADLK 35 Evitado deadlock de recurso'; 36: Result := 'ENAMETOOLONG 36 Nome de FileName muito longo'; 37: Result := 'ENOLCK 37 Não há travas disponíveis'; 38: Result := 'ENOSYS 38 Função não implementada'; 39: Result := 'ENOTEMPTY 39 Diretório não vazio'; 40: Result := 'ELOOP 40 Muitos níveis de links simbólicos'; 41: Result := 'EWOULDBLOCK 41 Recurso temporariamente indisponível'; 42: Result := 'ENOMSG 42 Não há mensagens do tipo desejado'; 43: Result := 'EIDRM 43 Identificador removido'; 44: Result := 'ECHRNG 44 Número do canal fora do intervalo'; 45: Result := 'EL2NSYNC 45 Nível 2 não sincronizado'; 46: Result := 'EL3HLT 46 Nível 3 parado'; 47: Result := 'EL3RST 47 Nível 3 reiniciado'; 48: Result := 'ELNRNG 48 Número de link fora da faixa'; 49: Result := 'EUNATCH 49 Driver de protocolo não anexado'; 50: Result := 'ENOCSI 50 Não há estrutura CSI disponível'; 51: Result := 'EL2HLT 51 Parada de sistema nível 2'; 52: Result := 'EBADE 52 Troca inválida'; 53: Result := 'EBADR 53 Descritor de requisição inválido'; 54: Result := 'EXFULL 54 Troca completa'; 55: Result := 'ENOANO 55 Sem anode'; 56: Result := 'EBADRQC 56 Código de requisição inválido'; 57: Result := 'EBADSLT 57 Slot inválido'; 58: Result := 'EDEADLOCK 35 Evitado deadlock de recurso'; 59: Result := 'EBFONT 59 Formato do FileName fonte inválido'; 60: Result := 'ENOSTR 60 Dispositivo não é um stream'; 61: Result := 'ENODATA 61 Não há dados disponíveis'; 62: Result := 'ETIME 62 Tempo expirado'; 63: Result := 'ENOSR 63 Sem recursos de streams'; 64: Result := 'ENOSR 64 Sem recursos de streams'; 65: Result := 'ENOPKG 65 Pacote não instalado'; 66: Result := 'EREMOTE 66 ObjectName é remoto'; 67: Result := 'ENOLINK 67 Link foi cortado'; 68: Result := 'EADV 68 Erro de aviso'; 69: Result := 'ESRMNT 69 Erro de sr mount'; 70: Result := 'COMM 70 Erro de comunicação ao enviar'; 71: Result := 'EPROTO 71 Erro de protocolo'; 72: Result := 'EMULTIHOP 72 Tentativa de Multi hop'; 73: Result := 'EDOTDOT 73 Erro específico de RFS'; 74: Result := 'EBADMSG 74 Mensagem inválida'; 75: Result := 'EOVERFLOW 75 Valor muito grande para o tipo de dados definido'; 76: Result := 'ENOTUNIQ 76 O nome não é único na rede'; 77: Result := 'EBADFD 77 Descritor de FileName em mal estado'; 78: Result := 'EREMCHG 78 Endereço remoto alterado'; 79: Result := 'ELIBACC 79 Não foi possível acessar uma biblioteca compartilhada'; 80: Result := 'ELIBBAD 80 Acessando uma biblioteca compartilhado corrompida'; 81: Result := 'ELIBSCN 81 Seção .lib corrompida em a.out'; 82: Result := 'ELIBMAX 82 Tentando vincular em muitas bibliotecas compartilhadas'; 83: Result := 'ELIBEXEC 83 Não foi possível executar uma biblioteca compartilhado diretamente'; 84: Result := 'EILSEQ 84 Multi byte ou caractere largo inválido'; 85: Result := 'ERESTART 85 Chamada de sistema interrompida deve ser reiniciada'; 86: Result := 'ESTRPIPE 86 Erro de fluxos de pipe'; 87: Result := 'EUSERS 87 Muitos usuários'; 88: Result := 'ENOTSOCK 88 Operação socket em um FileName não-socket'; 89: Result := 'EDESTADDRREQ 89 Endereço de destino requerido'; 90: Result := 'EMSGSIZE 90 Mensagem muito longa'; 91: Result := 'EPROTOTYPE 91 Tipo errado de protocolo para socket'; 92: Result := 'ENOPROTOOPT 92 Protocolo não disponível'; 93: Result := 'EPROTONOSUPPORT 93 Protocolo sem suporte'; 94: Result := 'ESOCKTNOSUPPORT 94 Tipo socket sem suporte'; 95: Result := 'EOPNOTSUPP 95 Operação sem suporte'; 96: Result := 'EPFNOSUPPORT 96 Família de protocolo sem suporte'; 97: Result := 'EAFNOSUPPORT 97 Família de endereços sem suporte pelo protocolo'; 98: Result := 'EADDRINUSE 98 Endereço já em uso'; 99: Result := 'EADDRNOTAVAIL 99 Não foi possível acessar o endereço requisitado';  {100 A 149 ERROS DE ENTRADA E SAIDA (I/O)} 100: Result := '100: Erro ao ler o disco';//EndOfFile no delphi 101: Result := '101: Erro ao gravar no disco';//DiskFull no delphi 102: Result := '102: FileName não assinalado (falta ASSIGN) '; 103: Result := '103: FileName fechado'; 104: Result := '104: O FileName fechado para entrada'; 105: Result := '105: O FileName fechado para saída'; 106: Result := '106: Formato numérico inválido ou incompatÍvel'; 107: Result := '107: Disco cheio'; 108..149:     Result := '108..149: Reservado para I/O ';  {150..199 RESERVADO PARA ERROS CRITICOS} 150: Result := '150: Disco protegido'; 151: Result := '151: UNIT desconhecida'; 152: Result := '152: Drive não esta pronto'; 153: Result := '153: Comando desconhecido'; 154: Result := '154: Erro na CRC de dados'; 155: Result := '155: Erro no drive solicitado pelo tamanho'; 156: Result := '156: Erro no posicionamento de disco'; 157: Result := '157: Tipo de meio desconhecido'; 158: Result := '158: Setor não encontrado'; 159: Result := '159: Impressora sem papel'; 160: Result := '160: Erro de escrita no dispositivo de saída ( Impressora )'; 161: Result := '161: Falta dispositivo de entrada ( Leitura )'; 162: Result := '162: Falta hardware ( equipamento )'; 163..199:     Result := '163..199: RESERVADO PARA ERROS CRITICOS';  {200..255 RESERVADO PARA ERROS FATAL} 200: Result := '200: Divisão por zero'; 201: Result := '201: Error na checagem de faixa'; 202: Result := '202: Estouro no stack de memória'; 203: Result := '203: Estouro no heap de memória'; 204: Result := '204: Operação de pointer inválida'; 205: Result := '205: Estouro em operação com ponto flutuante'; 206: Result := '206: Erro de underflow com ponto-flutuante (Somente com 8087) '; 207: Result := '207: Operação inválida com ponto flutuante'; 208: Result := '208: Gerenciador de Overlay não instalado'; 209: Result := '209: Erro da leitura no FileName de overlay'; 210: Result := '210: ObjectName não inicializado'; 211: Result := '211: Chamada a um MethodName abstrato'; 212: Result := '212: Stream registration error';  213: Result := '213: Collection index out of range'; 214: Result := '214: Collection overflow error'; 215: Result := '215: Arithmetic overflow error'; 216: Result := '216: General Protection fault';  {MarIcarai 217..255} 217: Result := '217: Tentativa de abrir um FileName aberto.'; 218: Result := '218: Tentativa de excluir um registro excluido'; 219: Result := '219: Tentativa de ler um registro excluído'; 220: Result := '220: Outro usuário da rede alterou o registro'; 221: Result := '221: Estrutura da tabela esta danificada'; 222: Result := '222: Tentativa de gravar em um registro compartilhado sem que o mesmo esteja travado';  {ApCLiSvr.pas} 223: Result := '223: Evento executado por outro processo'; 224: Result := '224: Servidor de API não instalado';  225: Result := '225: TTransaction.Commit esperado.';//TTransaction 226: Result := '226: Não é uma expressão válida'; 227: Result := '227: Muitos parentese na expressão'; 228: Result := '228: Muitos operadores na expressão'; 229: Result := '229: Operador aritmético esperado na expressão'; 230: Result := '230: O Número não pode ser lido na expressão';  REC_TOO_LARGE   :  Result  := 'Tamanho do registro em memória maior que o permitido (MaxDataRecSize)'; REC_TOO_SMALL   :  Result  := 'Tamanho do Registro e muito longo'; KeyTooLarge     :  Result  := 'Tamanho da chave maior do que o maximo permitido (MaxKeyLen) '; RecSizeMismatch :  Result  := 'Registro de dados incompatÍvel com a estrutura corrente. '; KeySizeMismatch :  Result  := 'Tamanho da pagina ou chave incompatÍvel com a estrutura corrente'; MemOverflow     :  Result  := 'Não ha memória para os indice dos FileNames'; ArqIndexInconsistente                 :  Result  := 'FileName de indice inconsistente.'; 238             :  Result := '238: O gerente de transacoes esta inativo'; //TTransaction 239             :  Result := '239: Excecao inesperada'; 240: Result     := '240: Acesso negado ao FileName por falta de autorizacao de seu superior imediato'; 241: Result     := '241: Registro não localizado'; // Erros retornados nas buscas de registros 242: Result     := '242: O evento OnEnter Retornou falso'; 243: Result     := '242: O evento OnExit Retornou falso'; 244 245             := '245 attempt_to_edit_a_record_not_selecting' .. 254: Result := '238..254: RESERVADO PARA ERROS FATAIS'; 255: Result := '255: &circ;C. Sistema abortado.';  ELSE Result := 'Erro indefinido Maior que 255';     REFERÊNCIAS:      Lista de erros do Lazarus: https://wiki.lazarus.freepascal.org/RunError   FreePascal - acesso a FileNames. : https://www.freepascal.org/docs-html/rtl/system/ioresult.html   windows: https://docs.microsoft.com/pt-br/cpp/c-runtime-library/errno-constants?view=msvc-170   DOS: https://docs.microsoft.com/pt-br/cpp/c-runtime-library/errno-doserrno-sys-errlist-and-sys-nerr?view=msvc-170   Linux: https://man7.org/linux/man-pages/man3/errno.3.html          ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage", "text": "O método ErrorMessage receber uma mensagem e retorna a mesagem formatada.    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage8", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage8"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage7", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage7"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage7", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage7"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage6", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage6"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage5", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage5"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage5", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage5"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage4", "text": "A class ErrorMessage4 formata um texto com os parãmetros passado    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage4"},
     {"title": "mi.rtl.Consts.StrError.TStrError.ErrorMessage4", "text": "A class ErrorMessage4 formata um texto com os parãmetros passado    ", "tags": "", "url": "mi.rtl.Consts.StrError.TStrError.html#ErrorMessage4"},
     {"title": "mi.rtl.Consts.StringList", "text": "   ", "tags": "", "url": "mi.rtl.Consts.StringList.html"},
     {"title": "mi.rtl.Consts.StringList.TMiStringList", "text": "A class TMiStringList implementa a navegação como se tivesse navegando em arquivos usando os métodos NextKey,Prevkey etc...       NOTA      Usando quando quero manter uma lista de registros ordenada.         ", "tags": "", "url": "mi.rtl.Consts.StringList.TMiStringList.html"},
     {"title": "mi.rtl.Consts.StringList.TMiStringList.AddKey", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringList.TMiStringList.html#AddKey"},
     {"title": "mi.rtl.Consts.StringList.TMiStringList.BofKey", "text": "Posiciona no inicio do bloco de registro do tipo default    ", "tags": "", "url": "mi.rtl.Consts.StringList.TMiStringList.html#BofKey"},
     {"title": "mi.rtl.Consts.StringList.TMiStringList.LastKey", "text": "Posiciona no fin do bloco de registro do tipo default    ", "tags": "", "url": "mi.rtl.Consts.StringList.TMiStringList.html#LastKey"},
     {"title": "mi.rtl.Consts.StringList.TMiStringList.EofKey", "text": "Posiciona no fin do bloco de registro do tipo default    ", "tags": "", "url": "mi.rtl.Consts.StringList.TMiStringList.html#EofKey"},
     {"title": "mi.rtl.Consts.StringList.TMiStringList.PrevKey", "text": "Posiciona no registro anterior do tipo default    ", "tags": "", "url": "mi.rtl.Consts.StringList.TMiStringList.html#PrevKey"},
     {"title": "mi.rtl.Consts.StringListBase", "text": "-A unit mi.rtl.Consts.StringListBase implementa a classe TStringListBase do pacote mi.rtl.       VERSÃO:      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.Consts.StringListBase.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      2022-01-25 -08:00 a 12:00 - Criado a unit mi.rtl.Consts.StringListBase e implementação da classe TStringListBase      2022-05-17      T12 Criar método CopyFrom            ", "tags": "", "url": "mi.rtl.Consts.StringListBase.html"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase", "text": "   ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.Index_Currente", "text": "   ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#Index_Currente"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.OkBof", "text": "Inicio de arquivo   ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#OkBof"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.okEof", "text": "Fim de arquivo   ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#okEof"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.Nr", "text": "Número do registro corrente   ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#Nr"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.Create", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#Create"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.ClearKey", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#ClearKey"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.IndexOf", "text": "Redefini porque a instância anterior não funciona com caractere #254    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#IndexOf"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.Delete", "text": "Redefini para poder deletar o objeto associando    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#Delete"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#Destroy"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.Find", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#Find"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.FindKey", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#FindKey"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.NextKey", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#NextKey"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.SearchKey", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#SearchKey"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.NewStr", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#NewStr"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.Append", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#Append"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.AddSItem", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#AddSItem"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.AddSItem", "text": "Adiciona a lista passada por aSItem e desaloca a lista se OkDisposeSItems = true;    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#AddSItem"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.CloneSItems", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#CloneSItems"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.CopyTemplateFrom", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#CopyTemplateFrom"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.PListSItem", "text": "    ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#PListSItem"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.KeyMaster", "text": "   ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#KeyMaster"},
     {"title": "mi.rtl.Consts.StringListBase.TStringListBase.OkDestroy_Object", "text": "Redefini para poder deletar o objeto associando   ", "tags": "", "url": "mi.rtl.Consts.StringListBase.TStringListBase.html#OkDestroy_Object"},
     {"title": "mi.Rtl.Files", "text": "     A Unit mi.Rtl.Files contém as funções Wrapper para os sistemas operacionais Win32 Win64 e Linux x86_64 reconhecidos pelo free pascal.       OBJETIVO:      Evitar de alterar todos os códigos escritos para a plataforma windows e por isso mantenho o mesmo comportamento do windows.      VERSÃO:      Alpha - 0.5.0.693      NOTA:      Veja o link de como escrever código portátil em relação à arquitetura do processador?;   Só devo usar units syscalls do Linux ou Windows caso não encontre a mesma pronta nos projetos lazarus ou Free Pascal.      REFERÊNCIA      Guia de programação multiplataforma;   [Reference for unit 'System': procedures and functions](https://www.freepascal.org/docs-html/rtl/system/index-5.html)      CÓDIGO FONTE:      mi.rtl.files.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      2021-10-21 08:00 - Data em que essa unit mi.Rtl.Files foi criada.   2021-11-02 15:42 - Escolha do projeto pasdoc para criar documento do pacote mi.rtl.   2021-11-04 08:37 - Implementação da função SysFileOpen()   2021-11-04 14:00 - Implementação da função SysSetResult()   2021-11-04 14:30 - Implementação da função SetFileMode()   2021-11-04 15:30 - Documentar a unit mi.Rtl.Files e organizar sessão de constantes, variáveis e funções.   2021-11-04 21:00 - Criar exemplo de uso das funções SysFileOpen e SysFileClose.   2021-11-05 21:30 - Revisar documentação desta nas funções: SysSetResult, ...   2021-11-12 08:56 - Procurar bug da função SysFileOpen na máquina windows.      Eureca. Resolvi o problema da função SysFileOpen.   O problema da função SysFileOpen estava na forma como no windows a função SysUtils.fileOpen trabalha.      Caso ocorra um erro a função SysUtils.fileOpen retorna high(THandle).   Para corrigir precisei modificar a função SysSetResult.         2021-11-12 16:56 - Documentar a unit mi.Rtl.Files e criar a função CopyFile().   2021-11-12 18:05 - Criar a função SysFileSetSize para truncar o arquivo e documenta-la.   2021-11-13      Criado a class TFiles herdade de TConsts com propósito em encapsular as funções de acesso ao sistema operacional.   Criar método TFiles.ErrorMessage();   Criar método TFiles.SetLastError();   Criar método TFiles.SetResult()   Criar método TFiles.CopyFile()   Criar método TFiles.SetFileMode()   Criar método TFiles.FileOpen(5 parametro)   Criar método TFiles.FileOpen(3 parâmetro)   Criar método TFiles.FileClose()   Criar método TFiles.FileTruncate()   Criar método TFiles.FileCreate()      2021-11-15       O método TFiles.FileCreate() não está obedecendo o mapa de bits FileMode() checar o porque:      Solução:      A função SysUtils.FileCreate precisa do fmCreate na criação do arquivo.   Após criar o arquivo o mesmo deve ser fechado e aberto novamente com o mapa de bits mode e shareMode passado no parâmetro.         Criar método TFiles.FileSeek()   Criar método TFiles.FileRead()      2021-11-16      O método SysFileSeek não gerar erro se o ponteiro do arquivo for inválido.      Para contornar devo fazer a crítica se o ponteiro é maior que zero e menor que fileSize.   Essa solução não atende porque não fileSeek não tem o nome do arquivo.   Entendendo porque SysUtils.FileSeek não dar erro quando se tenta posicionar além do fim do arquivo:      https://man7.org/linux/man-pages/man2/lseek.2.html   No linux lseek() permite que o deslocamento do arquivo seja definido além do final do arquivo (mas isso não altera o tamanho do arquivo). Se os dados forem posteriormente escrito neste ponto, leituras subsequentes dos dados no gap (um &quot;buraco&quot;) retorna bytes nulos ('\\ 0') até que os dados sejam realmente escrito na lacuna.         Criar método TFiles.FileSize()   Criar exemplo de uso do método TFiles.FileSize()   Criar exemplo de uso do método TFiles.FileSeek()      2021-11-17      08:30 a 10:38 - Criar exemplo de uso do método TFiles.FileRead()   11:36 a 11:48 - Criar método TFiles.FileWrite()   11:50 a 12:21 - Criar exemplo de uso do método TFiles.FileWrite() - Falta testar.   14:15 a 15:23 - Testar o exemplo de uso da função TFiles.FileWrite. ok.      2021-11-21      10:30 a 11:10      Criar classe método - TFiles.FileExists()   Criar classe método - TFiles.DirectoryExists()         2021-11-22      10:00 a 10:06 - Criar classe método : TFiles.CreateDir()   10:29 a 11:10 - Criar classe método : TFiles.SysGetDriveType(aPath : AnsiString): TDriveType;   11:11 a 12:02 - Criar classe método : **DuplicateHandle(hSourceHandle: LongInt;Var lpTargeTHandle: Longint) : Longint);   14:10 a 15:16 - Criar classe método : FileFlushBuffers(Handle: THandle): Longint;   15:44 a 17:32 - Criar classe método : LockFile(_Handle:THandle; _LockStart, _LockLength: Int64): LongInt;      Não encontrei no linux o equivalente ao Windows.LockFile      15:44 a 17:32 - Criar classe método : UnLockFile(_Handle:THandle; _LockStart, _LockLength: Int64): LongInt;      Não encontrei no linux o equivalente ao Windows.unLockFile      2021-12-01      11:42 a ??:?? : Implementar a função Is_TFileOpen      2021-12-02      20:00 a 22:15 : Implementei a classe TStrError      20211230      15:30 a 16:10 : Criar método GetTempFileName      20220111      17:10 - Criar método shellExecute                     ", "tags": "", "url": "mi.Rtl.Files.html"},
     {"title": "mi.Rtl.Files.TFiles", "text": "     A classe TFiles contém as classes métodos para acessar o sistema operacional usada no acesso a arquivos.       REFERẼNCIAS      [Como criar aplicativo multi-plataforma](https://wiki.freepascal.org/Multiplatform_Programming_Guide)            ", "tags": "", "url": "mi.Rtl.Files.TFiles.html"},
     {"title": "mi.Rtl.Files.TFiles.IoResult", "text": "A função IoResult captura o estados de system.ioResult e atualiza TaStatus    ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#IoResult"},
     {"title": "mi.Rtl.Files.TFiles.CtrlSleep", "text": "     A função CtrlSleep dar opção para que a aplicação execute outras tarefas caso ela se encontre em estado de espera.       PARÂMETRO      Delay - Tempo em milissegundo que deve aguardar**.             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#CtrlSleep"},
     {"title": "mi.Rtl.Files.TFiles.Set_CTRL_SLEEP_ENABLE", "text": "     A função Set_CTRL_SLEEP_ENABLE habilita ou não a função CtrlSleep.       PARÂMETRO      aEnable      Se True habilita CtrlSleep;   Se false desabilita o método CtrlSleep;         RETORNA      o valor anterior da variável CTRL_SLEEP_ENABLE;             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#Set_CTRL_SLEEP_ENABLE"},
     {"title": "mi.Rtl.Files.TFiles.ReadKey", "text": "    ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#ReadKey"},
     {"title": "mi.Rtl.Files.TFiles.SetLastError", "text": "     A procedure SetLastError atualiza as variáveis globais LastError e OK       PARÂMETROS      aCodeError:integer - Código do erro.      EXEMPLO      procedure tes_SetLastError(); Begin   //Executa a procedure SetLastError    SetLastError(2);   showMessage(ErrorMessage(LastError));  end;            ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#SetLastError"},
     {"title": "mi.Rtl.Files.TFiles.SetResult", "text": "     A função SetResult captura o último erro se o parâmetro aSucesso=false ou o aHandle for inválido e retorna 0 (zero) se aSucesso=true e o aHandle for válido.       A função SetResult atualiza a variável global LastError e a variável global ok:   Plataformas testadas      win32   win64   linux      PARÂMETROS      aHandle - O handle do arquivo retornado pela ultima chamada ao sistema operacional.   aSucesso - Recebe true se sucesso ou false se fracasso na última chamada ao sistema operacional.      RETORNA      O conteúdo da variável global LastError.      NOTA      No windows, quando ocorre um erro o handle é igual = high(THandle) por isso é necessário passar o handle do arquivo na chamada a SetResult().             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#SetResult"},
     {"title": "mi.Rtl.Files.TFiles.CopyFile", "text": "     A função CopyFile copia o arquivo passado por alpExistingFileName para o arquivo passo por lpNewFileName.       PARÂMETROS      alpExistingFileName:AnsiString - Nome do arquivo a ser copiado;   lpNewFileName:AnsiString - Nome do arquivo destino da cópia;   aExceptionOnError:boolean - True se o sistema deve gera exceção ou false se o sistema não deve gera exceção.      RETORNO      Integer - Código do erro ou 0 (zero) se a cópia for feita com sucesso.   Caso o parâmetro aExceptionOnError = true então a exceção deve ser tratada pela rotina que o chamou.      EXEMPLO      procedure TFormTests.Button_tes_CopyFileClick(Sender: TObject);    // Este procedimento faz duas cópia do arquivo index.html    Var     err : TFiles.integer; Begin   with TFiles do     err := CopyFile('index.html','index.bak1',false);    with TFiles do   if err = 0   Then showMessage('Copia 1 feita com sucesso.')   else showMessage(ErrorMessage(err));    with TFiles do   try     CopyFile('index.html','index.bak2',true);     showMessage('Copia 2 feita com sucesso.') ;   Except     on E:Exception do      ShowMessage(e.Message);   end; end;            ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#CopyFile"},
     {"title": "mi.Rtl.Files.TFiles.SetFileMode", "text": "     A função SetFileMode modifica o valor de FileMode e retorna o valor do FileMode anterior;      PARÂMETROS      aFileMode é o modo de abertura do arquivo.      RETORNA      O FileModeAnt;      NOTA      A variável pública FileModeAnt é igual ao resultado desta função.             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#SetFileMode"},
     {"title": "mi.Rtl.Files.TFiles.SetStateFileMode", "text": "     Seta FileMode e retorna o estado anterior do Mapa de bits passado por aState       ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#SetStateFileMode"},
     {"title": "mi.Rtl.Files.TFiles.GetStateFileMode", "text": "     Ler o estado do File Mode       ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#GetStateFileMode"},
     {"title": "mi.Rtl.Files.TFiles.FileOpen", "text": "     Abre o arquivo passado pelo parâmetro FileName       PARÂMETROS      FileName - Nome do arquivo a ser aberto;   mode - Modo de abertura. Valor possível veja TFileMode;   attribute - Atributo de abertura do arquivo;   Flags - flag de abertura do arquivo;   Handle - Se tiver sucesso retorna nesta variável o número do arquivo aberto;      RETORNA      LongInt Zero se sucesso ou o código do erro se fracasso.      NOTA:      Possiveis erros pode ser visto na função ErrorMessage();      EXEMPLOS DE USO      procedure TFormTests.Button_Test_OpenFile_exclusive_modeClick(Sender: TObject);    procedure Test_OpenFile_exclusive(aFileName:AnsiString);   Var     Err : TFiles.integer;     h,     h1 : TFiles.THandle;   Begin     with TFiles do       Err := FileOpen (aFileName, FmReadWrite or FmDenyALL  or fmShareCompat  ,h);      with TFiles do     if Err = 0     Then Begin            ShowMessage('Teste da função SysFileOpen retornou true');             Err := FileOpen (aFileName,FmReadWrite or FmDenyALL  or fmShareCompat  ,h1);            if Err = 0            Then Begin                   FileClose(h1);                   ShowMessage('Teste da função SysFileOpen retornou true')                 end            else ShowMessage('Error: '+ErrorMessage(Err));             FileClose(h);     end     else ShowMessage('Error: '+ErrorMessage(Err));    End;  begin   Test_OpenFile_exclusive('index.html'); end;     REFERÊNCIAS      FileOpen;   fmOpenRead;   FileClose;   THandle.             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileOpen"},
     {"title": "mi.Rtl.Files.TFiles.FileOpen", "text": "     Abre o arquivo passado pelo parâmetro FileName       PARÂMETROS      FileName Nome do arquivo a ser aberto;   mode - Modo de abertura;   Handle - Se result = 0 o Handle contém o número do arquivo aberto, caso contrário, retorna HANDLE_INVALID**;      RETORNA      0 (zero) se sucesso ou o código do erro se fracasso;      NOTA:      Possiveis erros pode ser visto na função ErrorMessage();      EXEMPLO DE USO      procedure TFormTests.TestSysOpenFileClick(Sender: TObject); Var   Err : TFiles.Longint;   h : TFiles.THandle; Begin   with TFiles do     Err := FileOpen ('index.html',fmOpenRead,h);    with TFiles do   if Err = 0 Then   Begin     FileClose(h);     ShowMessage('Teste da função FileOpen retornou true')   end   else ShowMessage('Error: '+ErrorMessage(Err)); End;     REFERÊNCIAS      FileOpen;   fmOpenRead;   FileClose;   THandle.             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileOpen"},
     {"title": "mi.Rtl.Files.TFiles.FileClose", "text": "     A função FileClose fecha o arquivo passando por Handle.      PARÂMETRO      Handle - Número do arquivo aberto por FileOpen.      RETORNA      Zero de tiver sucesso ou o código do erro se não conseguir fechar o arquivo.      REFERÊNCIAS      FileClose;             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileClose"},
     {"title": "mi.Rtl.Files.TFiles.FileTruncate", "text": "     A função FileTruncate reduz o tamanho do arquivo para o tamanho passado pelo parâmetro NewSize.       PARÂMETROS      Handle:THandle - Handle do arquivo a ser truncado.   NewSize:Int64 - Tamanho do arquivo a se truncado.      RETORNO      Longint - 0(zero) se sucesso ou o código do erro se fracasso.      REFERÊNCIA      [Truncate file](https://www.freepascal.org/docs-html/rtl/sysutils/filetruncate.html)      EXEMPLO      procedure TFormTests.Button_tes_FileTruncateClick(Sender: TObject);   // Este procedimento Trunca o arquivos 'index.html' para 100 bytes   Var     aHandle: TFiles.THandle;     NewSize: TFiles.word;     err    : TFiles.integer; Begin   NewSize := 100;    with TFiles do     err := FileOpen('index.html',fileMode,aHandle);    with TFiles do   if  err = 0   then begin          //Executa a função SysFileTruncate          err := FileTruncate(aHandle,NewSize);           if err = 0          then showMessage('O arquivo foi truncado para 100 bytes')          else ShowMessage('Error: '+ErrorMessage(err));        end   else ShowMessage('Error: '+ErrorMessage(err)); end;            ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileTruncate"},
     {"title": "mi.Rtl.Files.TFiles.FileCreate", "text": "     A função FileCreate cria um novo arquivo e retorna um identificador para ele ou código do erro houver fracasso.       PARÂMETROS      FileName: AnsiString - Nome do arquivo a ser criado;   Mode: Longint - Modo de criação do arquivo. Veja FileMode para mais informações;      RETORNO      THandle - Handle do arquivo criado;   LongInt - 0 (zero se sucesso ou o código do erro se fracasso.      EXEMPLO      procedure TFormTests.Button_test_FileCreateClick(Sender: TObject);    function tes_FileCreate(FileName:AnsiString;out aHandle:THandle): LongInt;   Begin     with TFiles do       result := FileCreate(FileName,fmOpenReadWrite or fmShareExclusive,aHandle);   end;  var   aHandle :  TFiles.THandle; begin    with TFiles do   if tes_FileCreate('text.txt',aHandle) = 0   then begin          showMessage('Arquivo text.txt criado na pasta corrente.');          FileClose(aHandle);        end; end;            ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileCreate"},
     {"title": "mi.Rtl.Files.TFiles.DeleteFile", "text": "    ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#DeleteFile"},
     {"title": "mi.Rtl.Files.TFiles.FileSize", "text": "     A função FileSize retorna o tamanho do arquivo em bytes.       PARÂMETROS      FileName: AnsiString - Nome do arquivo;   Count: Int64 - Número de bytes do arquivo passo do FileName.      RETORNO      longint - 0 (zero) se sucesso ou o código do erro se houver fracasso;   Count - Número de bytes do arquivo.      EXEMPLO       procedure TMi_Rtl_Tests.Action_Test_FileSizeExecute(Sender: TObject);      // Este procedimento obtem o tamanho do arquivo em bytes do arquivo index.html;    var      FileName:AnsiString;      Count:Int64;      err:Longint;  Begin    with TFiles do    begin      FileName := 'index.html';      err := FileSize(FileName,Count);      if err &lt;&gt; 0      Then showMessage(ErrorMessage(err))      else showMessage('Tamanho do arquivo é: '+intToStr(Count));    end; end;            ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileSize"},
     {"title": "mi.Rtl.Files.TFiles.FileSize", "text": "    ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileSize"},
     {"title": "mi.Rtl.Files.TFiles.FileSizes", "text": "O função FileSizes retorna em aFileSize a soma de todos os arquivos que satisfaça a mascara em path;       NOTA      Se houver error retorna o código do error em FileSize          ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileSizes"},
     {"title": "mi.Rtl.Files.TFiles.FileSeek", "text": "     A função FileSeek posiciona o ponteiro do arquivo na posição FOffSet começando da origem.       PARÂMETROS      Handle: THandle - Handle do arquivo;   FOffset: Int64 - Ponteiro do arquivo a ser posicionado;   Origin: LongInt - Origem do calculo da posição do arquivos pode ser:      TConsts.fsFromBeginning;   TConsts.fsFromCurrent;   TConsts.fsFromEnd ;      NewPos: Int64 - Se tiver sucesso a função retorna neste parametro a nova posição do arquivo.      RETORNO      LongInt - 0 (zero se sucesso ou código do erro se fracasso.      Em NewPos retorna o número da posição atual do arquivo.      EXEMPLO      procedure TMi_Rtl_Tests.Action_Test_FileSeekExecute(Sender: TObject);   // Este procedimento posiciona o cursor no final do arquivo.   Var     err : TFiles.integer;     h   : TFiles.THandle;     NRec,Count : TFiles.Int64; Begin   with TFiles do   begin     err := FileOpen('index.html',h);     if (err = 0) and (fileSize('index.html',Count) = 0)     Then Begin            //Posiciona no final do arquivo            err := FileSeek(h,Count,fsFromBeginning,NRec);            if err &lt;&gt; 0            Then ShowMessage(ErrorMessage(err));            FileClose(h);          end     else ShowMessage(ErrorMessage(err));   end; end;        REFERÊNCIA:      [FileSeek](https://www.freepascal.org/docs-html/rtl/sysutils/fileseek.html)             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileSeek"},
     {"title": "mi.Rtl.Files.TFiles.FileRead", "text": "     O método FileRead ler Count bytes do arquivo passado pelo Handle e retorna o número de bytes lidos em BytesRead       PARÂMETROS      Handle: THandle - Handle do arquivo   Out Buffer - Buffer para onde os dados devem ser salvos;   Count: Int64 - Número de bytes a ser lido para o buffer;   Out BytesRead: Int64 - Número de Bytes lidos efetivamente.      RETORNO      Longint - 0 (zero se sucesso ou o código do erro se fracasso;   Em Buffer os dados lidos do arquivo;   Em BytesRead Retorna o número de bytes lidos efetivamente.   EXEMPLO      procedure TMi_Rtl_Tests.Action_Test_FileReadExecute(Sender: TObject);   // Este procedimento ler os últimos 10 bytes do arquivo index.html   Const Size = 10;   Var     err  : TFiles.integer;     h    : TFiles.THandle;     NRec,     Count : TFiles.Int64;     s     : String[255];     BytesLidos: Int64; Begin   with TFiles do   begin      err := FileOpen('index.html',h);     if (err = 0)     Then Begin            err := fileSize('index.html',Count);            if ( err = 0)            Then begin                  //Posiciona no final do arquivo                  err := FileSeek(h,Count-Size-length(LF),fsFromBeginning,NRec);                  if err &lt;&gt; 0                  Then ShowMessage(ErrorMessage(err))                  Else Begin                         err := FileRead(h,s[1],Size+length(LF),BytesLidos);                         if (err = 0) and (BytesLidos = Size+length(LF))                         Then Begin                                s[0] := chr(Size);                                ShowMessage('Bytes Lidos: '+s);                              end                         else ShowMessage('Ponteiro do arquivo é: '+IntToStr(NRec));                       end;             end            else ShowMessage(ErrorMessage(err));            FileClose(h);          end     else ShowMessage(ErrorMessage(err));   end; end;        REFERÊNCIA      [FileRead](https://www.freepascal.org/docs-html/rtl/sysutils/fileread.html)             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileRead"},
     {"title": "mi.Rtl.Files.TFiles.FileWrite", "text": "     O método FileWrite grava Count bytes do arquivo passado pelo Handle e retorna o número de bytes escritos em BytesWrite       PARÂMETROS      Handle: THandle - Handle do arquivo   Out Buffer - Buffer de onde os dados devem ser escritos para o arquivo;   Count: Int64 - Número de bytes a ser escritos do Buffer para o arquivo;   Out BytesRead: Int64 - Número de Bytes efetivamente escritos.      RETORNO      Longint - 0 (zero se sucesso ou o código do erro se fracasso;   Em Buffer os dados as ser escrito no arquivo;   Em BytesRead Retorna o número de bytes escritos efetivamente.   EXEMPLO       procedure TMi_Rtl_Tests.Action_Test_FileWriteExecute(Sender: TObject);    // Este procedimento adiciona a sequência '-0123456789-0123456789'+LF no fim do arquivo index.html    Var     Size : byte = 255;     err  : TFiles.integer;     h    : TFiles.THandle;      NRec, Count : TFiles.Int64;      s     : String[255];      BytesLidos,BytesWrites: Int64; Begin   with TFiles do   begin     s :=  '-0123456789-0123456789'+LF;     Size := length(s);      if not FileExists('index.html')     Then Err := FileCreate('index.html',fmOpenReadWrite, fmShareCompat or fmShareDenyNone ,h)     else Err := FileOpen('index.html',h);      if (err = 0)     Then Begin            err := fileSize('index.html',Count);            if ( err = 0)            Then begin                   //Posiciona no final do arquivo - length(LF)                   if Count &gt;= size                   then err := FileSeek(h,Count-length(LF),fsFromBeginning,NRec)                   else err := FileSeek(h,0,fsFromBeginning,NRec);                    if err = 0                   Then Begin                          //Acressenta string '-0123456789-0123456789'+LF no arquivo 'index.html'                          err:= FileWrite(h,s[1],length(s),BytesWrites);                          if (err = 0) and (BytesWrites = (length(s)))                          then Begin                                 ShowMessage('A sequência '+S+' foi adicionada no fim do arquivo.')                               end                          else begin                                 if (err &lt;&gt; 0)                                 Then ShowMessage(ErrorMessage(err))                                 else ShowMessage('Número de bytes escritos diferente de: '+IntToStr(length(s)));                               end;                        end                   else Begin                          ShowMessage(ErrorMessage(err))   ;                        end;            end            else ShowMessage(ErrorMessage(err));            FileClose(h);          end     else ShowMessage(ErrorMessage(err));   end; end;        REFERÊNCIA      [FileWrites](https://www.freepascal.org/docs-html/rtl/sysutils/filewrite.html)             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileWrite"},
     {"title": "mi.Rtl.Files.TFiles.FileExists", "text": "     A classe método FileExists checa se o arquivo passado no parâmetro existe.       ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileExists"},
     {"title": "mi.Rtl.Files.TFiles.DirectoryExists", "text": "     A classe método DirectoryExists checa se o diretório passado no parâmetro existe       ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#DirectoryExists"},
     {"title": "mi.Rtl.Files.TFiles.CreateDir", "text": "     A classe método CreateDir cria diretório passado no parâmetro       ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#CreateDir"},
     {"title": "mi.Rtl.Files.TFiles.GetTempFileName", "text": "A classe método GetTempFileName retorna o nome de um arquivo temporário no diretório Dir.       NOTA      Se Dir estiver vazio, o valor retornado por GetTempDir será usado.   O Prefix será 'TMP'.   Em caso de erro, uma string vazia é retornada.          ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#GetTempFileName"},
     {"title": "mi.Rtl.Files.TFiles.GetTempDir", "text": "A classe function GetTempDir retorna o diretório temporário do sistema.       NOTA      O nome retornado terminará com um caractere delimitador de diretório.   Não há garantia de que esse diretório exista ou seja gravável pelo usuário.          ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#GetTempDir"},
     {"title": "mi.Rtl.Files.TFiles.GetTempDir", "text": "A classe function GetTempDir retorna o diretório temporário do sistema.       PARÂMETROS      Const env : Variável de ambiente que tenha que contenha a pasta de arquivos temporários.   **out path:PathStr : Retorna a pasta dos arquivos temporários.      RETORNA      SmallInt : Código do erro se houver ou zero (0) se conseguiu gerar o nome da pasta.          ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#GetTempDir"},
     {"title": "mi.Rtl.Files.TFiles.GetDriveType", "text": "     A função GetDriveType é usada para saber o tipo de dispositivo associado a pasta.       PARÂMETRO      aPath - A pasta dona do arquivo.      RETORNA      O tipo de dispositivo do tipo TDriveType.             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#GetDriveType"},
     {"title": "mi.Rtl.Files.TFiles.DuplicateHandle", "text": "     A classe método DuplicateHandle duplica o handle do arquivo no windows e no linux essa função não funciona.       ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#DuplicateHandle"},
     {"title": "mi.Rtl.Files.TFiles.FileFlushBuffers", "text": "A classe function FileFlushBuffers descarrega o buffer do arquivo passado por aHandle       REFERÊNCIAS      [Linux](https://www.freepascal.org/docs-html/rtl/unix/fpfsync.html)   [windows](https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-flushfilebuffers)          ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FileFlushBuffers"},
     {"title": "mi.Rtl.Files.TFiles.LockFile", "text": "     A função LockFile trava uma região do arquivo. -NOTA      O lockfile do linux não bloqueia região do arquivo e sim o arquivo todo.        REFERÊNCIAS      [Linux](https://www.freepascal.org/docs-html/rtl/unix/fpflock.html)   [windows](https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-lockfile)             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#LockFile"},
     {"title": "mi.Rtl.Files.TFiles.UnLockFile", "text": "     A classe método UnLockFile destrava a região travada por LockFile.       NOTA      Funciona no linux mais não funciona do linux.             ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#UnLockFile"},
     {"title": "mi.Rtl.Files.TFiles.FindFiles", "text": "     A classe método FindFiles retorna uma lista de nomes de arquivos e diretórios que satisfazem os parâmetros: Mask e FileAttrs       EXEMPLO DE USO      procedure TMi_Rtl_Tests.FormCreate(Sender: TObject); begin   ListFiles := TMiStringList.Create;   Action_test_FindFirstExecute(Self); end;  procedure TMi_Rtl_Tests.Action_test_FindFirstExecute(Sender: TObject);   //Este procedimento ler os atributos da pasta: '.'    function GetInfoFile(FileName:string;attribute : Cardinal; out info : TSearchRec): Integer;    begin      Result := FindFirst(ExpandFileName(FileName),attribute,Info);      if Result = 0      then Begin             ShowMessage('O arquivo '+fileName+' contém o atributo: '+intToStr(attribute));           end      else begin             ShowMessage('O arquivo '+fileName+' não contém o atributo: '+intToStr(attribute));           end;   end;    var    Info: TSearchRec;    err,i : integer;     const FileAttrs : Cardinal = faHidden or                                 faReadOnly or                                 faSysFile or                                 faArchive or                                 faAnyFile or                                 faSymLink or                                 faDirectory ;   begin   ListFiles.Clear;   ListBox1.Clear;    FileAttrs := 0;    if CheckBox_faHidden.Checked   then FileAttrs := faHidden;    if CheckBox_faReadOnly.checked   then FileAttrs := FileAttrs or faReadOnly;    if CheckBox_faSysFile.checked   then FileAttrs := FileAttrs or faSysFile;    if CheckBox_faArchive.checked   then FileAttrs := FileAttrs or faArchive;    if CheckBox_faAnyFile.checked   then FileAttrs := FileAttrs or faAnyFile;    if CheckBox_faSymLink.checked   then FileAttrs := FileAttrs or faSymLink;    if CheckBox_faDirectory.checked   then FileAttrs := FileAttrs or faDirectory;    with TMI_ui_types do     FindFiles(Edit1.Text,FileAttrs ,ListFiles );    LabelCount.Caption := Format('ListFiles.Count %d',[ListFiles.Count]);   LabelCount.Show;   if ListFiles.Count &gt; 0   then begin           for i := 0 to ListFiles.Count-1 do           begin             ListBox1.Items.Add(ListFiles[i]);           end;        end; end;   procedure TMi_Rtl_Tests.Edit1Change(Sender: TObject); begin   Action_test_FindFirstExecute(Self); end;  procedure TMi_Rtl_Tests.CheckBox_faAnyFileChange(Sender: TObject); begin   Action_test_FindFirstExecute(Self); end;  procedure TMi_Rtl_Tests.CheckBox_faArchiveChange(Sender: TObject); begin   Action_test_FindFirstExecute(Self); end;  procedure TMi_Rtl_Tests.CheckBox_faDirectoryChange(Sender: TObject); begin   Action_test_FindFirstExecute(Self); end;  procedure TMi_Rtl_Tests.CheckBox_faHiddenChange(Sender: TObject); begin   Action_test_FindFirstExecute(Self); end;  procedure TMi_Rtl_Tests.CheckBox_faReadOnlyChange(Sender: TObject); begin   Action_test_FindFirstExecute(Self); end;  procedure TMi_Rtl_Tests.CheckBox_faSymLinkChange(Sender: TObject); begin   Action_test_FindFirstExecute(Self); end;  procedure TMi_Rtl_Tests.CheckBox_faSysFileChange(Sender: TObject); begin   Action_test_FindFirstExecute(Self); end;            ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FindFiles"},
     {"title": "mi.Rtl.Files.TFiles.GetCurrentDir", "text": "A classe método GetCurrentDir retorna o corrente pasta.    ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#GetCurrentDir"},
     {"title": "mi.Rtl.Files.TFiles.SetCurrentDir", "text": "A classe método SetCurrentDir define a pasta passado por NewDir como pasta corrente.  PARÂMETRO      NewDir - Nome da pasta a ser definida.    RETORNA      TRUE - Se sucesso   FALSE - Se fracasso;       ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#SetCurrentDir"},
     {"title": "mi.Rtl.Files.TFiles.IsDirectory", "text": "A classe método IsDirectory checa se a pasta passado por Directory é uma pasta válida.  PARÂMETRO      Directory - Nome da pasta    RETORNA      TRUE - Se a pasta existe   FALSE - Se a pasta não existe;       ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#IsDirectory"},
     {"title": "mi.Rtl.Files.TFiles.FPrimeiroHandleLivre", "text": "Retorna o numero de arquivos abertos no sistema operacional       NOTA      TaStaus : Retorna o número do error se ouver          ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FPrimeiroHandleLivre"},
     {"title": "mi.Rtl.Files.TFiles.FlockFile", "text": "A class function FlockFile define ou remove um bloqueio no arquivo passado por Handle.       PARÂMETROS       MODE      O modo pode ser uma das seguintes constantes:      LOCK_SH : define um bloqueio compartilhado.   LOCK_EX : define um bloqueio exclusivo.   LOCK_UN : desbloqueia o arquivo.   LOCK_NB : Isso pode ser OR junto com o outro. Se isso for feito, o aplicativo não bloqueia ao bloquear.            RETORNO      LONGINT : A função retorna zero se for bem-sucedida, um valor de retorno diferente de zero indica um erro.      REFERÊNCIA      https://www.freepascal.org/docs-html/rtl/unix/fpflock.html          ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#FlockFile"},
     {"title": "mi.Rtl.Files.TFiles.DiskFree", "text": "A class function DiskFree retorna o espaço livre (EM BYTES) da partição passada por Partition       PARÂMETRO:      0 para a partição atual.   1 para a primeira unidade de disquete.   2 Para a segunda unidade de disquete.   3 Para a primeira partição do disco rígido.   4-26 Para todas as outras unidades e partições.      REFERÊNCIA:      https://www.freepascal.org/docs-html/rtl/sysutils/diskfree.html      OBSERVAÇÃO:      No Linux, e no Unix em geral, o conceito de disco é diferente do dos um, uma vez que o sistema de arquivos é visto como uma grande árvore de diretórios. Por esta razão, os DiskFree e DiskSize funções devem ser mimetizado utilizando nomes de arquivos que residem nas partições. Para obter mais informações, consulte AddDisk.      EXEMPLO:      procedure testDiskFree;    var      VrDiskFree : int64; begin   WriteLn('TestDiskFree;');    VrDiskFree := Diskfree(0);   Writeln ('Free space of current disk: ',VrDiskFree, ' Bytes');    VrDiskFree := (VrDiskFree div 1024);   Writeln ('Free space of current disk: ',VrDiskFree,' KB)');    VrDiskFree := (VrDiskFree div 1024);   Writeln ('Free space of current disk: ',VrDiskFree,' MB)');    VrDiskFree := (VrDiskFree div 1024);   Writeln ('Free space of current disk: ',VrDiskFree,' GB)');    VrDiskFree := (VrDiskFree div 1024);   Writeln ('Free space of current disk: ',VrDiskFree,' TB)'); end;         ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#DiskFree"},
     {"title": "mi.Rtl.Files.TFiles.ByteDrive", "text": "    ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#ByteDrive"},
     {"title": "mi.Rtl.Files.TFiles.TStrError", "text": "   ", "tags": "", "url": "mi.Rtl.Files.TFiles.html#TStrError"},
     {"title": "mi.rtl.Objects.Consts", "text": "     A Unit mi.rtl.Objects.Consts reune todos as contantes da unit TObjects globais usados pela class TObjects e suas descendências do pacote mi.rtl.       NOTAS      Esta unit foi testada nas plataformas: win32, win64 e linux.      VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      18/11/2021 10:56 a ?? - Criar a unit mi.rtl.objects.Consts.pas   19/11/2021 20:35 a 21:22 - Conclusão da classe TObjectsConsts   13/12/2021 21:00 a 22:10 - Documentar unidade.         CÓDIGO FONTE:      mi.rtl.objects.consts.pas            ", "tags": "", "url": "mi.rtl.Objects.Consts.html"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts", "text": "     A class TObjectsConsts usada para separar as contantes da unit TObjects do pacote mi.rtl.      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.OkZeraFGetMem", "text": "True zera a memória alocada por FGetMem   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#OkZeraFGetMem"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.ErrorInfo", "text": "Stream error info   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#ErrorInfo"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stOk", "text": "     No stream error      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stOk"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stError", "text": "     Access error      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stError"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stCreateError", "text": "     Initialize error      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stCreateError"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stReadError", "text": "     Stream read error      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stReadError"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stWriteError", "text": "     Stream write error      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stWriteError"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stGetError", "text": "     Get Class error      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stGetError"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stPutError", "text": "     Put Class error      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stPutError"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stSeekError", "text": "     Seek error in stream      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stSeekError"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stOpenError", "text": "     Error opening stream      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stOpenError"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.StShareError", "text": "     Erro de compartilhamento      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#StShareError"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmReadOnly", "text": "000   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmReadOnly"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmWriteOnly", "text": "001   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmWriteOnly"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmReadWrite", "text": "010   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmReadWrite"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmDenyALL", "text": "0010000   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmDenyALL"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmDenyWrite", "text": "0100000   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmDenyWrite"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmDenyRead", "text": "0110000   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmDenyRead"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmDenyNone", "text": "1000000   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmDenyNone"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmChildProcesses", "text": "10000000   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmChildProcesses"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmCreate", "text": "100000000   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmCreate"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmWait", "text": "1000000000   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmWait"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmMemory", "text": "10000000000 - Indica que o arquivo esta em tStreamemoria   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmMemory"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FmMemory_Temp", "text": "100000000000 - Indica que o arquivo e temporario e esta em tStreamemoria   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FmMemory_Temp"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stOpenRead", "text": "000 - Read access only   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stOpenRead"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stOpenWrite", "text": "001 - Write access only   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stOpenWrite"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.stOpen", "text": "010 - Read/write access   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#stOpen"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.StCreate", "text": "100000000 - Create new file   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#StCreate"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.IsApp_TV", "text": "     A constante IsApp_TV indica se a aplicação gráfica é turbo vision.      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#IsApp_TV"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.IsApp_Console", "text": "     A constante IsApp_Console indica se a aplicação CGI deve ser compilado no modo console.      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#IsApp_Console"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.IsApp_Gui", "text": "     A constante IsApp_Gui indica se a aplicação é gráfica independente de usar vcl ou não.      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#IsApp_Gui"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.IsApp_ISAPI", "text": "     A constante IsApp_ISAPI indica se a aplicação web é compilada como dll deve ser executada em conjunto com browser.      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#IsApp_ISAPI"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.IsApp_App_WS_Soap", "text": "     A constante IsApp_App_WS_Soap indica se a aplicação web é publicado com serviço XML com Protocolo Soap      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#IsApp_App_WS_Soap"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.IsApp_VCL", "text": "     A constante IsApp_VCL indica se a aplicação VCL pode ser mista console e gráfica.      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#IsApp_VCL"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.IsApp_VCL_IE", "text": "     A constante IsApp_VCL_IE indica se a aplicação gráfica usa os componentes VCL e webBrowser como entrada de dados.      ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#IsApp_VCL_IE"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.IsApp_Cgi", "text": "     A constante IsApp_Cgi indica se a Aplicação é CGI.      NOTA -Ignora todo acesso do teclado e video do console usada como aplicações web, console ou GUI quando usado como pacote em tempo de designer.         ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#IsApp_Cgi"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.IsApp_DSServerModule", "text": "     A constante IsApp_DSServerModule indica se a Aplicação App_DSServerModule.      NOTA      Ignora todo acesso ao teclado e video do console usada como aplicações servidor de dados.            ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#IsApp_DSServerModule"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.coIndexError", "text": "Index out of range   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#coIndexError"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.coOverflow", "text": "Overflow   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#coOverflow"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.vmtHeaderSize", "text": "VMT header size   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#vmtHeaderSize"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.MaxBytes", "text": "Maximum data size   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#MaxBytes"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.MaxWords", "text": "Max word data size   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#MaxWords"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.MaxSmallWords", "text": "Max word data size   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#MaxSmallWords"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.MaxPtrs", "text": "Max ptr data size   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#MaxPtrs"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.MaxCollectionSize", "text": "Max collection size   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#MaxCollectionSize"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.StreamTypes", "text": "Stream types reg   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#StreamTypes"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.AnsiChar_Control_Template", "text": "AnsiChar_Control_Template : AnsiCharSet = [#0..#31,'`',&circ;a..&circ;z,&circ;A..&circ;Z];   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#AnsiChar_Control_Template"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.Okprocessing", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#Okprocessing"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.OkprocessingControlTime", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#OkprocessingControlTime"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.OkOkprocessingTime", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#OkOkprocessingTime"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.OkProcessingTime_Action", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#OkProcessingTime_Action"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.OkOkprocessingClockBegin", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#OkOkprocessingClockBegin"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.OkTempoDeTentativas", "text": "Habilita TempoDeTentativas nas leitura e escritas ao arquivo   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#OkTempoDeTentativas"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.TempoDeTentativas", "text": "TimeOut = Tempo em segundos de tentativos nos processos de abertura, leitura e gravacao de arquivos   ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#TempoDeTentativas"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.SetOkprocessing", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#SetOkprocessing"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.FreeAndNil", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#FreeAndNil"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.NewStr", "text": "-    ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#NewStr"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.NewSItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#NewSItem"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.CloneSItems", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#CloneSItems"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.CopyTemplateFrom", "text": "A class function CopyTemplateFrom é necessario porque um Template pode ser uma lista de Strings, onde está lista pode ser inserida em um objeto e discartada ao destruir o objeto.    ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#CopyTemplateFrom"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.PushSItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#PushSItem"},
     {"title": "mi.rtl.Objects.Consts.TObjectsConsts.Push_MsgErro", "text": "Coloca uma string na pilha    ", "tags": "", "url": "mi.rtl.Objects.Consts.TObjectsConsts.html#Push_MsgErro"},
     {"title": "mi.rtl.objects.consts.dialogs", "text": "-A unit mi.rtl.objects.consts.dialogs implementa a classe TDialogs do pacote mi.rtl.       VERSÃO:      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.Dialogs.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      2021-12-02 -22:15 a 23:00 - Criado a unit mi.rtl.objects.consts.dialogs e implementação da classe TDialogs            ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.html"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs", "text": "     A classe TDialogs é uma classe abstrata usada como base para contrução de mensagens para o usuário.       NOTA      A implementação da mesma deve ser feita no pacote mi.iu.dialogs;   A versão inicial irá usar os componentes Lazarus porque o mesmo está implementado em várias plataformas.            ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrNone", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrNone"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrOK", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrOK"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrCancel", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrCancel"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrAbort", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrAbort"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrRetry", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrRetry"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrIgnore", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrIgnore"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrYes", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrYes"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrNo", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrNo"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrAll", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrAll"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrNoToAll", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrNoToAll"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrYesToAll", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrYesToAll"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrClose", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrClose"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.mrLast", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#mrLast"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.ModalResultStr", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#ModalResultStr"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.owner", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#owner"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.Create", "text": "    ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#Create"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.Alert", "text": "     A procedure Alert executa um diálogo com dois botões: OK e Cancel       ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#Alert"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.Confirm", "text": "     A função Confirm executa um diálogo fazendo uma pergunta com os botões OK e Cancel.       RETORNA:      True : Se o botão OK foi pressionado;   False : Se o botão Cancel foi pressionado.             ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#Confirm"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.Prompt", "text": "     A função Prompt mostra um diálogo com dois botões OK e Cancel e uma entrada de dados solicitando que o usuário digite um valor.       RETORNA:      True : Se o botão ok foi pressionado;   False : Se o botão cancel foi pressionado.   aResult : Retorna a string digitada no formulário;             ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#Prompt"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.GetPassword", "text": "     A função GetPassword mostra um diálogo para receber um valor sem mostrar o que foi digitado. O formulário possui dois botões OK e Cancel       RETORNA:      True : Se o botão ok foi pressionado;   False : Se o botão cancel foi pressionado.   apassword : Retorna a string com a senha do usuário.             ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#GetPassword"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.GetPassword", "text": "     A função GetPassword mostra um diálogo solicitando o login do usuário e a senha e dois botões: OK e Cancel       RETORNA:      True : Se o botão ok foi pressionado;   False : Se o botão cancel foi pressionado.   aUsername : Retorna a string com nome do usuário.   apassword : Retorna a string com a senha do usuário.             ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#GetPassword"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.PModalResult", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#PModalResult"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.TModalResult", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#TModalResult"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.TMsgDlgBtn", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#TMsgDlgBtn"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.TMsgDlgButtons", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#TMsgDlgButtons"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.TMsgDlgType", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#TMsgDlgType"},
     {"title": "mi.rtl.objects.consts.dialogs.TDialogs.TStrError", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.dialogs.TDialogs.html#TStrError"},
     {"title": "mi.rtl.Objects.Consts.Logs", "text": "     A Unit mi.rtl.Objects.Consts.Logs implementa a classe TFilesLogs baseado na classe TEventLog da FCL       VERSÃO      Alpha - 0.5.0.693      REFERÊNCIA      [TEventLog](https://www.freepascal.org/docs-html/current/fcl/eventlog/teventlog.html)      CÓDIGO FONTE:      mi.rtl.files.logs.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      08/12/2021      13:55 a 18:30 : Análise do projeto mi.rtl.Objects.Consts.Logs;   20:30 a 22:40 : Criar a unit mi.rtl.Objects.Consts.Logs e a classe TFilesLogs;      09/12/2021      06:20 a 07:06 : Documentar a unit mi.rtl.Objects.Consts.Logs;   09:02 a 12:15 : Documentar a classe TFilesLogs.   14:45 a 15:15 : Criar os métodos TFilesLogs.Warning e documentar.      13/12/2021      20:40 a ?? -Criar os métodos TFilesLogs.info e documentar.                  ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.html"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs", "text": "     A classe TFilesLogs é usada para registrar no arquivo ParamStr(0)+'.log' as mensagens de Erros, Atenções e avisos do sistema.       NOTA      A classe TObjectss implementa a constante global const TObjectss.Logs : TFilesLogs = nil; que é inicializado em mi.rtl.objectss.Initialization e destruído em mi.rtl.objectss.finalization            ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.EnableWriteIdentificao", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#EnableWriteIdentificao"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.Create", "text": "O constructor Create cria uma instância da classe TFilesLogs e inicializa as propriedade FileName := ParamStr(0)+'.log', LogType := ltFile, RaiseExceptionOnError := true, AppendContent := true e  active := true.    ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#Create"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#destroy"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.Warning", "text": "     A procedure Warning é usada registrar mensagens do tipo etWarning.       PARÂMETROS      Fmt : String que será formatada com a função [Format](https://www.freepascal.org/docs-html/rtl/sysutils/format.html)   Args : Valores a serem usadas no função format(FMT,Args)      REFERÊNCIA      [TEventLog.warning](https://www.freepascal.org/docs-html/fcl/eventlog/teventlog.warning.html)      EXEMPLO:      procedure TMi_Rtl_Tests.Action_test_Logs_WarningExecute(Sender: TObject); begin   with Tobjectss do     if Logs.Active then     with Logs do     begin       Warning('Pouco espaço em disco. Tamanho livre = %s.', ['1GB']);     end; end;         Arquivo de logs: rtl.log:      [2021-12-09 14:58:00.588 Warning] Pouco espaço em disco. Tamanho livre = 1GB.                ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#Warning"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.Warning", "text": "     A procedure Warning é usada registrar mensagens do tipo etWarning.       PARÂMETROS      Msg : String com a mensagem de atenção.      REFERÊNCIA      [TEventLog.warning](https://www.freepascal.org/docs-html/fcl/eventlog/teventlog.warning.html)      EXEMPLO:      procedure TMi_Rtl_Tests.Button2Click(Sender: TObject); begin   with Tobjectss do     if Logs.Active then     with Logs do     begin       Warning('Senha inválida!');     end; end;         Arquivo de logs: rtl.log:      [2021-12-09 14:58:00.588 Warning] Senha inválida                ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#Warning"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.Error", "text": "     A procedure Error é usada registrar mensagens do tipo etError.       PARÂMETROS      Fmt : String que será formatada com a função [Format](https://www.freepascal.org/docs-html/rtl/sysutils/format.html)   Args : Valores a serem usadas no função format(FMT,Args)      REFERÊNCIA      [TEventLog.error](https://www.freepascal.org/docs-html/fcl/eventlog/teventlog.error.html)      EXEMPLO:      procedure TMi_Rtl_Tests.Action_test_Logs_ErrorExecute(Sender: TObject); begin   with Tobjectss do     if Logs.Active then     with Logs do     begin       Error('Exemplo de mensagem de erro. Número do erro = %d.', [5]);     end; end;         Arquivo de logs: rtl.log:      [2021-12-09 10:25:41.425 Error] Exemplo de mensagem de erro. Número do erro = 5.                ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#Error"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.Error", "text": "     A procedure Error é usada registrar mensagens do tipo etError.       PARÂMETROS      Msg : String com o nome do erro.      REFERÊNCIA      [TEventLog.error](https://www.freepascal.org/docs-html/fcl/eventlog/teventlog.error.html)      EXEMPLO:      procedure TMi_Rtl_Tests.Button2Click(Sender: TObject); begin   with TObjectss do     if Logs.Active then     with Logs do     begin       Error('Acesso ao arquivo negado.' );     end; end;         Arquivo de logs: rtl.log:      [2021-12-09 10:25:41.425 Error] Acesso ao arquivo negado.                ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#Error"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.Info", "text": "     A procedure Info é usada registrar mensagens do tipo etInfo.       PARÂMETROS      Fmt : String que será formatada com a função [Format](https://www.freepascal.org/docs-html/rtl/sysutils/format.html)   Args : Valores a serem usadas no função format(FMT,Args)      REFERÊNCIA      [TEventLog.Info](https://www.freepascal.org/docs-html/current/fcl/eventlog/teventlog.info.html)      EXEMPLO:      procedure TMi_Rtl_Tests.Action_test_Logs_InfoExecute(Sender: TObject); begin   with Tobjectss do     if Logs.Active then     with Logs do     begin       Info('A versão %s será lançada em breve.', ['Beta 3.5']);     end; end;         Arquivo de logs: rtl.log:      [2021-12-13 20:46:32.745 Info] A versão Beta 3.5 será lançada em breve.                ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#Info"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.Info", "text": "     A procedure Info é usada registrar mensagens do tipo etInfo.       PARÂMETROS      Msg : String com mensagem informativa.      REFERÊNCIA      [TEventLog.Info](https://www.freepascal.org/docs-html/current/fcl/eventlog/teventlog.info.html)      EXEMPLO:      procedure TMi_Rtl_Tests.Action_Test_Logs_InfoExecute(Sender: TObject); begin   with Tobjectss do     if Logs.Active then     with Logs do     begin       info('Sistema abortou de forma inesperada.' );     end; end;         Arquivo de logs: rtl.log:      [2021-12-13 20:46:32.745 Info] Sistema abortou de forma inesperada.                ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#Info"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs._Write", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#_Write"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.Flush_WiteBuffer", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#Flush_WiteBuffer"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.WriteFErr_Ln_On_Off", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#WriteFErr_Ln_On_Off"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.WriteFErr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#WriteFErr"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.WriteLnFErr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#WriteLnFErr"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.WriteIdentificao", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#WriteIdentificao"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.LogError", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#LogError"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.LogError", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#LogError"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.fileLog", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#fileLog"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.FileName", "text": "A propriedade FileName armazena o nome do arquivo de log necessário quando a propriedade LogType=ltFile   ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#FileName"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.Active", "text": "A propriedade Active ativa e desativa a gravação de mensagens no arquivo de log.   ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#Active"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.LogType", "text": "     A propriedade LogType redireciona o destino das mensagens de log.       Veja o tipo TLogType para mais informações.         ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#LogType"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.AppendContent", "text": "     A propriedade AppendContent é usada para indicar ao sistema que o arquivo de log deve ser único ou acumulativo       PARÂMETROS      True : A abertura do arquivo de log é aberto com o comando append   False : A abertura do arquivo de log é aberto com o comando rewrite   Código usado na abertura do arquivo      if AppendContent and FileExists(FileName) then    FileFlags := fmOpenWrite else    FileFlags := fmCreate;              ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#AppendContent"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.RaiseExceptionOnError", "text": "     A propriedade RaiseExceptionOnError informa ao sistema se deve gerar exceções quando houver erro ao gravar o log.       Exemplo de uso de RaiseExceptionOnError      procedure TEventLog.WriteFileLog(EventType : TEventType; const Msg : String);   Var     S : String; begin   S:=FormatLogMessage(EventType, Msg)+LineEnding;   try     FStream.WriteBuffer(S[1],Length(S));     S:='';   except     On E : Exception do        S:=E.Message;     end;    If (S&lt;&gt;'') and RaiseExceptionOnError    then  Raise ELogError.CreateFmt(SErrLogFailedMsg,[S]);  end;           ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#RaiseExceptionOnError"},
     {"title": "mi.rtl.Objects.Consts.Logs.TFilesLogs.TLogType", "text": "     O tipo TLogType é usado pra direcionar o destino das mensagens de log.       TLogType      ltSystem : Envia as mensagens de log para /var/syslog no linux ou o arquivo de log do sistema operacional.      Obs: O windows não tem esse arquivo de log padrão, por isso não funciona na plataforma windows.      ltFile : Envia as mensagens de log para NomeDoArquivo.log definido por FileName.   ltStdOut : Envia as mensagens de log para o monitor de vídeo.   ltStdErr : Envia as mensagens de log para o monitor de vídeo.            ", "tags": "", "url": "mi.rtl.Objects.Consts.Logs.TFilesLogs.html#TLogType"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If", "text": "     A unit mi.rtl.Objects.Consts.ProgressDlg_If implementa a classe TProgressDlg_If do pacote mi.rtl.       VERSÃO:      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.methods.tprogressdlg_if.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      2021-12-18      14:42 15:30 - T12 Criar a unit mi.rtl.Objects.Consts.ProgressDlg_If e a classe Tprogressdlg_if      2021-12-21      8:27 a xx - T21 documentar a classe TProgressDlg_If                  ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.html"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If", "text": "     A classe TProgressDlg_If é uma classe abstrata para comunicação com o usuário cujo a implementação deve ser feita nas plataformas: LCL, HTML e JavaScript.       NOTA      Só cria o dialogo se a posição chegar no delta.      Exemplo do uso de TProgressDlg_If      Var   ProgressDlg_If : TProgressDlg_If; Begin   ProgressDlg_If := TProgressDlg_If.Create('Pesquisando registro',Alias,20);    Repeat     ProgressDlg_If.IncPosition;   Until Not next;    ProgressDlg_If.Free; end.           ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If._TimeCurrent", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#_TimeCurrent"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If._TimeBegin", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#_TimeBegin"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If._TimeForeseen", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#_TimeForeseen"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If._Percent", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#_Percent"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Set_Total", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Set_Total"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Set_Delta", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Set_Delta"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Set_Limit", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Set_Limit"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Set_Title", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Set_Title"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Set_observation", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Set_observation"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Create_ProgressDlg", "text": "A procedure Create_ProgressDlg deve ser anulada para implementar a criação do diálogo no pacote visual ou seja: Na interface do usuário que pode ser LCL, Javascript, tv32 etc..    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Create_ProgressDlg"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.RegisterOnEvents", "text": "A procedure RegisterOnEvents deve ser anulada para implementar os eventos desta classe caso a mesma não esteja registrada na IDE    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#RegisterOnEvents"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Create", "text": "O constructor Create é necessário porque essa classe pode ser registrada da IDE    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Create"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Create", "text": "O constructor Create é usado para criar a classe sem a IDE    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Create"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Destroy", "text": "O destructor Destroy é usado para destruir a classe.    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Destroy"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.IncPosition", "text": "A propriedade IncPosition deve ser anulada na classe visual para incrementar aDelta na posição atual do processamento.    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#IncPosition"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.IncPosition", "text": "A propriedade IncPosition deve ser anulada na classe visual para incrementar 1 na posição atual do processamento.    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#IncPosition"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Redraw", "text": "A propriedade Redraw deve ser anulada para implementar na classe visual para atualizar a tela com a posição atual do processamento.    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Redraw"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.SetPerc", "text": "A procedure SetPerc é usado para informar ao dialogo a posição atual da contagem.       NOTA      Calcula o percentual atual do processamento.          ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#SetPerc"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Total", "text": "A propriedade Total é o total de elementos previstos na lista ao inicial o dialogo   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Total"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Delta", "text": "A propriedade Delta informado ao dialogo o intervalo no qual o dialogo precisa ser criado para que o usuário veja a previsão de termino.   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Delta"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Limit", "text": "A propriedade Limit é o numero de linhas do controle que está sendo visualizado.   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Limit"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.Title", "text": "A propriedade Title é usado no título do dialogo indicando a tarefa que está sendo executada.   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#Title"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.observation", "text": "A propriedade observation é usado na barra de status do dialogo indicando qual o atalho aborta a operação   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#observation"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.onCreate_ProgressDlg", "text": "A propriedade onCreate_ProgressDlg deve ser implementado no pacote visual ou seja: Na interface do usuário que pode ser LCL, Javascript, tv32 etc..   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#onCreate_ProgressDlg"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.onIncPosition_01", "text": "A propriedade onIncPosition_01 deve ser implementada na classe visual para incrementar aDelta na posição atual do processamento.   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#onIncPosition_01"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.onIncPosition", "text": "A propriedade onIncPosition deve ser implementada na classe visual para incrementar 1 na posição atual do processamento.   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#onIncPosition"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.OnRedraw", "text": "A propriedade OnRedraw deve ser implementada na classe visual para atualizar a tela com a posição atual do processamento.   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#OnRedraw"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.TCreate_ProgressDlg", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#TCreate_ProgressDlg"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.TIncPosition", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#TIncPosition"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.TIncPosition_01", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#TIncPosition_01"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.TRedraw", "text": "O evento TRedraw é usado para atualiza a tela.    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If.html#TRedraw"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.Register", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.html#Register"},
     {"title": "mi.rtl.Objects.Consts.ProgressDlg_If.TProgressDlg_If_Class", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Consts.ProgressDlg_If.html#TProgressDlg_If_Class"},
     {"title": "mi.rtl.objects.consts.strings", "text": "   ", "tags": "", "url": "mi.rtl.objects.consts.strings.html"},
     {"title": "mi.rtl.Objects.Methods", "text": "     A Unit mi.rtl.Objects.Methods implementa a classe TObjectsMethods do pacote mi.rtl.       NOTAS      Esta unit foi testada nas plataformas: win32, win64 e linux.      VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      19/11/2021 21:25 a 23:15 Criar a unit mi.rtl.objects.TObjectsMethods.pas   20/11/2021 18:00 a 19:15 Criar a unit mi.rtl.objects.tStream.pas         CÓDIGO FONTE:      mi.rtl.objects.Methods.pas            ", "tags": "", "url": "mi.rtl.Objects.Methods.html"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods", "text": "     A classe TObjectsMethods implementa os método de classe comum a todas as classes de TObjects do pacote mi.rtl.      ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.MI_MsgBox", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#MI_MsgBox"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods._Logs", "text": "     Logs é inicializado em Initialization e destruído em finalization      ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#_Logs"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Logs", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Logs"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.SysMessageBox", "text": "     O método de classe SysMessageBox executa o diálogo MessageBox do Lazarus;       REFERÊNCIA      https://wiki.lazarus.freepascal.org/Dialog_Examples#MessageBox             ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#SysMessageBox"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.MessageBox", "text": "A classe MessageBox deve ser implementada no pacote mi.ui.    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#MessageBox"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.MessageBox", "text": "O método MessageBox recebe 3 parâmetros. Criar um dialogo e retrona as opções escolhidas.       Exemplo de uso      If MessageBox('O arquivo '+TMI_DataFile(DatF).nomeArq+' não existe.'+&circ;M+               &circ;M+               'Cria o arquivo agora?'               ,MtConfirmation,mbYesNoCancel,mbYes)= MrYes Then begin      end;         ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#MessageBox"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Abstracts", "text": "     A classe método Abstracts encerra o programa com um erro de tempo de execução 211.      NOTA      Ao implementar um tipo de classe abstrato, chame Abstract nesses métodos Override que deve ser substituído em tipos descendentes. Isso garante que qualquer tentativa de usar instâncias do tipo abstrato de classe falhará.             ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Abstracts"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.RegisterError", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#RegisterError"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.RegisterType", "text": "     A classe método RegisterType registra o tipo de classe fornecido com os fluxos do Free Vision, criando uma lista de objetos conhecidos. Streams só podem armazenar e retornar esses Tipos de classe.      Cada classe registrada precisa de um registro de stream único registro, do tipo TStreamRec.          ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#RegisterType"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.LongMul", "text": "     A class function LongMul retorna o valor inteiro longo de valores inteiros X * Y.       ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#LongMul"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.LongDiv", "text": "A classe function LongDiv retorna o valor inteiro do inteiro longo X dividido pelo inteiro Y.    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#LongDiv"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.NNewStr", "text": "-    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#NNewStr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.CallPointerLocal", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#CallPointerLocal"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.DisposeStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#DisposeStr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IsValidPtr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IsValidPtr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IsValidPtr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IsValidPtr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Name_Type_App_MarIcaraiV1", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Name_Type_App_MarIcaraiV1"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Set_IsApp_VCL", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Set_IsApp_VCL"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.PopSItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#PopSItem"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.DISCARD", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#DISCARD"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.DISCARD", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#DISCARD"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.SetFlushBuffer_Disk", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#SetFlushBuffer_Disk"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.SetFlushBuffer", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#SetFlushBuffer"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.GetDosTicks", "text": "     returns ticks at 18.2 Hz, just like DOS       ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#GetDosTicks"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Seg_to_MillSeg", "text": "A função Seg_to_MillSeg converte segundos para milisegundos.       NOTA      1 Milliseconds = 1/1000 segundos -&gt; 1 segundo = 1000 Milliseconds          ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Seg_to_MillSeg"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.RunError", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#RunError"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Run_Error", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Run_Error"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Alert", "text": "     A procedure Alert executa um dialogo com botão OK       ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Alert"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.ShowMessage", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#ShowMessage"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Confirm", "text": "     A função Confirm executa um dialogo com os botões OK e Cancel fazendo uma pergunta.       RETORNA:      True : Se o botão OK foi pŕessionando;   False : Se o botão Cancel foi pŕessionando.             ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Confirm"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.InputValue", "text": "O método InputValue ler um valor na tela e retorna em aValue o valor e em result retorna MrOk ou MrCancel    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#InputValue"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Prompt", "text": "     A função Prompt mostra um dialogo com dois botões OK e Cancel e um campo input solicitando que o usuário digite um valor.       RETORNA:      True : Se o botão ok foi pŕessionando;   False : Se o botão cancel foi pŕessionando.   aResult : Retorna a string digitada no formulário;             ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Prompt"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.InputPassword", "text": "     A função InputPassword mostra um dialogo solicitando o login do usuário e a senha e dois botões OK e Cancel       RETORNA:      True : Se o botão ok foi pŕessionando;   False : Se o botão cancel foi pŕessionando.   aUsername : Retorna a string com nome do usuário.   apassword : Retorna a string com a senha do usuário.             ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#InputPassword"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.InputPassword", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#InputPassword"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.DisposeSItems", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#DisposeSItems"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.DisposeSItems", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#DisposeSItems"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.MaxItemStrLen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#MaxItemStrLen"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.MaxItemStrLen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#MaxItemStrLen"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.conststr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#conststr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.centralizesStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#centralizesStr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.TypeFld", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#TypeFld"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.TypeFld", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#TypeFld"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IStr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IStr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IStr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.StrNum", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#StrNum"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.StrNum", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#StrNum"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IIF", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IIF"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IIF", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IIF"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IIF", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IIF"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IIF", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IIF"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IIF", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IIF"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.SIF", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#SIF"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.MinL", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#MinL"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.MaxL", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#MaxL"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.NumToStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#NumToStr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.InsertCrtlJ", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#InsertCrtlJ"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Create_Progress1Passo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Create_Progress1Passo"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Set_Progress1Passo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Set_Progress1Passo"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Destroy_Progress1Passo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Destroy_Progress1Passo"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.LogError", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#LogError"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.LogError", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#LogError"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.WideStringToString", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#WideStringToString"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Set_FileModeDenyALLSalvaAnt", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Set_FileModeDenyALLSalvaAnt"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Set_FileModeDenyALL", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Set_FileModeDenyALL"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Sitems_MsgErro", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Sitems_MsgErro"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Pop_MsgErro", "text": "Retire o ultimo string na pilha    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Pop_MsgErro"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.SpcStrD", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#SpcStrD"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.CentralizaStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#CentralizaStr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.spc", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#spc"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.NumberCharControl", "text": "O método NumberCharControl retorna o número de caracteres de controle da string s    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#NumberCharControl"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.StrAlinhado", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#StrAlinhado"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.StringToSItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#StringToSItem"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.StringToSItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#StringToSItem"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.SItemsLen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#SItemsLen"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.SItemToString", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#SItemToString"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.WriteSItems", "text": "A classe procedure WriteSItems retorna um TStringList com a lista passado por items       NOTA      S : Deve ser passado não inicializado, ouseja deve ser NIL.          ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#WriteSItems"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.PSItem_ListaDeMsgErro", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#PSItem_ListaDeMsgErro"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.MessageError", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#MessageError"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.String_ListaDeMsgErro", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#String_ListaDeMsgErro"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Dispose_ListaDeMsgErro", "text": "A procedure Dispose_ListaDeMsgErro esvazia a pilha de mensagens de error caso as mensagen não tenhão sido tratadas antes de encerrar TMI_Application.    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Dispose_ListaDeMsgErro"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.FMaiuscula", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#FMaiuscula"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.AnsiString_to_USASCII", "text": "A função AnsiString_to_USASCII remove os acentos do texto pText       REFERÊNCIA      Exemplo completo: https://showdelphi.com.br/dica-funcao-para-remover-acentos-de-uma-string-delphi/          ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#AnsiString_to_USASCII"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.RemoveAccents", "text": "A class function RemoveAccents converte caracteres acentuados para caracteres não acentuados       POR QUE?      Preciso que as chaves dos índices não tenha acentos para evitar confusão nas pesquisas.          ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#RemoveAccents"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.String_Asc_GUI_to_Asc_Ingles", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#String_Asc_GUI_to_Asc_Ingles"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.SGI", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#SGI"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.String_Asc_GUI_to_Asc_HTML", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#String_Asc_GUI_to_Asc_HTML"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.SGH", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#SGH"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Show_GetEnv_System", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Show_GetEnv_System"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.FGetMem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#FGetMem"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.FFreeMem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#FFreeMem"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.CGetMem", "text": "Retorna um ponteiro para a memória alocada e este ponteiro aponta para uma copia dos dados passado por BuffOriginal    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#CGetMem"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.isfileopen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#isfileopen"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.isfileopen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#isfileopen"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.CloseLst", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#CloseLst"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.RedirecionaParaImpressora", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#RedirecionaParaImpressora"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.RedirecionaRelatorio", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#RedirecionaRelatorio"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.ChangeSubStr", "text": "Retorna S com o tString Trocado    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#ChangeSubStr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Alias_To_Name", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Alias_To_Name"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.CreateGUID", "text": "A class método CreateGUID cria um novo valor de GUID (Globally Unique Identifier).       RETORNA      GUID : Novo GUID se sucesso ou string vazia se fracasso.          ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#CreateGUID"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.SetExecAsync", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#SetExecAsync"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.GetExecAsync", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#GetExecAsync"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.ShellExecute", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#ShellExecute"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.ShellExecute", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#ShellExecute"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.ShellExecute", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#ShellExecute"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.GetIpPub", "text": "A classe function GetIpPub retorna o ip publico da máquina local    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#GetIpPub"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.StrToInt", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#StrToInt"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.BooleanToStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#BooleanToStr"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.DelSpcED", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#DelSpcED"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Delspace", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Delspace"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.GetNameValid", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#GetNameValid"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IsNumber_Real", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IsNumber_Real"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IsNumber", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IsNumber"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IsData", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IsData"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IsHora", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IsHora"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.HandleEvent", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#HandleEvent"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.ClearEvent", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#ClearEvent"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Change_AnsiChar", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Change_AnsiChar"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.DeleteMask", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#DeleteMask"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.DeleteMask", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#DeleteMask"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.AddMask", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#AddMask"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.CreateDB_or_DropDB", "text": "A função CreateDB_or_DropDB é usada para criar ou apagar um banco de dados       Banco de dados possíveis:      PostreSQL;   SqlLite;           Retorna      True : Conseguiu criar o banco de dados;   False : Error na ação      Error possiveis:      Banco de dados já existe quando se quer criar;   Banco de dados não existe quando se quer apagar;   Banco de dados usado por outro usuário.            EXEMPLO      // Cria banco de dados maricarai no postgresSql Procedure TForm1.Button2sqlPQConectionClick ( Sender : TObject ) ;   var     s : String; begin   s := CreateDB_or_DropDB(PostgresSQL,'127.0.0.1',                                     'postgres',                                     'masterkey',                                     'maricarai',                                     true);   if s = ''   then ShowMessage('Banco de dados maricarai foi criado no postgresSql')   else ShowMessage(s); End;  // Apaga banco de dados maricarai no SqLite3 Procedure TForm1.Button2sqlPQConectionClick ( Sender : TObject ) ;   var     s : String; begin   s:= CreateDB_or_DropDB(PostgresSQL,'127.0.0.1',                                     'SqLite3',                                     'masterkey',                                     'maricarai',                                     false);   if s = ''   then ShowMessage('Banco de dados maricarai foi apagado SqLite3')   else ShowMessage(s); End;         ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#CreateDB_or_DropDB"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.StrNumberValid", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#StrNumberValid"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.CheckRanger", "text": "o classe método CheckRanger checa se s está entre aHigh e aLow retorna zero se houver erro e em aErr o código do erro.    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#CheckRanger"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.IntValid", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#IntValid"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.Alias", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#Alias"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.TFilesLogs", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#TFilesLogs"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.TMI_MsgBox", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#TMI_MsgBox"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.TProgressDlg_If", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#TProgressDlg_If"},
     {"title": "mi.rtl.Objects.Methods.TObjectsMethods.TProgressDlg_If_Class", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.TObjectsMethods.html#TProgressDlg_If_Class"},
     {"title": "mi.rtl.Objects.Methods.Collection", "text": "     A Unit mi.rtl.Objects.Methods.Collection implementa a classe TCollection do pacote mi.rtl.       NOTAS      Esta unit foi testada nas plataformas: linux.      VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.TCollection.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      20/11/2021 10:12 a 22:49 : Criada a classe mi.rtl.Objects.Methods.Collection               ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection", "text": "     A class TCollection implementa coleções no pacote mi.rtl.      ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Items", "text": "Item list pointer   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Items"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.State", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#State"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Limit", "text": "Item limit count   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Limit"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Delta", "text": "Inc delta size   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Delta"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Status", "text": "TCollection status   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Status"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.ErrorInfo", "text": "TCollection error info   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#ErrorInfo"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Destroy"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.IndexOf", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#IndexOf"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.GetItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#GetItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Insert", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Insert"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.FreeItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#FreeItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.SetLimit", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#SetLimit"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Error", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Error"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.PutItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#PutItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Create_Progress1Passo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Create_Progress1Passo"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Set_Progress1Passo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Set_Progress1Passo"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Destroy_Progress1Passo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Destroy_Progress1Passo"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.MessageBox", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#MessageBox"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.At", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#At"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.LastThat", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#LastThat"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.FirstThat", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#FirstThat"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Pack", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Pack"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.FreeAll", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#FreeAll"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.DeleteAll", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#DeleteAll"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Free", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Free"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Delete", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Delete"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.AtFree", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#AtFree"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.AtDelete", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#AtDelete"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.ForEach", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#ForEach"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.AtPut", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#AtPut"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.AtInsert", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#AtInsert"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.Count", "text": "Item count   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#Count"},
     {"title": "mi.rtl.Objects.Methods.Collection.TCollection.TStream", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.TCollection.html#TStream"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams", "text": "     A unit mi.rtl.Objects.Methods.Collection.FilesStreams implementa a classe TFilesStreams do pacote mi.rtl.       VERSÃO:      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.methods.Collection.FilesStreams.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      2021-12-18      14:42 a .. - T12 Criar a unit mi.rtl.Objects.Methods.Collection.FilesStreams e a classe TFilesStreams      2021-12-20      17:11 a 18:30 - T12 Criar a classe TFilesStreams   20:20 a 22:54 - T21 Criar exemplo de uso da classe TFilesStreams                  ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams", "text": "     A classe TFilesStreams é usada para armazenar todos os arquivos abertos pelo sistema para poder fecha-los caso o programa aborte inesperadamente.       EXEMPLO DE USO      procedure TMi_Rtl_Tests.TabSheet_TFilesStreamsEnter(Sender: TObject);   var    i,L : integer;    s:AnsiString;  begin   filesStreams.DeleteAll;   StringGrid1.Clear;    filesStreams.Mask := edit2.Text;   StringGrid1.RowCount := filesStreams.Count+1;    LabelCount2.Caption := Format('FilesStreams.Count %d',[filesStreams.Count]);   LabelCount2.Show;   L := 0;   StringGrid1.Cells[0,l] := 'Seq';   StringGrid1.Cells[1,l] := 'FileName';   StringGrid1.Cells[2,l] := 'FileSize';   inc(l);   if filesStreams.Count &gt; 0   then begin           for i := 0 to filesStreams.Count-1 do           with filesStreams.FileByNum(i) do           begin             StringGrid1.Cells[0,l] := Format('%d',[l]);             StringGrid1.Cells[1,l] := FileName;             s := Format('%d',[FileSize(FileName)]);             StringGrid1.Cells[2,l] := s ;             inc(L);           end;        end;  end;  procedure TMi_Rtl_Tests.Edit2Change(Sender: TObject); begin   TabSheet_TFilesStreamsEnter(Self); end;           ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.SetMask", "text": "     O método SetMask é usado para filtrar os arquivo da pasta corrente do banco de dados.       Nota      Para compreender essa função é bom ler o exemplo: TFiles.FindFiles             ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#SetMask"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.FileByNum", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#FileByNum"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.FileByName", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#FileByName"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.CopyFiles", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#CopyFiles"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.DeleteFiles", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#DeleteFiles"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.Error", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#Error"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.Create_Progress1Passo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#Create_Progress1Passo"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.Set_Progress1Passo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#Set_Progress1Passo"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.Destroy_Progress1Passo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#Destroy_Progress1Passo"},
     {"title": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.Mask", "text": "     A propriedade Mask é usada como filtro na função SysUtils.FindFirst      ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.FilesStreams.TFilesStreams.html#Mask"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection", "text": "     A Unit mi.rtl.Objects.Methods.Collection.SortedCollection implementa a classe TSortedCollection do pacote mi.rtl.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.tcollection.tsortedcollection.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      30/11/2021      9:45 a 11:47 : Criada a unit mi.rtl.Objects.Methods.Collection.SortedCollection e a classe TSortedCollection                  ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection", "text": "     A class TSortedCollection implementa coleções ordenadas de objetos.       EXEMPLO DE USO      ???           ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.Duplicates", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.html#Duplicates"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.Create", "text": "Duplicates flag    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.KeyOf", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.html#KeyOf"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.IndexOf", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.html#IndexOf"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.Compare", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.html#Compare"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.Search", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.html#Search"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.Insert", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.html#Insert"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.GetMaxLength", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.html#GetMaxLength"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.tstrings", "text": "=n specifies the maximum number of AnsiCharacters   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.TSortedCollection.html#tstrings"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection", "text": "     A Unit mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection implementa a classe TStrCollection do pacote mi.rtl.       NOTA      A diferença de tstringCollection para TStrCollection é que a primeira é uma coleção de shortstring e a segunda é uma coleção de PByteArray usada para trabalhar com AnsiString;      VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.tcollection.tsortedcollection.tstrcollection.pas       HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      30/11/2021      11:47 a 11:47 : Criada a unit mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection e a classe TStCollection   14:00 a 14:20 : Documentar a unit                  ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TStrCollection", "text": "A classe TStrCollection implementa uma coleção de AnsiString   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TStrCollection.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TStrCollection.Compare", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TStrCollection.html#Compare"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TStrCollection.GetItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TStrCollection.html#GetItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TStrCollection.FreeItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TStrCollection.html#FreeItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TStrCollection.PutItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TStrCollection.html#PutItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TUnSortedStrCollection", "text": "A classe TUnSortedStrCollection implementa uma coleção de AnsiString na ordem original de inserção das AnsiStrings   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TUnSortedStrCollection.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TUnSortedStrCollection.Insert", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StrCollection.TUnSortedStrCollection.html#Insert"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection", "text": "     A Unit mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection implementa a classe tstringCollection do pacote mi.rtl.       NOTA      A diferença de tstringCollection para TStrCollection é que a primeira é uma coleção de shortstring e a segunda é uma coleção de PByteArray usada para trabalhar com AnsiString;      VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.tcollection.tsortedcollection.tstringcollection.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      30/11/2021      14:20 a 15:15 : Criada a unit mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection e a classe tstringCollection                  ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TStringCollection", "text": "A classe TStringCollection implementa uma coleção de AnsiString   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TStringCollection.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TStringCollection.GetItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TStringCollection.html#GetItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TStringCollection.Compare", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TStringCollection.html#Compare"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TStringCollection.FreeItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TStringCollection.html#FreeItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TStringCollection.PutItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TStringCollection.html#PutItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TUnSortedStringCollection", "text": "A classe TUnSortedStringCollection implementa uma coleção de Shortstring na ordem original de inserção dos ShortStrings   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TUnSortedStringCollection.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TUnSortedStringCollection.Insert", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.SortedCollection.StringCollection.TUnSortedStringCollection.html#Insert"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring", "text": "     A Unit mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring implementa a classe TCollectionString do pacote mi.rtl.       NOTA      Essa classe foi criada para transformar Lista PSItem eem TCollection de strings;      VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.tcollection.tsortedcollection.tstringcollection.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      07/12/2021      08:00 a 10:07 : Criada a unit mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring e a classe TCollectionString                  ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString", "text": "omit if TListBoxRec is defined else where   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.Ordem", "text": "     Se True insere em ordem alfabética      ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#Ordem"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.FoundTesteCompleto", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#FoundTesteCompleto"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.CreateLista", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#CreateLista"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.NewStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#NewStr"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.Append", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#Append"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.AddSItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#AddSItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.AddSItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#AddSItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.PListSItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#PListSItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.Get_Html_List", "text": "Retorna Uma sequencia de &lt;li&gt; &lt;/li&gt;    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#Get_Html_List"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.Found", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#Found"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.GetMaiorString", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#GetMaiorString"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.GetMaiorString", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#GetMaiorString"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.GetMaiorAnsiString", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#GetMaiorAnsiString"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.Clone", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#Clone"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.Search", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#Search"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.FormatStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#FormatStr"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.FreeItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#FreeItem"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.WriteSItems", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#WriteSItems"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.CloneSItems", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#CloneSItems"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.CopyTemplateFrom", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#CopyTemplateFrom"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.AnsiStrings", "text": "Ler a string sem os caracteres de controle   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.html#AnsiStrings"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.TListBoxRec", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.TListBoxRec.html"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.TListBoxRec.PS", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.TListBoxRec.html#PS"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.TListBoxRec.Selection", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.TListBoxRec.html#Selection"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.TListBoxRec.StrSelection", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TCollectionString.TListBoxRec.html#StrSelection"},
     {"title": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.TStringCollection", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Collection.Sortedcollection.Stringcollection.Collectionstring.html#TStringCollection"},
     {"title": "mi.rtl.objects.Methods.dates", "text": "-A Unit mi.rtl.objects.Methods.dates implementa a classe TDates.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.Methods.dates.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      27/01/99 05:12 a 08:00 - Retirei do Db_Generic e Db_Global todas as rotinas com referência a datas.   27/01/99 09:05 a 09:30 - Debugar as rotinas de datas utilizando o ano 2000.   27/01/99 09:30 a  - Todos os relatórios que necessitam de datas de início e fim do período devem ser inicializadas com as datas mínimas e máximas.   15/12/21 13:50 a 14:30 - Criar classe mi.rtl.objects.Methods.dates.Tdates e adicionar as rotinas de datas do passado.            ", "tags": "", "url": "mi.rtl.objects.Methods.dates.html"},
     {"title": "mi.rtl.objects.Methods.dates.TDates", "text": "     A classe TDates contém todas os métodos necessários para acessar data no formato de 3 bytes.       NOTA**      Formato de data e hora tratado por essa classe:      type TypeData = Record dia:byte;mes:Byte;ano : byte; End;   type TipoHora = record H,M,S,S100 : Word; end;   Type TData_e_Hora_Compactada = Longint;               ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.AnoLimit", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#AnoLimit"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DataMinima", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DataMinima"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DataMaxima", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DataMaxima"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.ArrayStrMeses", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#ArrayStrMeses"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrDiaSemana", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrDiaSemana"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.HoraInicial", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#HoraInicial"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DataSistOp", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DataSistOp"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TempData", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#TempData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.juliano", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#juliano"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifeData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifeData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifeData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifeData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifeData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifeData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.somaData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#somaData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.somaData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#somaData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.SomaData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#SomaData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.FSomaData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#FSomaData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.SomaDataEmMeses", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#SomaDataEmMeses"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.SomeDataPara", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#SomeDataPara"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.Dtjuliana", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#Dtjuliana"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.moveData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#moveData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.ConvNomeData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#ConvNomeData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrDataMesAno", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrDataMesAno"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DiaMaxDoMes", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DiaMaxDoMes"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.FDiaSemana", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#FDiaSemana"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.FStrDiaSemana", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#FStrDiaSemana"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrMes", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrMes"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StringData", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StringData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.GetDataSistOp", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#GetDataSistOp"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.FGetDataSistOp", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#FGetDataSistOp"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.GetDateSystem", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#GetDateSystem"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.GetHourSystem", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#GetHourSystem"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.GetFTimeDos", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#GetFTimeDos"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.GetFTimeDos", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#GetFTimeDos"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.GetFTimeDos", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#GetFTimeDos"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.GetFTimeDos_Valid", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#GetFTimeDos_Valid"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.PackDate", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#PackDate"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.PackDate", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#PackDate"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.PackDate", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#PackDate"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.PackHour", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#PackHour"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.UnPackDate", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#UnPackDate"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.UnPackHora", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#UnPackHora"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.PackHora", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#PackHora"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.PackDateHora", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#PackDateHora"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.UnPackDateHora", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#UnPackDateHora"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StringTimeD", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StringTimeD"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StringTimeH", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StringTimeH"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StringTimeHSemPonto", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StringTimeHSemPonto"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.FIncAno", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#FIncAno"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.FDecAno", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#FDecAno"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.FAno", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#FAno"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.FAno2Digito", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#FAno2Digito"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.FAnoDoIndex", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#FAnoDoIndex"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrAno", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrAno"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrToDate", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrToDate"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DateToStr", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DateToStr"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DateToStr", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DateToStr"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DateToDateTime", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DateToDateTime"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DateToDateTime", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DateToDateTime"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DateTimeToDate", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DateTimeToDate"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DateTimeToDateStr", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DateTimeToDateStr"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DateTimeToTimeStr", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DateTimeToTimeStr"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DateTimeToDateTimeDos", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DateTimeToDateTimeDos"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DateTimeDosToStr", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DateTimeDosToStr"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrToDateTime", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrToDateTime"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrToDateTimeDos", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrToDateTimeDos"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrToHora", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrToHora"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrToHour", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrToHour"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.StrToHour", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#StrToHour"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.HourToStr", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#HourToStr"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.HourToStr", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#HourToStr"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.HourToDateTime", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#HourToDateTime"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.str2jul", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#str2jul"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.jul2str", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#jul2str"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.Julian", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#Julian"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.LeapYear", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#LeapYear"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DiaMaxMes", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DiaMaxMes"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DateMask_to_Str", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DateMask_to_Str"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.Str_to_DateMask", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#Str_to_DateMask"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.HourMask_to_Str", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#HourMask_to_Str"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.ValidDate", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#ValidDate"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.ValidHour", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#ValidHour"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifHoraEmSegundos", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifHoraEmSegundos"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifHora_Retorne_TipoHora", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifHora_Retorne_TipoHora"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifHora_Retorne_TipoHora", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifHora_Retorne_TipoHora"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifHora_Retorne_Horas_Fracao", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifHora_Retorne_Horas_Fracao"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifHora_Retorne_Horas_Fracao", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifHora_Retorne_Horas_Fracao"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifHora_Retorne_Minutos", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifHora_Retorne_Minutos"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifHora_Retorne_Minutos", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifHora_Retorne_Minutos"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifHora_Retorne_Time", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifHora_Retorne_Time"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.DifHora_Retorne_Time", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#DifHora_Retorne_Time"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.SegundosEmHora", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#SegundosEmHora"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.New_Lista_Str_Meses", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#New_Lista_Str_Meses"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.getDateStr", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#getDateStr"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.getTimeStr", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#getTimeStr"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.PTypeData", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#PTypeData"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TDateMask", "text": "    DateMask_AA_MM_DD    DateMask_AAAA_MM_DD    DateMask_DD_MM_AA    DateMask_DDMMAA    DateMask_DD_MM_AAAA    DateMask_MM_AA    DateMask_MM_AAAA    DateMask_NomeMM_AA    DateMask_NomeMM_AAAA    DateMask_MM_NomeMM    DateMask_MM_NomeMM_AA    DateMask_MM_NomeMM_AAAA    DateMask_Extenco    DateMask_DD_MM_AA_HH_MM_SS    DateMask_DDMMAAHHMMSS    DateMask_DD_MM_AA_HH_MM    DateMask_DDMMAAHHMM    DateMask_DD_MM_AAAA_HH_MM_SS    DateMask_DDMMAAAAHHMMSS    DateMask_AAAAMMDDHHMMSS   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#TDateMask"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.THourMask", "text": "    HourMask_HH_MM    HourMask_HH_MM_SS    HourMask_HH_MM_SS_S100   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#THourMask"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TMeses", "text": "    MesNulo    Janeiro    Fevereiro    Marco    Abril    Maio    Junho    Julho    Agosto    Setembro    Outubro    Novembro    Dezembro   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.html#TMeses"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TipoHora", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TipoHora.html"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TipoHora.H", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TipoHora.html#H"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TipoHora.M", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TipoHora.html#M"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TipoHora.S", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TipoHora.html#S"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TipoHora.S100", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TipoHora.html#S100"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TVarGetDate", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TVarGetDate.html"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TVarGetDate.Dia", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TVarGetDate.html#Dia"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TVarGetDate.Mes", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TVarGetDate.html#Mes"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TVarGetDate.Ano", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TVarGetDate.html#Ano"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TVarGetDate.DiaDaSemana", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TVarGetDate.html#DiaDaSemana"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TVarGetTime", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TVarGetTime.html"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TVarGetTime.Hora", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TVarGetTime.html#Hora"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TVarGetTime.Minuto", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TVarGetTime.html#Minuto"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TVarGetTime.Segundo", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TVarGetTime.html#Segundo"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TVarGetTime.S100", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TVarGetTime.html#S100"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TypeData", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TypeData.html"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TypeData.dia", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TypeData.html#dia"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TypeData.mes", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TypeData.html#mes"},
     {"title": "mi.rtl.objects.Methods.dates.TDates.TypeData.ano", "text": "   ", "tags": "", "url": "mi.rtl.objects.Methods.dates.TDates.TypeData.html#ano"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types", "text": "A classe TTb_Access_types é usada para declarar todos os types da classe TTb_Access   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.maxKeyLen", "text": "Tamanho máximo da Chave   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#maxKeyLen"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.pageSize", "text": "Número máximo de chaves permitido em uma página   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#pageSize"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.order", "text": "Número mínimo de chaves permitido em uma página   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#order"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.maxHeight", "text": "Número máximo de níveis na árvore B+   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#maxHeight"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.maxDataRecSize", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#maxDataRecSize"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.FileAsciiZ", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#FileAsciiZ"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.FileName", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#FileName"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFilePtr", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#IndexFilePtr"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.PDataFile", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#PDataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.PErroDOS", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#PErroDOS"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.PIndexFile", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#PIndexFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.ProcPtr", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#ProcPtr"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaArrayPtr", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#TaArrayPtr"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaKeyStr", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#TaKeyStr"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPagePtr", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#TaPagePtr"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPath", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#TaPath"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBufPtr", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#TaRecordBufPtr"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TipoUltOperacaoNoArquivo", "text": "O tipo TipoUltOperacaoNoArquivo é usado para indicar a ultima operação do registro.       NOTA      1 = inclusão S ou N   2 = Alteração S ou N   3 = Exclusão S ou N         ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#TipoUltOperacaoNoArquivo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TItemArray", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#TItemArray"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.T_TTransaction", "text": "    Tra_Nul    Tra_AddRec    Tra_PutRec    Tra_DeleteRec   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.html#T_TTransaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile", "text": "Obs: Se transformar este registro em objeto deve alterar tudo que se refere a dataFile   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.Tipo", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#Tipo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.F", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#F"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.FirstFree", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#FirstFree"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.NumberFree", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#NumberFree"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.RR", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#RR"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.ItemSize", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#ItemSize"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.NumberKey", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#NumberKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.NumRec", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#NumRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.IH", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#IH"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.FileModeDenyALL", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#FileModeDenyALL"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.Exclusivo", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#Exclusivo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.OkAddRecFirstFree", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#OkAddRecFirstFree"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.ErroDos", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#ErroDos"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.OkTemporario", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#OkTemporario"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.ok_Set_Transaction", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#ok_Set_Transaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.Filename", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#Filename"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.OkDeveIndexar", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.DataFile.html#OkDeveIndexar"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.DataF", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#DataF"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.NomeArqDados", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#NomeArqDados"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.AllowDuplKeys", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#AllowDuplKeys"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.KeyL", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#KeyL"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.PP", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#PP"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.Path", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#Path"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.OkDeveIndexar", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#OkDeveIndexar"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.OrderByDesc", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#OrderByDesc"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.okBof_Ix", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#okBof_Ix"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.OkEof_Ix", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#OkEof_Ix"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.TaFindKey_pages_Reads", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#TaFindKey_pages_Reads"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.NextKey_pages_Reads", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#NextKey_pages_Reads"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.PrevKey_pages_Reads", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.IndexFile.html#PrevKey_pages_Reads"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaItem", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaItem.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaItem.DataRef", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaItem.html#DataRef"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaItem.PageRef", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaItem.html#PageRef"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaItem.Key", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaItem.html#Key"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPage", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPage.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPage.Reservado", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPage.html#Reservado"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPage.ItemsOnPage", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPage.html#ItemsOnPage"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPage.BckwPageRef", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPage.html#BckwPageRef"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPage.ItemArray", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaPage.html#ItemArray"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBuffer", "text": "Tipo registro do arquivo de transação   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBuffer.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBuffer.Page", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBuffer.html#Page"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBuffer.R", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBuffer.html#R"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBuffer.I", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBuffer.html#I"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBuffer.Reservado", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaRecordBuffer.html#Reservado"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaSearchStep", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaSearchStep.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaSearchStep.PageRef", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaSearchStep.html#PageRef"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaSearchStep.ItemArrIndex", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaSearchStep.html#ItemArrIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaStackRec", "text": "Tamanho maximo do registro.   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaStackRec.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaStackRec.Page", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaStackRec.html#Page"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaStackRec.IndexFPtr", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaStackRec.html#IndexFPtr"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaStackRec.PageRef", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaStackRec.html#PageRef"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaStackRec.Updated", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TaStackRec.html#Updated"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TErroDOS", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TErroDOS.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TErroDOS.Status", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TErroDOS.html#Status"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader", "text": "Usado p/ guarda o header logo que abrir o arquivo para evitar que em ambiente de rede o header fique maluco   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.FirstFree", "text": "Primeiro registro livre   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.html#FirstFree"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.NumberFree", "text": "Número de registros livres   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.html#NumberFree"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.RR", "text": "Número do registro RAIZ da árvore B+ dos índices   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.html#RR"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.ItemSize", "text": "Tamanho do registro   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.html#ItemSize"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.NumberKey", "text": "Número de chaves no índice   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TsImagemHeader.html#NumberKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecord", "text": "Os 5 primeiros bytes do registro é guardar o número do pŕoximo registro livre   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecord.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecord.NRecAnt", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecord.html#NRecAnt"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecord.Buffer", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecord.html#Buffer"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem", "text": "Usado para arquivos Relationships   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.NRecProxLivre", "text": "Número do próximo registro no arquivo master   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.html#NRecProxLivre"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.StatusSeFoiAlterado", "text": "Número do registro do corpo do item   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.html#StatusSeFoiAlterado"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.NRecMaster", "text": "Número do próximo item   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.html#NRecMaster"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.NRecItem", "text": "Número do próximo item   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.html#NRecItem"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.NRecProxItem", "text": "Número do próximo item   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.html#NRecProxItem"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.NumSequencial", "text": "Sequencial do item   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordItem.html#NumSequencial"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordMaster", "text": "Usado para arquivos Relationships   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordMaster.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordMaster.NRecProxLivre", "text": "Número do próximo registro no arquivo master   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordMaster.html#NRecProxLivre"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordMaster.StatusSeFoiAlterado", "text": "Indica se o registro foi alteradoem memória   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordMaster.html#StatusSeFoiAlterado"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordMaster.NumDeItems", "text": "Número de itens deste registro master   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordMaster.html#NumDeItems"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordMaster.NRecProxItem", "text": "número do proximo item no arquivo de itens   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordMaster.html#NRecProxItem"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordNovo", "text": "Usado no início de cada registro por isso o registro deve herdar   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordNovo.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordNovo.ProxLivre", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordNovo.html#ProxLivre"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordNovo.UltOperacaoNoArquivo", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordNovo.html#UltOperacaoNoArquivo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordNovo.Time", "text": "Data e hora em que o lançamento foi alterado ou incluído   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordNovo.html#Time"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordNovo.Usuario", "text": "Número do usuário que gerou este lançamento   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_types.TypeHeaderRecordNovo.html#Usuario"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts", "text": "A classe TTb_Access_consts é usada para declarar todas as constantes da classe TTb_Access   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.ErroDOS", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#ErroDOS"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.FileName_Transaction", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#FileName_Transaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.ok_Debug_Transaction", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#ok_Debug_Transaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.OkTransaction", "text": "False = desabilita transação   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#OkTransaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.OkAddRecFirstFree", "text": "A Constante OkAddRecFirstFree é usado para habilitar aproveitamento do espaço deletado.       NOTA      True = O procedimento AddRec aproveita o espaço dos registros deletados.   False = O procedimento AddRec Não aproveita o espaço dos registros deletados. ou melhor o novo registro e adicionado no final do arquivo.         ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#OkAddRecFirstFree"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.MaxFilesOpens", "text": "Máximo de arquivo que o DOS pode abrir sem a chamada da Interrupção No. $67   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#MaxFilesOpens"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.MemoriaLivreEmTaPageStack", "text": "16K de Memória fica livre em setBufIndex   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#MemoriaLivreEmTaPageStack"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.MsgOkDuplicidade", "text": "Indica se deve dar mensagem de chave em duplicidade   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#MsgOkDuplicidade"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Neterr", "text": "Indica se houve erro na rede   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Neterr"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.MaxFiles", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#MaxFiles"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.OkTestaAberturaDeArquivo", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#OkTestaAberturaDeArquivo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.MaxPageEmMemoria", "text": "10 ficou mais lento do que 20; 100 ficou mais lento do que 20   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#MaxPageEmMemoria"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.MinPageEmMemoria", "text": "Usado no Buffer dos índice   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#MinPageEmMemoria"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.NoDuplicates", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#NoDuplicates"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Duplicates", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Duplicates"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.FileHeaderSize", "text": "A constante #name é usado para guardar o número de chaves do Indice   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#FileHeaderSize"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.MinDataRecSize", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#MinDataRecSize"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.ItemOverhead", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#ItemOverhead"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.PageOverhead", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#PageOverhead"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.TaRecBuf", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#TaRecBuf"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Indice_da_tebela", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Indice_da_tebela"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_com_a_copia_da_versao_anterior_da_tabela", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_com_a_copia_da_versao_anterior_da_tabela"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_de_objetos_vinculados_a_tabela", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_de_objetos_vinculados_a_tabela"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_com_os_registro_duplicados", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_com_os_registro_duplicados"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tebela_com_as_Tabelas", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tebela_com_as_Tabelas"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Indice_da_Tabela_das_tabelas", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Indice_da_Tabela_das_tabelas"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_com_os_Indices", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_com_os_Indices"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Indice_da_tebala_de_Indices", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Indice_da_tebala_de_Indices"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_com_os_Relationships", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_com_os_Relationships"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Indice_da_tebala_dos_Relationships", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Indice_da_tebala_dos_Relationships"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_com_todos_os_campos_de_todas_as_tabelas", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_com_todos_os_campos_de_todas_as_tabelas"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Indice_da_tabela_com_todos_os_campos", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Indice_da_tabela_com_todos_os_campos"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_de_Parametros", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_de_Parametros"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_de_Usuarios", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_de_Usuarios"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Indice_da_Tabela_de_Usuarios", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Indice_da_Tabela_de_Usuarios"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Backup_da_Tabela", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Backup_da_Tabela"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Banco_de_dados_Access", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Banco_de_dados_Access"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Banco_de_dados_Access_Secundario", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Banco_de_dados_Access_Secundario"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Banco_de_dados_Interbase", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Banco_de_dados_Interbase"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_Paradox", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_Paradox"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_Paradox_Px", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_Paradox_Px"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_Paradox_Yx", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_Paradox_Yx"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_DBF", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_DBF"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_DBF_Ndx", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_DBF_Ndx"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_DBF_Idx", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_DBF_Idx"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_Word", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_Word"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Tabela_Excel", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Tabela_Excel"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.Const_Ext_Array", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access_consts.html#Const_Ext_Array"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile", "text": "A classe TDataFile é usada para acessar arquivos em disco TTb_Access   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.DataFile", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.html#DataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.Ok_CloseDataFile", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.html#Ok_CloseDataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.html#Destroy"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.SetDataFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TDataFile.html#SetDataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#Destroy"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FExisteCodigo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FExisteCodigo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.CreateTAccess", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#CreateTAccess"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.DestroyTAccess", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#DestroyTAccess"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.EscrevaTurboError", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#EscrevaTurboError"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TAIOCheck", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TAIOCheck"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.SincronizaPosChave", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#SincronizaPosChave"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.GetRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#GetRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.GetRecBlock", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#GetRecBlock"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.PutRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#PutRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.PutRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#PutRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.MakeFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#MakeFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FDelStrBrancos", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FDelStrBrancos"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FileNameTemp_Ext", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FileNameTemp_Ext"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FileNameTemp_Ext", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FileNameTemp_Ext"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FileNameTemp", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FileNameTemp"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FileName_Seq", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FileName_Seq"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.IsPortLocal", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#IsPortLocal"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.DelFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#DelFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.SetOkAddRecFirstFree", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#SetOkAddRecFirstFree"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TestaSePodeAbrirArquivo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TestaSePodeAbrirArquivo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FileShared", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FileShared"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FTrocaExtencao", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FTrocaExtencao"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.Ren", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#Ren"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.OkRecSizeMismatch", "text": "A class método OkRecSizeMismatch retorna true se o Tamanho do registro em arquivo é maior que o tamanho do buffer do registro em Memória.    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#OkRecSizeMismatch"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.ModifyStructurFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#ModifyStructurFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.OpenFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#OpenFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.ReadHeader", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#ReadHeader"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.PutFileHeader", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#PutFileHeader"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.NaoMuDOuHeader", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#NaoMuDOuHeader"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.MudouHeaderEmMemoria", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#MudouHeaderEmMemoria"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.aCloseFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#aCloseFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.CloseFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#CloseFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.CloseFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#CloseFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FlushFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FlushFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TraveRegistro", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TraveRegistro"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.DestraveRegistro", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#DestraveRegistro"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TraveHeader", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TraveHeader"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.DestraveHeader", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#DestraveHeader"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.IoResult", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#IoResult"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FileSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FileSize"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.NewRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#NewRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.AddRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#AddRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.DeleteRecord", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#DeleteRecord"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.DeleteRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#DeleteRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FileLen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FileLen"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#UsedRecs"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#UsedRecs"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#UsedRecs"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#UsedRecs"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#UsedRecs"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TaPack", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TaPack"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TaUnpack", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TaUnpack"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.Multiplo_Mais_proximo_de_N", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#Multiplo_Mais_proximo_de_N"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.MakeIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#MakeIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.OpenIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#OpenIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.LeiaHeaderDoIndice", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#LeiaHeaderDoIndice"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.aCloseIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#aCloseIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.CloseIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#CloseIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.CloseIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#CloseIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FlushIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FlushIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.EraseFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#EraseFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.EraseIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#EraseIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TaGetPage", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TaGetPage"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TaNewPage", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TaNewPage"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TaDeletePage", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TaDeletePage"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.ClearKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#ClearKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.NextKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#NextKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.PrevKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#PrevKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TaXKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TaXKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TaCompKeys", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TaCompKeys"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TaFindKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TaFindKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FindKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FindKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FindKeyTop", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FindKeyTop"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.SearchKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#SearchKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.SearchKeyTop", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#SearchKeyTop"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TaUpdatePage", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TaUpdatePage"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.AddKey_Search_Insert", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#AddKey_Search_Insert"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.AddKey_Search_Init_ProcItem1", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#AddKey_Search_Init_ProcItem1"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.AddKey_Search", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#AddKey_Search"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.AddKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#AddKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.DeleteKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#DeleteKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FGetHeaderDataFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FGetHeaderDataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FTamRegDataFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FTamRegDataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.NewFileName", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#NewFileName"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FTb", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FTb"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FObj", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FObj"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FIx", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FIx"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FDup", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FDup"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.AssignDataFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#AssignDataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.AssignDataFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#AssignDataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.AssignIndexFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#AssignIndexFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.UpperCase", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#UpperCase"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.FMinuscula", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#FMinuscula"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.Int2str", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#Int2str"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.Beep", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#Beep"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.spc", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#spc"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.SetOkTransaction", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#SetOkTransaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.StartTransaction", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#StartTransaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.StartTransaction", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#StartTransaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.COMMIT", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#COMMIT"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.COMMIT", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#COMMIT"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.Rollback", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#Rollback"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.SetTransaction", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#SetTransaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.SetTransaction", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#SetTransaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.GetFileName_Transaction", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#GetFileName_Transaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.Assign_Transaction", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#Assign_Transaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TransactionPendant_Error", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TransactionPendant_Error"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.TransactionPendant", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#TransactionPendant"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.Truncate", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#Truncate"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.CopyFrom", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#CopyFrom"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.CopyFrom", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TTb_Access.html#CopyFrom"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens", "text": "     FilesOpens é uma coleção que mantém todos os arquivos abertos até o momento com objetivo de fecha-los nos casos exceção.      ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.okFlushAllFiles", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#okFlushAllFiles"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#destroy"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.Compare", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#Compare"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.Set_OkFlushAllFiles", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#Set_OkFlushAllFiles"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.ListaTabelas", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#ListaTabelas"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.Insert", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#Insert"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.FreeItem", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#FreeItem"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.FOkCodigo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#FOkCodigo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.FlushIndexs", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#FlushIndexs"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.FlushAllFiles", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#FlushAllFiles"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.OpenAllFiles", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#OpenAllFiles"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.CloseAllFiles", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#CloseAllFiles"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.EstatisticasDosArquivosAbertos", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#EstatisticasDosArquivosAbertos"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.SaveCurrentState", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#SaveCurrentState"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.RestoreCurrentState", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#RestoreCurrentState"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.MaxTamReg", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.TFilesOpens.html#MaxTamReg"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb_Access.FilesOpens", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb_Access.html#FilesOpens"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access", "text": "Esta unit mi.rtl.Objects.Methods.Db.Tb__Access é usada para criar banco de dados local usando estrutura Type Record End;   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TFuncGetAddRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.html#TFuncGetAddRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoFuncao", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.html#TipoFuncao"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoPonteiroBD", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoPonteiroBD.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoPonteiroBD.PA", "text": "Ponteiro para um arq. tipo TMI_DataFile   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoPonteiroBD.html#PA"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoPonteiroBD.PI", "text": "Ponteiro para um arq. tipo TMI_IndexFile   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoPonteiroBD.html#PI"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoPonteiroBD.PR", "text": "Ponteiro para um variável qualquer   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoPonteiroBD.html#PR"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoPonteiroBD.Nr", "text": "Número do registro de Skip   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TipoPonteiroBD.html#Nr"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_DataFile", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_DataFile.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_DataFile.NomeArq", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_DataFile.html#NomeArq"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_DataFile.TamReg", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_DataFile.html#TamReg"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_DataFile.NArqIndice", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_DataFile.html#NArqIndice"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_DataFile.DF", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_DataFile.html#DF"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.NomeArqIndice", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.html#NomeArqIndice"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.TamChave", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.html#TamChave"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.RepeteChave", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.html#RepeteChave"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.IndiceArray", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.html#IndiceArray"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.PosicaoNoReg", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.html#PosicaoNoReg"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.OkMsgDuplicidade", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.html#OkMsgDuplicidade"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.Ix", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_types.TMI_IndexFile.html#Ix"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.EndClearAll", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html#EndClearAll"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.EndOpenFiles", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html#EndOpenFiles"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.EndCloseFiles", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html#EndCloseFiles"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.OkDeveReindexarDB", "text": "True = O sistema deve reindexar todos os arquivos   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html#OkDeveReindexarDB"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.OkDeveRepararDB", "text": "True = O Sistema deve executar a rotina para reparar as consistências entre tabelas   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html#OkDeveRepararDB"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.NRecAux", "text": "A constante NRecAux é o número do registro corrente temporário.       NOTA      É usado para manter a compatibilidade com o passado.         ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html#NRecAux"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.NRec", "text": "A constante NRec é o número do registro corrente       NOTA      É usado para manter a compatibilidade com o passado.         ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html#NRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.WCursorLigado", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html#WCursorLigado"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.WEndCloseFiles", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html#WEndCloseFiles"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.WEndOpenFiles", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access_consts.html#WEndOpenFiles"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.StartTransaction", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#StartTransaction"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FileSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FileSize"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.Init_MI_DataFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#Init_MI_DataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.Init_MI_DataFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#Init_MI_DataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.Init_IxF", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#Init_IxF"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.MakeFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#MakeFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.MakeFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#MakeFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.MakeIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#MakeIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.MakeIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#MakeIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.OpenFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#OpenFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.OpenFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#OpenFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.OpenIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#OpenIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.CloseFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#CloseFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.CloseIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#CloseIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.MakeArq", "text": "A class procedure MakeArq é usado criar aquivo sem o registro 0    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#MakeArq"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.OpenArq", "text": "A class procedure OpenArq é usado abrir aquivo sem o registro 0    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#OpenArq"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.AbreArqSemHeader", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#AbreArqSemHeader"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.CloseArqSemHeader", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#CloseArqSemHeader"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.GetAddRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#GetAddRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.ModifyStructurFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#ModifyStructurFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.PrimeiroLivre", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#PrimeiroLivre"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.TraveArq", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#TraveArq"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.DestraveArq", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#DestraveArq"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#UsedRecs"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.GetRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#GetRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.PutRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#PutRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.AddRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#AddRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.DeleteRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#DeleteRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FileLen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FileLen"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.MakeIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#MakeIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.OpenIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#OpenIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.OpenIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#OpenIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.ClearKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#ClearKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.NextKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#NextKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.PrevKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#PrevKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FindKeyTop", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FindKeyTop"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FindKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FindKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.SearchKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#SearchKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.SearchKeyTop", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#SearchKeyTop"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.AddKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#AddKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.DeleteKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#DeleteKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FlushFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FlushFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FlushIndex", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FlushIndex"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.Seek", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#Seek"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.CloseFilesOpens", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#CloseFilesOpens"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.MyDestroyMemory", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#MyDestroyMemory"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.MyCreateMemory", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#MyCreateMemory"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.MyDestroyMemorySemVideo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#MyDestroyMemorySemVideo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.MyCreateMemorySemVideo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#MyCreateMemorySemVideo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.ExecCommand", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#ExecCommand"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.ExecCommand", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#ExecCommand"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.ExecDos", "text": "A classe método ExecDos executa um programa externo de form assíncrona.       EXEMPLO      ExecDos('/usr/bin/gnome-terminal','ls');         ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#ExecDos"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FindKey", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FindKey"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.AdicioneChave", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#AdicioneChave"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.EliminaChave", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#EliminaChave"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.NomeDaEstacao", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#NomeDaEstacao"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.ValidFileName", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#ValidFileName"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FConcatNomeArq", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FConcatNomeArq"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.CriaArqTemp", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#CriaArqTemp"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.CriaArqTempI", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#CriaArqTempI"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.EspacoEmDisco", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#EspacoEmDisco"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.TTraveRegistro", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#TTraveRegistro"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.TDestraveRegistro", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#TDestraveRegistro"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FPackDataFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FPackDataFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FLeiaGrave", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FLeiaGrave"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.LeiaGrave", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#LeiaGrave"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.FLeieEGraveRegistro", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#FLeieEGraveRegistro"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.StrDataEmQueFoiAlterado", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#StrDataEmQueFoiAlterado"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.StrDateFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#StrDateFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.CreateLst", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#CreateLst"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.DestroyLst", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#DestroyLst"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.GeraSequencia", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#GeraSequencia"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.TestaAberturaDeArquivo", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#TestaAberturaDeArquivo"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.AssingLst", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#AssingLst"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.redirecionaParaNul", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#redirecionaParaNul"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb__Access.TTb__Access.html#Destroy"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.html"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno", "text": "A class TAluno desmonstra o uso da classe TObjectss.Ttb__access   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.NR_Bof", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#NR_Bof"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.NR_Current", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#NR_Current"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.NR_Eof", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#NR_Eof"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.OkBof", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#OkBof"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.OkEof", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#OkEof"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.RecordSelected", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#RecordSelected"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.ArqAluno", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#ArqAluno"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.RegAluno", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#RegAluno"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.Init_ArqAluno", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#Init_ArqAluno"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.Create_ArqAluno", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#Create_ArqAluno"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.DoOnNewRecord", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#DoOnNewRecord"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.AddRec", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#AddRec"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.NextRec", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#NextRec"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.GoBof", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#GoBof"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.Cadastra", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#Cadastra"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.Lista_ordem_crescente", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#Lista_ordem_crescente"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.GoEof", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#GoEof"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.PrevRec", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#PrevRec"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.Lista_ordem_Decrescente", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#Lista_ordem_Decrescente"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.DeleteRec", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#DeleteRec"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.Test_SetTransaction", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.html#Test_SetTransaction"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.TRegAluno", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.TRegAluno.html"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.TRegAluno.herder", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.TRegAluno.html#herder"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.TRegAluno.id", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.TRegAluno.html#id"},
     {"title": "mi.rtl.objects.methods.db.tb__access_test.TAluno.TRegAluno.nome", "text": "   ", "tags": "", "url": "mi.rtl.objects.methods.db.tb__access_test.TAluno.TRegAluno.html#nome"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access", "text": "Esta unit mi.rtl.Objects.Methods.Db.Tb___Access é usada para criar banco de dados local usando estrutura Type Record End;       NOTA      Comandos parecidos com clipper   Está obsoleto não recomendo seu uso.         ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.MaxBase", "text": "Uma Base permite um arquivo de dados + Um arquivo de indice   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.html#MaxBase"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.NumeroDeArquivos", "text": "    Um    Todos    TodosC   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.html#NumeroDeArquivos"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.TipoBaseDeDados", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.html#TipoBaseDeDados"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.TipoSkip", "text": "    Next    Find    Prev    Searc   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.html#TipoSkip"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.TipoStatusArq", "text": "    Aberto    fechado   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_types.html#TipoStatusArq"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_consts", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_consts.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_consts.NBase", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_consts.html#NBase"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_consts.MatPFile", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access_consts.html#MatPFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.OpenFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#OpenFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.CloseFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#CloseFile"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.LocRegUse", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#LocRegUse"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.NRecSkip", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#NRecSkip"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.Replace", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#Replace"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.Locate", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#Locate"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.ReplaceUnLock", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#ReplaceUnLock"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.TrocaChave", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#TrocaChave"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.FPosicao", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#FPosicao"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.IndiceSele", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#IndiceSele"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.ClearSkipAll", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#ClearSkipAll"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.Use", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#Use"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.UseC", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#UseC"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.Skip", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#Skip"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.FSkip", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#FSkip"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.FSkipSearch", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#FSkipSearch"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.SeekRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#SeekRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.SkipLock", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#SkipLock"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.LocRegSkip", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#LocRegSkip"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.Sele", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#Sele"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.AAddRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#AAddRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.ADeleteRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#ADeleteRec"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.CloseFilesOpens", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#CloseFilesOpens"},
     {"title": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.EscrevaDataFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Db.Tb___Access.TTb___Access.html#EscrevaDataFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods", "text": "     A unit mi.rtl.objects.Methods.db.types.consts.Methods implementa a classe TDb_Methods do pacote mi.rtl.db.       NOTAS -   VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      01/12/2021      10:15 a ?? : Criar a unit mi.rtl.db_Methods.pas            CÓDIGO FONTE:      mi.rtl.db.Methods.pas            ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.html"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods", "text": "     A classe TDb_Methods implementa os método de classe comum a todas as classes de TDB do pacote mi.rtl.db.      ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.Create", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#Create"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#Destroy"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FExisteCodigo", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FExisteCodigo"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.CreateTAccess", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#CreateTAccess"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.DestroyTAccess", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#DestroyTAccess"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.EscrevaTurboError", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#EscrevaTurboError"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TAIOCheck", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TAIOCheck"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.SincronizaPosChave", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#SincronizaPosChave"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.GetRec", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#GetRec"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.GetRecBlock", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#GetRecBlock"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods._PutRec", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#_PutRec"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.PutRec", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#PutRec"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.MakeFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#MakeFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FMakeFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FMakeFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.AtualizaDestino", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#AtualizaDestino"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FDelStrBrancos", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FDelStrBrancos"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FileNameTemp_Ext", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FileNameTemp_Ext"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FileNameTemp_Ext", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FileNameTemp_Ext"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FileNameTemp", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FileNameTemp"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FileName_Seq", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FileName_Seq"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.IsPortLocal", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#IsPortLocal"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.DelFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#DelFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.SetOkAddRecFirstFree", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#SetOkAddRecFirstFree"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TestaSePodeAbrirArquivo", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TestaSePodeAbrirArquivo"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FileShared", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FileShared"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FTrocaExtencao", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FTrocaExtencao"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.Ren", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#Ren"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.OkRecSizeMismatch", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#OkRecSizeMismatch"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.ModifyStructurFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#ModifyStructurFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.OpenFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#OpenFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.ReadHeader", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#ReadHeader"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.PutFileHeader", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#PutFileHeader"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.NaoMuDOuHeader", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#NaoMuDOuHeader"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.MudouHeaderEmMemoria", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#MudouHeaderEmMemoria"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.aCloseFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#aCloseFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.CloseFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#CloseFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.CloseFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#CloseFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FlushFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FlushFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TraveRegistro", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TraveRegistro"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.DestraveRegistro", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#DestraveRegistro"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TraveHeader", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TraveHeader"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.DestraveHeader", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#DestraveHeader"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FileSize", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FileSize"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.NewRec", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#NewRec"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.AddRec", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#AddRec"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.DeleteRecord", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#DeleteRecord"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.DeleteRec", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#DeleteRec"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FileLen", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FileLen"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#UsedRecs"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#UsedRecs"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#UsedRecs"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#UsedRecs"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.UsedRecs", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#UsedRecs"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TaPack", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TaPack"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TaUnpack", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TaUnpack"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.Multiplo_Mais_proximo_de_N", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#Multiplo_Mais_proximo_de_N"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.MakeIndex", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#MakeIndex"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FMakeIndex", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FMakeIndex"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.LeiaHeaderDoIndice", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#LeiaHeaderDoIndice"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.aCloseIndex", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#aCloseIndex"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.CloseIndex", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#CloseIndex"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.CloseIndex", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#CloseIndex"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FlushIndex", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FlushIndex"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.EraseFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#EraseFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.EraseIndex", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#EraseIndex"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TaGetPage", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TaGetPage"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TaNewPage", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TaNewPage"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TaDeletePage", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TaDeletePage"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.ClearKey", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#ClearKey"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.NextKey", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#NextKey"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.PrevKey", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#PrevKey"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TaXKey", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TaXKey"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TaCompKeys", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TaCompKeys"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TaFindKey", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TaFindKey"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FindKey", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FindKey"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FindKeyTop", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FindKeyTop"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.SearchKey", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#SearchKey"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.SearchKeyTop", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#SearchKeyTop"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TaUpdatePage", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TaUpdatePage"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.AddKey_Search_Insert", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#AddKey_Search_Insert"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.AddKey_Search_Init_ProcItem1", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#AddKey_Search_Init_ProcItem1"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.AddKey_Search", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#AddKey_Search"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.AddKey", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#AddKey"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.DeleteKey", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#DeleteKey"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FGetHeaderDataFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FGetHeaderDataFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FTamRegDataFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FTamRegDataFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.NewFileName", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#NewFileName"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FTb", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FTb"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FObj", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FObj"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FIx", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FIx"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FDup", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FDup"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.AssignDataFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#AssignDataFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.AssignDataFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#AssignDataFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.AssignIndexFile", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#AssignIndexFile"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.UpperCase", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#UpperCase"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.FMinuscula", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#FMinuscula"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.Int2str", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#Int2str"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.spc", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#spc"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.SetOkTransaction", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#SetOkTransaction"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.StartTransaction", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#StartTransaction"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.StartTransaction", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#StartTransaction"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.COMMIT", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#COMMIT"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.COMMIT", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#COMMIT"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.Rollback", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#Rollback"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.SetTransaction", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#SetTransaction"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.SetTransaction", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#SetTransaction"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.GetFileName_Transaction", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#GetFileName_Transaction"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.Assign_Transaction", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#Assign_Transaction"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TransactionPendant_Error", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TransactionPendant_Error"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.TransactionPendant", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#TransactionPendant"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.Truncate", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#Truncate"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.CopyFrom", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#CopyFrom"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.CopyFrom", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#CopyFrom"},
     {"title": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.Is_TFileOpen", "text": "    ", "tags": "", "url": "mi.rtl.objects.Methods.db.types.consts.Methods.TDb_Methods.html#Is_TFileOpen"},
     {"title": "mi.rtl.Objects.Methods.Exception", "text": "-A unit mi.rtl.Objects.Methods.Exception implementa a classe TException do pacote mi.rtl.       VERSÃO:      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.texception.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      2021-12-14      11:00 a 11:30 - Criado a unit mi.rtl.Objects.Methods.Exception e implementação da classe TException      2021-12-15      15:00 a 18:42 - T12 Criar a classe TException   21:25 a 22:40 - Troquei o nome de constructor create para que fique equivalente as mensagem de TStrError.ErrorMessage.               ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.html"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException", "text": "     A classe TException é usada com a palavra reservada raise para mostrar o erro, sua localização e em seguida salva no dispositivo definido em TObjectss.Logs.LogType.       NOTA      LogType = TLogType = (ltSystem,ltFile,ltStdOut,ltStdErr);      ltSystem = Arquivo definido pelo sistema operacional;   ltFile = Arquivo definido pela aplicação;   ltStdOut,ltStdErr = Terminal do sistema operacional.         EXEMPLO DE USO:      procedure TMi_Rtl_Tests.Action_test_TExceptionExecute(Sender: TObject); begin   with TMI_ui_types do begin     logs.EnableWriteIdentificao := true;     try       raise TException.Create(5);     except     end;      try       raise TException.Create('Acesso ao arquivo negado');     except     end;      try       raise TException.Create(Self, 'Action_test_TExceptionExecute','aFileName','AFieldName',5);     except     end;      try       raise TException.Create(Self, 'Action_test_TExceptionExecute','aFileName','AFieldName','Acesso ao arquivo negado');     except     end;       try       raise TException.Create(Self, 'Action_test_TExceptionExecute',5);     except     end;      try       raise TException.Create(Self, 'Action_test_TExceptionExecute','Acesso ao arquivo negado');     except     end;   // Os exemplos abaixo são mantidos para manter a compatibilidade com o passado.        try        raise TException.Create4('aModule', 'aUnit', 'Procedure_or_Function',   'ParamResult');      except      end;       try        raise TException.Create4('aModule', 'aUnit', 'Procedure_or_Function',   5);      except      end;       try        raise TException.Create5('aModule', 'aUnit','ObjectName', 'aMethodName',   'aMsgError');      except      end;       try        raise TException.Create5('aModule', 'aUnit','ObjectName', 'aMethodName',   5);      except      end;       try        raise TException.Create6('aModule', 'ObjectName', 'aMethodName','aFileName','AFieldName', 5);      except      end;       try        raise TException.Create7('aModule', 'aUnit','ObjectName', 'aMethodName','aFileName','AFieldName',  5);      except      end;       try        raise TException.Create7('aModule', 'aUnit','ObjectName', 'aMethodName','aFileName','AFieldName',  'ParamResult');      except      end;       try        raise TException.Create8('aModule', 'aUnit','ObjectName', 'aMethodName','aFileName','AFieldName',  'aMessage','aProcedure_or_Function');      except      end;    end; end;           ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create4", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create4"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create4", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create4"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create5", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create5"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create5", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create5"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create6", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create6"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create7", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create7"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create7", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create7"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Create8", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Create8"},
     {"title": "mi.rtl.Objects.Methods.Exception.TException.Message", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Exception.TException.html#Message"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TR_ParamExecucao_Local", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TR_ParamExecucao_Local.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TR_ParamExecucao_Local._ParamExecucao", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TR_ParamExecucao_Local.html#_ParamExecucao"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TR_ParamExecucao_Local._Destoy_ParamExecucao", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TR_ParamExecucao_Local.html#_Destoy_ParamExecucao"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TParamExecucao_Tipo_de_Execucao", "text": "    TParamExecucao_Tipo_de_Execucao_Normal  O sistema trabalha com menu da LCL  TParamExecucao_Tipo_de_Execucao_Normal_Sem_Pedir_Password  O sistema trabalha com menu da LCL  TParamExecucao_Tipo_de_Execucao_Normal_Exec_Command  O sistema executa um comando depois de pedir a Password. Usado para execusão em lote  TParamExecucao_Tipo_de_Execucao_VCL  O sistema trabalha com menu Grafico ???  TParamExecucao_Tipo_de_Execucao_CGI    TParamExecucao_Tipo_de_Execucao_ISAPI  O Sistema trabalha como um serviço DLL ??? ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.html#TParamExecucao_Tipo_de_Execucao"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TSet_NomeDeArquivosGenericos", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.html#TSet_NomeDeArquivosGenericos"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Diretor", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Diretor"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Diretor_URL", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Diretor_URL"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Diretor_E_Mail", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Diretor_E_Mail"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Diretor_Telefone", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Diretor_Telefone"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.CPD", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#CPD"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.CPD_URL", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#CPD_URL"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.CPD_E_Mail", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#CPD_E_Mail"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.CPD_Telefone", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#CPD_Telefone"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.NumeroDeTerminais", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#NumeroDeTerminais"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.RazaoSocial", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#RazaoSocial"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Endereco", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Endereco"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Bairro", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Bairro"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Cidade", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Cidade"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Estado", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Estado"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Cep", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Cep"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.CNPJ", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#CNPJ"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.InsEstadual", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#InsEstadual"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.PABX", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#PABX"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Filial", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Filial"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Usuario", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Usuario"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.UserName", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#UserName"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Nome_Compreto_do_Usuario", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Nome_Compreto_do_Usuario"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.Password", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TIdentificacao.html#Password"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.NomeArqExe", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#NomeArqExe"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.NomeArqDll", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#NomeArqDll"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirExe", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirExe"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirDataBaseName_Template", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirDataBaseName_Template"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.CGI_BIN", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#CGI_BIN"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirPalette", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirPalette"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.Dir_Local_Ferr", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#Dir_Local_Ferr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.Name_Local_Ferr", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#Name_Local_Ferr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.Path_Schema", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#Path_Schema"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.Name_Schema", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#Name_Schema"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.Ext_Schema", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#Ext_Schema"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.Path_Import", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#Path_Import"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.Path_Export", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#Path_Export"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.OS", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#OS"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.ComputerName", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#ComputerName"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.LOGONSERVER", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#LOGONSERVER"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.SESSIONNAME", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#SESSIONNAME"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.USERDOMAIN", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#USERDOMAIN"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.USERNAME", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#USERNAME"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.USERPROFILE", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#USERPROFILE"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.ALLUSERSPROFILE", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#ALLUSERSPROFILE"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.ProgramFiles", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#ProgramFiles"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.CommonProgramFiles", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#CommonProgramFiles"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.HOMEDRIVE", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#HOMEDRIVE"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.HOMEPATH", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#HOMEPATH"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.SystemDrive", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#SystemDrive"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.SystemRoot", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#SystemRoot"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.windir", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#windir"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirHTML_Template", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirHTML_Template"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirHTML_imagens", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirHTML_imagens"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirHTML_FileName_JPG_Program_Logomarca", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirHTML_FileName_JPG_Program_Logomarca"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirHTML_Template_Default", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirHTML_Template_Default"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirHTML_Template_Custom", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirHTML_Template_Custom"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirHTML_Temp", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirHTML_Temp"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirHTML", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirHTML"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirHTML_Doc_Program", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirHTML_Doc_Program"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirDoc", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirDoc"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirDataBaseName", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirDataBaseName"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DataBaseName", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DataBaseName"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.DirTemp", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_types.TNomeDeArquivosGenericos.html#DirTemp"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_consts", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_consts.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_consts._Set_NomeDeArquivosGenericos", "text": "Usado para inicializar os paths da sessão.   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_consts.html#_Set_NomeDeArquivosGenericos"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_consts.Set_NomeDeArquivosGenericos_Global", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao_consts.html#Set_NomeDeArquivosGenericos_Global"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.okCreate", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#okCreate"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.NomeDeArquivosGenericos", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#NomeDeArquivosGenericos"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.PathRaiz", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#PathRaiz"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Tipo_de_Execucao", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Tipo_de_Execucao"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Identificacao", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Identificacao"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Command", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Command"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Modulo", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Modulo"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Acao_Form", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Acao_Form"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.DataAtual", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#DataAtual"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.DatabaseNameCharSet", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#DatabaseNameCharSet"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.List_Value_Default", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#List_Value_Default"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Destroy"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_NomeDeArquivosGenericos", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_NomeDeArquivosGenericos"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Acao_Form_Is_Event", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Acao_Form_Is_Event"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Acao_Form_Is_Mb_Bit", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Acao_Form_Is_Mb_Bit"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamStr"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Check_Se_Comando_autorizado", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Check_Se_Comando_autorizado"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Get_Password_do_Comando", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Get_Password_do_Comando"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Param_Execucao", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Param_Execucao"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.Set_ParamExecucao", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#Set_ParamExecucao"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.HostName", "text": "O campo HostName contem o nome ou o ip do banco de dados       REFERÊNCIA [nomes de host da Internet](https://networkencyclopedia.com/hostname/#:&tilde;:text=What%20is%20Hostname%3F,DNS%20server%20or%20hosts%20files.)      ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.TParamExecucao.html#HostName"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type", "text": "A class TApplication_type* é usada para capsular todas as variáveis globais do projeto e gerenciar o ciclo de vida do aplicativo   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.TCommandSet", "text": "O tipo TCommandSet usado para habilita e desabilitar comandos.   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.html#TCommandSet"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.TFilesLogs", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.html#TFilesLogs"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.TMI_MsgBox", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.html#TMI_MsgBox"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.TProgressDlg_If", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.html#TProgressDlg_If"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.TProgressDlg_If_Class", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication_type.html#TProgressDlg_If_Class"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplicationConsts", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplicationConsts.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplicationConsts.origin", "text": "Ponto inferior a esqueda da aplicação   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplicationConsts.html#origin"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplicationConsts.Size", "text": "Ponto superior a direta da aplicação   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplicationConsts.html#Size"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplicationConsts.MI_MsgBox", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplicationConsts.html#MI_MsgBox"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplicationConsts.Logs", "text": "     Logs é inicializado em Initialization e destruído em finalization      ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplicationConsts.html#Logs"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.html"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.ParamExecucao", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.html#ParamExecucao"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.html#Create"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.html#Destroy"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.FileOptions_CommandEnabled", "text": "O método FileOptions_CommandEnabled deve ser redefinido na aplicações filhas para indicar se o comando a ser executado está habilitado no arquivo de opções.    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.html#FileOptions_CommandEnabled"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.EnableCommands", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.html#EnableCommands"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.DisableCommands", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.TApplication.html#DisableCommands"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.application", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.html#application"},
     {"title": "mi.rtl.Objects.Methods.Paramexecucao.Application.Setapplication", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.Paramexecucao.Application.html#Setapplication"},
     {"title": "mi.rtl.Objects.Methods.StreamBase", "text": "     A unit mi.rtl.Objects.Methods.StreamBase implementa a classe TStreamBase do pacote mi.rtl.       NOTAS      O Use da classe mi.rtl.Objects.Methods.StreamBase não deve ser instanciada antes de implementar os métodos abstratos;      VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      19/11/2021 21:25 a 23:15 Criar a unit mi.rtl.objects.methods.StreamBase.pas   20/11/2021 14:02 a 15:19 Documentação da classe e agrupar métodos virtuais, métodos não virtuais e proteger os métodos abstratos.         CÓDIGO FONTE:      mi.rtl.objects.methods.StreamBase.pas            ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.html"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase", "text": "     A class TStreamBase é uma classe abstrata para implementação de streams.      ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Status", "text": "Stream status   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Status"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.StreamSize", "text": "Stream current size   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#StreamSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Position", "text": "Current position   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Position"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Alias", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Alias"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Create"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Destroy"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Open", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Open"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Close", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Close"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Rewrite", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Rewrite"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Flush", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Flush"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Truncate", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Truncate"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Read", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Read"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Write", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Write"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.ReadStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#ReadStr"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Get", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Get"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.StrRead", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#StrRead"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Put", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Put"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.StrWrite", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#StrWrite"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.WriteStr", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#WriteStr"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.CopyFrom", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#CopyFrom"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.GetPos", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#GetPos"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.GetSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#GetSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Reset", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Reset"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Seek", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Seek"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Seek", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Seek"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.Error", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#Error"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.GetDriveType", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.TStreamBase.html#GetDriveType"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream", "text": "     A Unit mi.rtl.Objects.Methods.StreamBase.Stream implementa a classe TStream do pacote mi.rtl.       NOTAS      Está unit foi testada nas plataformas: win32, win64 e linux.   Como o linux não tem opção de travar a região de uma arquivo eu removi as classes _TRecLock e TCollRecsLocks.      VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      20/11/2021 - 09:10 a ??:?? Criar a unit mi.rtl.objects.methods.StreamBase.Stream.pas   22/11/2021      09:44 a 12:05 Adaptar TStream ao free pascal;   14:10 a 19:05 Adaptar _TStream e TStream ao free pascal;       -      CÓDIGO FONTE:      mi.rtl.objects.methods.StreamBase.Stream.pas            ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.html"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream", "text": "     A class TStream é a classe base da classes _TStream do pacote mi.rtl.      ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream._Base", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#_Base"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream._Rec", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#_Rec"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Status_Rewrite", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Status_Rewrite"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.ClockBegin", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#ClockBegin"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Last_Mode", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Last_Mode"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.State", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#State"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Ok_FreeMem_Rec", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Ok_FreeMem_Rec"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream._FileName", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#_FileName"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Set_BaseSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Set_BaseSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.SetBaseSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#SetBaseSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Set_RecSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Set_RecSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.SetRecSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#SetRecSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Calc_Pos", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Calc_Pos"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.FileSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#FileSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Seek", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Seek"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Create"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Destroy"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Set_Ok_Aguarde", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Set_Ok_Aguarde"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.CloseOpen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#CloseOpen"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Flush_Disk", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Flush_Disk"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Flush", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Flush"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Read", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Read"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Write", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Write"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.SetFileMode", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#SetFileMode"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.SetShareMode", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#SetShareMode"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.SetStateFileMode", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#SetStateFileMode"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.GetStateFileMode", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#GetStateFileMode"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Reset", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Reset"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Reset", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Reset"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Rewrite", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Rewrite"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Rewrite", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Rewrite"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.SetBufSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#SetBufSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.IsFileOpen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#IsFileOpen"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.GetRecBase", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#GetRecBase"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.PutRecBase", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#PutRecBase"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.GetRecBase", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#GetRecBase"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.PutRecBase", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#PutRecBase"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.GetRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#GetRec"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.PutRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#PutRec"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.GetRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#GetRec"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.PutRec", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#PutRec"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.BlockRead", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#BlockRead"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.BlockWrite", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#BlockWrite"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Error", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Error"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Truncate", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Truncate"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.CopyFrom", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#CopyFrom"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.CopyFrom", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#CopyFrom"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Bof", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Bof"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Eof", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Eof"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.goBof", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#goBof"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.goEof", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#goEof"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.SetFileName", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#SetFileName"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.GetFileName", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#GetFileName"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.BaseSize", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#BaseSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.RecSize", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#RecSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.Ok_Aguarde", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#Ok_Aguarde"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.FileMode", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#FileMode"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.ShareMode", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#ShareMode"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.FileName", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.TStream.html#FileName"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream", "text": "     A Unit mi.rtl.Objects.Methods.StreamBase.Stream.FileStream implementa a classe TFileStream do pacote mi.rtl.       NOTAS      Implementa banco um fluxo de dados em disco.      VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      22/11/2021      17:00 a 19:45 Criar a unit mi.rtl.Objects.Methods.StreamBase.Stream.FileStream      29/11/2021      10:10 a 12:01 - t12 Documentar a classe TFileStream. Exemplo 01: Test_FileStream_com_header   13:50 a 14:33 - t12 Documentar a classe TFileStream. Exemplo 01: Test_FileStream_sem_header      21/12/2021      15:30 a 16:20 - T12 Transferir os métodos de TDosStream para TFileStrem.            CÓDIGO FONTE:      /units/mi.rtl.objects.methods.StreamBase.Stream.FileStream.pas            ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.html"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream", "text": "     A classe TFileStream é usada para criar um fluxo de dados em disco usada no banco de dados mar-icarai, onde é possível adicionar um registro no início do arquivo de tamanho maior ou menor que os registros seguintes ao registro zero.       EXEMPLOS      Test_FileStream_sem_header        Procedure TMi_Rtl_Tests.Test_FileStream_sem_header;   type    TAluno = record               Id : integer;               nome : string[35];             end;    var     FileStream_Alunos : TObjectss.TFileStream;     aluno : TAluno;//Registro de aluno      nr : longint; //Número do registro.     n  : longint; //Contador  begin   with TObjectss do   try     fillchar(aluno,sizeof(aluno),' ');      if TObjectss.FileExists(expandFileName('aluno.txt'))     then FileStream_Alunos := TFileStream.Create(expandFileName('aluno.txt'),fileMode)     else FileStream_Alunos := TFileStream.Create(expandFileName('aluno.txt'),fileMode,fmCreate );      with aluno,FileStream_Alunos do     if status = StOk then     begin       //Define o tamanho do registro       recSize := sizeof(aluno);        //Adiciona o registro 0;       if status = StOk then       begin         n := 0;         Id:= n;         nome:= 'Paulo Sergio';         PutRec(n,aluno);       end;        //Adiciona o registro 1;       if status = StOk then       begin         inc(n);         Id:= n;         nome:= 'George Bruno';         PutRec(n,aluno);       end;        // Ler e imprime os registros salvos acima.       if status = StOk then       begin         for nr := 0 to n do         begin           GetRec(nr,aluno);           if Status = Stok           then begin                  SysMessageBox('Nr ='+intToStr(nr)+    '; id ='+intToStr(aluno.id)+'; Aluno ='+al                                ,'Test_FileStream_sem_header'                                ,false);                 end           else break;         end;       end;//if     end; //with      with FileStream_Alunos do       if status &lt;&gt; StOk       then SysMessageBox(ErrorMessage(ErrorInfo),'Test_FileStream_sem_header',true);    finally     FileStream_Alunos.Destroy;   end;  end;         Test_FileStream_com_header        procedure TMi_Rtl_Tests.Test_FileStream_com_header;    type     // Tipo de registro 1 ao final do arquivo:    TAluno = record               Id : integer;               nome : string[35];             end;     // Tipo de registro a ser usado no registro zero do arquivo.     THeadAlunos = record                    TotalDeAlunos:longint;                  end;    var     FileStream_Alunos : TObjectss.TFileStream;     aluno     : TAluno;//Registro de aluno     headAluno : THeadAlunos;      nr : longint; //Número do registro.     n  : longint; //Contador  //Início da procedure begin  with TObjectss do  try    fillchar(aluno,sizeof(aluno),' ');     if TObjectss.FileExists(expandFileName('aluno.txt'))    then FileStream_Alunos := TFileStream.Create(expandFileName('aluno.txt'),fileMode)    else FileStream_Alunos := TFileStream.Create(expandFileName('aluno.txt'),fileMode,fmCreate );     with aluno,FileStream_Alunos do    if status = StOk then    begin      //Define o tamanho do registro zero      baseSize := sizeof(headAluno);       //Define o tamanho do registro      recSize := sizeof(aluno);       headAluno.TotalDeAlunos := 0;      PutRecBase(headAluno);       //Adiciona o registro 0;      if status = StOk then      begin        inc(headAluno.TotalDeAlunos);        n := headAluno.TotalDeAlunos;        Id:= n;        nome:= 'Paulo Sergio';        PutRec(n,aluno);        PutRecBase(headAluno);      end;       //Adiciona o registro 1;      if status = StOk then      begin        inc(headAluno.TotalDeAlunos);        n := headAluno.TotalDeAlunos;        nome:= 'George Bruno';        PutRec(n,aluno);        PutRecBase(headAluno);      end;       // Ler e imprime os registros salvos acima.      if status = StOk then      begin        getRecBase(headAluno);        if status = StOk then        begin          SysMessageBox('Número de registros='+intToStr(headAluno.TotalDeAlunos)                        ,'Test_FileStream_sem_header'                        ,false);           for nr := 1 to headAluno.TotalDeAlunos do          begin            GetRec(nr,aluno);            if Status = Stok then            begin              SysMessageBox('Nr ='+intToStr(nr)+    '; id ='+intToStr(aluno.id)+'; Aluno ='+aluno.nome                           ,'Test_FileStream_sem_header'                           ,false);             end else break;          end;        end;      end;    end; //with     with FileStream_Alunos do      if status &lt;&gt; StOk      then SysMessageBox(ErrorMessage(ErrorInfo),'Test_FileStream_sem_header',true);   finally    FileStream_Alunos.Destroy;  end; end;           ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream._ShareModeAnt", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#_ShareModeAnt"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Handle", "text": "DOS file handle   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Handle"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.SetShareMode", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#SetShareMode"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.SetFileName", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#SetFileName"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Create"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Create"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Create"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.GetDriveType", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#GetDriveType"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Destroy"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Truncate", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Truncate"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Seek", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Seek"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Open", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Open"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Open", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Open"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Close", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Close"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Reset", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Reset"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Reset", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Reset"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Rewrite", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Rewrite"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Rewrite", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Rewrite"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Read", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Read"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Write", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Write"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.GetSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#GetSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.CloseOpen", "text": "     O método CloseOpen é usado para obrigar o windows a descarregar o buffer do arquivo.       NOTA      O linux não tem a função dulicateHandle.             ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#CloseOpen"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Flush_Disk", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Flush_Disk"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.Flush", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#Flush"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.IsFileOpen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#IsFileOpen"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.DeleteFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#DeleteFile"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.CreateFileStream", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#CreateFileStream"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.SaveToFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#SaveToFile"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.SaveToFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#SaveToFile"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.LoadFromFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.FileStream.TFileStream.html#LoadFromFile"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream", "text": "     A Unit mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream implementa a classe TMemoryStream do pacote mi.rtl.       NOTAS      Implementa um fluxo de dados em memória.      VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      23/11/2021      06:10 a 07:17 - Criar a unit mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream   07:43 a - Documentar a unit mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.            CÓDIGO FONTE:      mi.rtl.objects.methods.StreamBase.Stream.MemoryStream            ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.html"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream", "text": "     A classe TMemoryStream é usada para gerenciar um fluxo de dados em memória.       NOTA      Todas as alterações aqui devem ser completamente transparentes para os códigos existentes. Basicamente, os blocos de memória não precisam ser segmentos de base mas isso significa que nossa lista se torna blocos de memória em vez de segmentos. O stream também se expandirá como os outros streams padrão            ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.BlkCount", "text": "Number of segments   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#BlkCount"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.BlkSize", "text": "Memory block size   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#BlkSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.MemSize", "text": "Memory alloc size   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#MemSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.BlkList", "text": "Memory block list   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#BlkList"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.Handle", "text": "Quando Handle=HANDLE_INVALID o bloco de memória não foi alocado   ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#Handle"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.LoadFromFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#LoadFromFile"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.SetBufSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#SetBufSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.SetBufSize", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#SetBufSize"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.SetFileName", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#SetFileName"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.Create", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#Create"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#Destroy"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.Truncate", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#Truncate"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.Read", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#Read"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.Read", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#Read"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.Write", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#Write"},
     {"title": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.Write", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.StreamBase.Stream.MemoryStream.TMemoryStream.html#Write"},
     {"title": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory", "text": "     A Unit mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory implementa a classe TBufferMemory.       VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      23/11/2021      12:55 a 14:30 - Criar a unit mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory   14:30 a 19:35 - Criar um exemplo de como usar a classe TBufferMemory   21:35 a 22:44 - Documentar a classe TBufferMemory      29/11/2021      14:45 a 15:10      Criar exemplo TMi_Rtl_Tests.Test_TBufferMemory_sem_header;   Criar exemplo TMi_Rtl_Tests.Test_TBufferMemory_com_header;               CÓDIGO FONTE:      units/mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.pas            ", "tags": "", "url": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.html"},
     {"title": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.TBufferMemory", "text": "     A class TBufferMemory cria um array of record em memória usando os métodos os seek, PutREc, GetRec       NOTA      Uso a classe TBufferMemory para criar arquivos em memória no banco de dados Tb_Access.pas      EXEMPLO      Exemplo de como gravar um registro sem header em memória.      Procedure TMi_Rtl_Tests.Test_TBufferMemory_sem_header;   type    TAluno = record               Id : integer;               nome : string[35];             end;    var    FileMemory_Alunos : TObjectss.TBufferMemory;    Aluno          : TAluno;     nr : longint;    n  : longint;  begin   with TObjectss do   try     FileMemory_Alunos := TObjectss.TBufferMemory.Create(sizeof(aluno));     with aluno,FileMemory_Alunos do     begin       if status = StOk then       begin         n := 1;         Id:= n;         nome:= 'Paulo Sérgio';         PutRec(id,aluno);       end;        if status = StOk then       begin         inc(n);         Id:= n;         nome:= 'George Bruno';         PutRec(id,aluno);       end;        if status = StOk then       begin         for nr := 1 to n do         begin           GetRec(nr,aluno);           if status = StOk           then SysMessageBox('Nr ='+intToStr(nr)+                              '; id ='+intToStr(Aluno.id)+                              '; Aluno ='+Aluno.nome                              ,'Test_FileStream_sem_header',false)           else break;         end;       end;      end;    finally     FileMemory_Alunos.Destroy;   end;  end;     Exemplo de como gravar um registro com header em memória.      Procedure Test_TBufferMemory_com_header;   type     TAluno = record                Id : integer;                nome : string[35];              end;   type     THeadAlunos = record                     TotalDeAlunos:longint;                   end;    var     TBufferMemory_Alunos : TObjectss.TBufferMemory;     HeadAlunos : THeadAlunos;     Aluno             : TAluno;     nr : longint;     n  : longint;  begin   with TObjectss do   try     TBufferMemory_Alunos := TBufferMemory.Create(sizeof(HeadAlunos),sizeof(aluno));      with aluno,TBufferMemory_Alunos do     if status = StOk then     begin       HeadAlunos.TotalDeAlunos:= 0;       PutRecBase(HeadAlunos); // Grava o header        if status = StOk then       begin         inc(HeadAlunos.TotalDeAlunos);         Id:= HeadAlunos.TotalDeAlunos;         nome:= 'Paulo Sérgio da Silva Pacheco';         PutRec(id,aluno);         if status = StOk         then PutRecBase(HeadAlunos); // Grava o header       end;         if status = StOk then       begin         inc(HeadAlunos.TotalDeAlunos);         Id:= HeadAlunos.TotalDeAlunos;         nome:= 'George Bruno Melo Pacheco';          PutRec(id,aluno);         if status = StOk         then PutRecBase(HeadAlunos); // Grava o header       end;        if status = StOk then       begin         GetRecBase(n);         if status = StOk         then         begin           //Imprime o número de elemntos adicionado ao stream           SysMessageBox('Número de registros: '+intToStr(n)                          ,                          'Test_FileStream_sem_header',false);            // Ler e imprime os registros.           for nr := 1 to n do           begin               GetRec(nr,aluno);               if status = StOk               then SysMessageBox('Nr ='+intToStr(nr)+                                  '; id ='+intToStr(Aluno.id)+                                  '; Aluno ='+Aluno.nome                                  ,                                  'Test_FileStream_sem_header',false)               else Break;           end;            if status &lt;&gt; StOk           then SysMessageBox(errorMessage(errorInfo)                              ,                              'Test_FileStream_sem_header',false)          end;       end;        if status &lt;&gt; StOk       then SysMessageBox(errorMessage(errorInfo)                          ,                          'Test_FileStream_sem_header',false)      end;    finally     TBufferMemory_Alunos.Destroy;   end;  end;              ", "tags": "", "url": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.TBufferMemory.html"},
     {"title": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.TBufferMemory.Create", "text": "     O constructor Create cria um stream de um array of record em memória onde a mesma será gravado após o header passado pelo parâmetro a_BaseSize.;       PARÂMETROS      a_BaseSize - Tamanho do registro usado no registro de posição zero   a_RecSize - Tamanho do registro depois do registro usado na posição depois da base;             ", "tags": "", "url": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.TBufferMemory.html#Create"},
     {"title": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.TBufferMemory.Create", "text": "     O constructor Create cria um stream de um array of record em memória onde a mesma será gravado após ao início do bloco em memória obs: BaseSize=0.;       ", "tags": "", "url": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.TBufferMemory.html#Create"},
     {"title": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.TBufferMemory.Seek", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.TBufferMemory.html#Seek"},
     {"title": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.TBufferMemory.Error", "text": "    ", "tags": "", "url": "mi.rtl.objects.methods.StreamBase.Stream.MemoryStream.BufferMemory.TBufferMemory.html#Error"},
     {"title": "mi.rtl.Objects.Methods.System", "text": " SISTEMA : Nort Soft Data Base MODULO : MARICARAY AUTOR : Paulo Pacheco &mdash;&mdash;&mdash; HISTORIA &mdash;&mdash;&mdash; DATA HARA HORA OCORRENCIA &mdash;&mdash;&ndash; &mdash;&ndash; &mdash;&ndash; &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash; 01/08/02 08:00 Implementacao inicial 08/08/02 23:00 Implementacao Final 25/01/22 Convertido para lazarus *   ", "tags": "", "url": "mi.rtl.Objects.Methods.System.html"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.BlocksRead", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#BlocksRead"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.BlocksWrite", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#BlocksWrite"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.FlushDOSFile", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#FlushDOSFile"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.BlockRead", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#BlockRead"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.BlockWrite", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#BlockWrite"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.Seek", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#Seek"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.AppendText", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#AppendText"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.Rewrite", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#Rewrite"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.Rewrite", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#Rewrite"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.Close", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#Close"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.Close", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#Close"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.Reset", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#Reset"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.OpenText", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#OpenText"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.Reset", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#Reset"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.FileFlushBuffers", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#FileFlushBuffers"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.FileFlushBuffers", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#FileFlushBuffers"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.Size_LinFeed_Text", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#Size_LinFeed_Text"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.FTempoDeTentativas", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#FTempoDeTentativas"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.Is_TFileOpen", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#Is_TFileOpen"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.CopyFiles", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#CopyFiles"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.DeleteFiles", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#DeleteFiles"},
     {"title": "mi.rtl.Objects.Methods.System.TObjectsSystem.Existe_Espaco_em_Dobro", "text": "    ", "tags": "", "url": "mi.rtl.Objects.Methods.System.TObjectsSystem.html#Existe_Espaco_em_Dobro"},
     {"title": "mi.rtl.Objects.Types", "text": "     A Unit mi.rtl.Objects.Types implementa a classe TObjectsTypes .       NOTAS      Esta unit foi testada nas plataformas: win32, win64 e linux.      VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.types.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      17/11/2021 20:30 a 22:49 - Criada a classe TObjectsTypes. Falta conclui...   18/11/2021 09:05 - Concluir a classe TObjectsTypes.   15/12/2021 15:00 a 15:15 - Revisar a documentação da unidade.               ", "tags": "", "url": "mi.rtl.Objects.Types.html"},
     {"title": "mi.rtl.Objects.Types.DummyClass", "text": "     Internal Class      ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.html"},
     {"title": "mi.rtl.Objects.Types.DummyClass.Data", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.html#Data"},
     {"title": "mi.rtl.Objects.Types.DummyClass.ProcPtr", "text": "     procedure POINTER DEFINED       ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.html#ProcPtr"},
     {"title": "mi.rtl.Objects.Types.DummyClass.PStrIndex", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.html#PStrIndex"},
     {"title": "mi.rtl.Objects.Types.DummyClass.PTypeData", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.html#PTypeData"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TLast_Mode_Read_Write", "text": "    En_Last_Mode_Null    En_Last_Mode_Read    En_Last_Mode_Write    En_Last_Mode_Flush   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.html#TLast_Mode_Read_Write"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TOkProcessingTime_Action", "text": "     O tipo enumerado TOkProcessingTime_Action controla as ações caso o sistema fique ocioso       OkProcessingTime_Action_Abort    OkProcessingTime_Action_Password   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.html#TOkProcessingTime_Action"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TStrIndex", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.html#TStrIndex"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TStrIndexRec", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.TStrIndexRec.html"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TStrIndexRec.Key", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.TStrIndexRec.html#Key"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TStrIndexRec.Count", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.TStrIndexRec.html#Count"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TStrIndexRec.Offset", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.TStrIndexRec.html#Offset"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TypeData", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.TypeData.html"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TypeData.dia", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.TypeData.html#dia"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TypeData.mes", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.TypeData.html#mes"},
     {"title": "mi.rtl.Objects.Types.DummyClass.TypeData.ano", "text": "   ", "tags": "", "url": "mi.rtl.Objects.Types.DummyClass.TypeData.html#ano"},
     {"title": "mi.rtl.Objectss", "text": "     A Unit mi.rtl.Objectss reune todas as classes base pacote mi.rtl.       NOTAS      Esta unit foi testada nas plataformas: win32, win64 e linux.      VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      20/11/2021 9:10 a ??: Criar a unit mi.rtl.objects.pas -         CÓDIGO FONTE:      mi.rtl.objects.pas            ", "tags": "", "url": "mi.rtl.Objectss.html"},
     {"title": "mi.rtl.Objectss.TObjectss", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html"},
     {"title": "mi.rtl.Objectss.TObjectss.Application", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#Application"},
     {"title": "mi.rtl.Objectss.TObjectss.Set_MI_MsgBox", "text": "    ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#Set_MI_MsgBox"},
     {"title": "mi.rtl.Objectss.TObjectss.ProcStreamError", "text": "    ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#ProcStreamError"},
     {"title": "mi.rtl.Objectss.TObjectss.StrToSItem", "text": "    ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#StrToSItem"},
     {"title": "mi.rtl.Objectss.TObjectss.WriteSItems", "text": "    ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#WriteSItems"},
     {"title": "mi.rtl.Objectss.TObjectss.PSItem_ListaDeMsgErro", "text": "    ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#PSItem_ListaDeMsgErro"},
     {"title": "mi.rtl.Objectss.TObjectss.MessageError", "text": "    ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#MessageError"},
     {"title": "mi.rtl.Objectss.TObjectss.TApplication", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TApplication"},
     {"title": "mi.rtl.Objectss.TObjectss.TBufferMemory", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TBufferMemory"},
     {"title": "mi.rtl.Objectss.TObjectss.TCollection", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TCollection"},
     {"title": "mi.rtl.Objectss.TObjectss.TCollectionString", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TCollectionString"},
     {"title": "mi.rtl.Objectss.TObjectss.TConsts", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TConsts"},
     {"title": "mi.rtl.Objectss.TObjectss.TDates", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TDates"},
     {"title": "mi.rtl.Objectss.TObjectss.TException", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TException"},
     {"title": "mi.rtl.Objectss.TObjectss.TFiles", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TFiles"},
     {"title": "mi.rtl.Objectss.TObjectss.TFilesStreams", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TFilesStreams"},
     {"title": "mi.rtl.Objectss.TObjectss.TFileStream", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TFileStream"},
     {"title": "mi.rtl.Objectss.TObjectss.TMemoryStream", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TMemoryStream"},
     {"title": "mi.rtl.Objectss.TObjectss.TMiStringList", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TMiStringList"},
     {"title": "mi.rtl.Objectss.TObjectss.TObjectsConsts", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TObjectsConsts"},
     {"title": "mi.rtl.Objectss.TObjectss.TObjectsMethods", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TObjectsMethods"},
     {"title": "mi.rtl.Objectss.TObjectss.TObjectsTypes", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TObjectsTypes"},
     {"title": "mi.rtl.Objectss.TObjectss.TParamExecucao", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TParamExecucao"},
     {"title": "mi.rtl.Objectss.TObjectss.TSortedCollection", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TSortedCollection"},
     {"title": "mi.rtl.Objectss.TObjectss.TStrCollection", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TStrCollection"},
     {"title": "mi.rtl.Objectss.TObjectss.TStream", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TStream"},
     {"title": "mi.rtl.Objectss.TObjectss.TStreambase", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TStreambase"},
     {"title": "mi.rtl.Objectss.TObjectss.TStringCollection", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TStringCollection"},
     {"title": "mi.rtl.Objectss.TObjectss.TStringListBase", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TStringListBase"},
     {"title": "mi.rtl.Objectss.TObjectss.Ttb_access", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#Ttb_access"},
     {"title": "mi.rtl.Objectss.TObjectss.TTb_Access_conts", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TTb_Access_conts"},
     {"title": "mi.rtl.Objectss.TObjectss.TTb_Access_types", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TTb_Access_types"},
     {"title": "mi.rtl.Objectss.TObjectss.Ttb__access", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#Ttb__access"},
     {"title": "mi.rtl.Objectss.TObjectss.TTb__Access_conts", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TTb__Access_conts"},
     {"title": "mi.rtl.Objectss.TObjectss.TTb__Access_types", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TTb__Access_types"},
     {"title": "mi.rtl.Objectss.TObjectss.TTb___Acces", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TTb___Acces"},
     {"title": "mi.rtl.Objectss.TObjectss.TTb___Access_consts", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TTb___Access_consts"},
     {"title": "mi.rtl.Objectss.TObjectss.TTb___Access_types", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TTb___Access_types"},
     {"title": "mi.rtl.Objectss.TObjectss.TTypes", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TTypes"},
     {"title": "mi.rtl.Objectss.TObjectss.TUnStrCollection", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TUnStrCollection"},
     {"title": "mi.rtl.Objectss.TObjectss.TUnStringCollection", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.html#TUnStringCollection"},
     {"title": "mi.rtl.Objectss.TObjectss.TListBoxRec", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.TListBoxRec.html"},
     {"title": "mi.rtl.Objectss.TObjectss.TListBoxRec.PS", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.TListBoxRec.html#PS"},
     {"title": "mi.rtl.Objectss.TObjectss.TListBoxRec.Selection", "text": "   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.TListBoxRec.html#Selection"},
     {"title": "mi.rtl.Objectss.TObjectss.TListBoxRec.StrSelection", "text": "O campo a seguir devolve a pedaco da string limitadas por &tilde; usada para transferencia de dados   ", "tags": "", "url": "mi.rtl.Objectss.TObjectss.TListBoxRec.html#StrSelection"},
     {"title": "mi.rtl.tests", "text": "     A Unit mi.rtl.tests reune os testes de uso das classe métodos globais usados pelo pacote mi.rtl. Esta unit foi testada nas plataformas: win32, win64 e linux.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.tests.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br)      2021-11-04 20:30 - Data em que essa unit foi criada.   2021-11-04 21:00      Criado exemplo de uso da classe método TFile.FileOpen   Criado exemplo de uso da classe método TFile.FileClose      2021-11-15 15:00      Documentação da Unit.   Criado exemplo de uso da classe método TFile.FileCreate;   Criado exemplo de uso da classe método TFile.FileTruncate;   Criado exemplo de uso da classe método FindFirst;   Removi as constante que eu usava para compatibilidade com o passado e coloquei as atuais.   Adicionado o MenuBar   Adicionei o componente ActionList com objetivo de criar ações para adicionar nos menus de opções.      2021-11-16      Hora de início: 08:00      Adicionar um menu de opções   Adicionar a class TActionList   Converter os eventos dos botões para TActionList   Criar os itens do menu main usando TActionList.      Hora de início: 13:30      Documentar a unit mi.rtl.tests.   Criar exemplo de uso do método TObjectss.FileSize()   Criar exemplo de uso do método TObjectss.FileSeek()   Criar exemplo de uso do método TObjectss.FileSize()      Hora de início: 20:30      Criar exemplo de uso do método TObjectss.FileRead()         2021-11-29      09:05 a 10:10 - T12 Criar exemplos da classe TFileStream com header:      TMi_Rtl_Tests.Test_FileStream_com_header;      12:50 a 14:41 - T21 Documentar a classe TFileStream.   14:45 a 15:20 - T21 Documentar a classe TBufferMemory.      2021-12-04      15:00 a 15:10 - Criar menu mi.ui/Dialogs   15:11 a 16:51      Criar exemplo TMi_Rtl_Tests.Test_tobjects_dlgs_Confirm;   Criar exemplo TMi_Rtl_Tests.Test_tobjects_dlgs_Prompt;   Criar exemplo TMi_Rtl_Tests.Test_tobjects_dlgs_password;         2021-12-13      20:40 a 22:15      Criar método : TMi_Rtl_Tests.Action_test_Logs_WarningExecute   Criar método : TMi_Rtl_Tests.Action_test_Logs_ErrorExecute   Criar método : TMi_Rtl_Tests.Action_test_Logs_InfoExecute         2021-12-20      09:35 a 12:34 : T12 Criar um exemplo visual para entender a função FindFirst. procedure TMi_Rtl_Tests.Action_test_FindFirstExecute(Sender: TObject);   14:00 a 16:26 : T12 Testar o atributo FaDirectory   20:20 a 22:30 : T12 - Criar exemplo de uso da classe TfilesStreams. procedure TMi_Rtl_Tests.TabSheet_TfilesStreamsEnter(Sender: TObject);      2021-12-30      08:57 a 11:35 : Criar exemplo Test_String_Asc_GUI_to_Asc_Ingles de como converter caracteres acima de 127 para caractere equivalente abaixo de 127.   08:57 a 11:35 : Criar exemplo Test_String_Asc_GUI_to_Asc_html de como converter caracteres acima de 127 para caractere equivalente em html.                  ", "tags": "", "url": "mi.rtl.tests.html"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_TTb_access_SetTransaction", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_TTb_access_SetTransaction"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TTb_access_DeleteRec", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TTb_access_DeleteRec"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_TTb_access_Lista_ordem_decrescente", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_TTb_access_Lista_ordem_decrescente"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_TTb_access_Lista_ordem_crescente", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_TTb_access_Lista_ordem_crescente"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TTb__Access_Cadastra", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TTb__Access_Cadastra"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_removeAccents", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_removeAccents"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_String_Asc_GUI_to_Asc_html", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_String_Asc_GUI_to_Asc_html"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_String_Asc_GUI_to_Asc_Ingles", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_String_Asc_GUI_to_Asc_Ingles"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_TFilesStreams", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_TFilesStreams"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_TMi_Msgbox_LCL", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_TMi_Msgbox_LCL"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TException", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TException"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_LogError", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_LogError"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_Logs_Info", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_Logs_Info"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_Logs_Error", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_Logs_Error"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.ActionTLazLogger", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#ActionTLazLogger"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_testTLazLoggerFileHandle", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_testTLazLoggerFileHandle"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_Logs_Warning", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_Logs_Warning"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_systemlog", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_systemlog"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action12", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action12"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action12222", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action12222"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action1ii", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action1ii"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faDirectory", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faDirectory"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faSymLink", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faSymLink"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faAnyFile", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faAnyFile"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faHidden", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faHidden"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faArchive", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faArchive"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faSysFile", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faSysFile"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faReadOnly", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faReadOnly"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Edit1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Edit1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Edit2", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Edit2"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Edit_FileSizes", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Edit_FileSizes"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Label3", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Label3"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem26", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem26"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem27", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem27"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem38", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem38"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem39", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem39"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem40", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem40"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem41", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem41"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem42", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem42"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem43", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem43"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem_CodePage", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem_CodePage"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.NumeroDeArquivo", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#NumeroDeArquivo"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.GroupBox_Atributo", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#GroupBox_Atributo"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Label1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Label1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Label2", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Label2"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.LabelCount", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#LabelCount"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.ListBox1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#ListBox1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem34", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem34"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem35", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem35"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem37", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem37"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItemCollections", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItemCollections"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.PageControl_test", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#PageControl_test"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.ScrollBox_TfilesStreams", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#ScrollBox_TfilesStreams"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Separator1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Separator1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.StringGrid1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#StringGrid1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.TabSheet_TfilesStreams", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#TabSheet_TfilesStreams"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.TabSheet_TestFindFirst", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#TabSheet_TestFindFirst"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.TFilesLogs", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#TFilesLogs"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TLazLoggerFileHandle", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TLazLoggerFileHandle"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_CreateMessageDialog", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_CreateMessageDialog"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_tobjects_dlgs_password", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_tobjects_dlgs_password"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_Mi_MsgBox_Prompt", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_Mi_MsgBox_Prompt"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_tobjects_dlgs_Confirm", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_tobjects_dlgs_Confirm"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileStream_com_header", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileStream_com_header"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileStream_sem_header", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileStream_sem_header"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TBufferMemory_Com_Header", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TBufferMemory_Com_Header"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TBufferMemory_Sem_Header", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TBufferMemory_Sem_Header"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileWrite", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileWrite"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileRead", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileRead"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileSize", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileSize"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_OpenFile_exclusive_fmShareExclusive", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_OpenFile_exclusive_fmShareExclusive"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileSeek", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileSeek"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_Reset", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_Reset"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_FindFirst", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_FindFirst"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_CopyFile", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_CopyFile"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_OpenFile_exclusive_fmShareDenyNone", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_OpenFile_exclusive_fmShareDenyNone"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_FileTruncate", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_FileTruncate"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_FileCreate", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_FileCreate"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_OpenFile_exclusive_mode", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_OpenFile_exclusive_mode"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.ActionList1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#ActionList1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Button1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Button1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Button_test_TLazLoggerFileHandle", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Button_test_TLazLoggerFileHandle"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.EventLog1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#EventLog1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MainMenu1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MainMenu1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem10", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem10"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem11", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem11"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem12", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem12"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem13", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem13"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem14", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem14"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem15", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem15"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem16", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem16"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem17", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem17"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem18", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem18"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem19", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem19"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem2", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem2"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem20", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem20"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem21", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem21"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem22", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem22"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem23", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem23"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem24", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem24"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem28", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem28"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem29", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem29"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem30", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem30"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem31", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem31"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem32", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem32"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem33", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem33"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem_TObjectss_logs", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem_TObjectss_logs"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem25", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem25"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItemI_DB", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItemI_DB"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem_TTb__Access", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem_TTb__Access"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem3", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem3"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem4", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem4"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem5", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem5"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem6", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem6"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem7", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem7"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem8", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem8"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem9", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem9"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem_Mi_rtl_TFiles", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem_Mi_rtl_TFiles"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem_Test_FileRead", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem_Test_FileRead"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem_Test_FileSeek", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem_Test_FileSeek"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.MenuItem_Mi_rtl_TObjectss", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#MenuItem_Mi_rtl_TObjectss"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.TLazLoggerFileHandle", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#TLazLoggerFileHandle"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.ToggleBox1", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#ToggleBox1"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.ListFiles", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#ListFiles"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.filesStreams", "text": "   ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#filesStreams"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_testExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_testExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_TMi_Msgbox_LCLExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_TMi_Msgbox_LCLExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_TTb_access_SetTransactionExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_TTb_access_SetTransactionExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_String_Asc_GUI_to_Asc_htmlExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_String_Asc_GUI_to_Asc_htmlExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_String_Asc_GUI_to_Asc_InglesExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_String_Asc_GUI_to_Asc_InglesExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TfilesStreamsExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TfilesStreamsExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_removeAccentsExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_removeAccentsExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_LogErrorExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_LogErrorExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_Logs_ErrorExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_Logs_ErrorExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_Logs_InfoExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_Logs_InfoExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_Logs_WarningExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_Logs_WarningExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_systemlogExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_systemlogExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TExceptionExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TExceptionExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_tobjects_dlgs_ConfirmExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_tobjects_dlgs_ConfirmExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileStream_com_headerExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileStream_com_headerExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileStream_sem_headerExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileStream_sem_headerExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TBufferMemory_Com_HeaderExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TBufferMemory_Com_HeaderExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TBufferMemory_Sem_HeaderExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TBufferMemory_Sem_HeaderExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_tobjects_dlgs_passwordExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_tobjects_dlgs_passwordExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_Mi_MsgBox_PromptExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_Mi_MsgBox_PromptExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_CreateMessageDialogExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_CreateMessageDialogExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TTb_access_DeleteRecExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TTb_access_DeleteRecExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_TTb_access_Lista_ordem_crescenteExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_TTb_access_Lista_ordem_crescenteExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_TTb_access_Lista_ordem_decrescenteExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_TTb_access_Lista_ordem_decrescenteExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_TTb__Access_CadastraExecute", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_TTb__Access_CadastraExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faAnyFileChange", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faAnyFileChange"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faArchiveChange", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faArchiveChange"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faDirectoryChange", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faDirectoryChange"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faHiddenChange", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faHiddenChange"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faReadOnlyChange", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faReadOnlyChange"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faSymLinkChange", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faSymLinkChange"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.CheckBox_faSysFileChange", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#CheckBox_faSysFileChange"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Edit1Change", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Edit1Change"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Edit2Change", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Edit2Change"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.FormCreate", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#FormCreate"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_FileCreateExecute", "text": "     O método Action_test_FileCreateExecute testa o funcionamento do da função TObjectss.FileCreate       ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_FileCreateExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_OpenFile_exclusive_fmShareDenyNoneExecute", "text": "     O método Action_Test_OpenFile_exclusive_fmShareDenyNoneExecute testa o funcionamento das funçõese TObjectss.FileOpen e TObjectss.FileClose       ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_OpenFile_exclusive_fmShareDenyNoneExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_OpenFile_exclusive_fmShareExclusiveExecute", "text": "&ndash; O Método testa o funcionamento das funçõese TObjectss.FileOpen e TObjectss.FileClose com fileMode ,fmOpenWrite or fmShareExclusive    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_OpenFile_exclusive_fmShareExclusiveExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_OpenFile_exclusive_modeExecute", "text": "     O método Action_Test_OpenFile_exclusive_modeExecute testa o funcionamento das funçõese TObjectss.FileOpen e TObjectss.FileClose no modo exclusivo       ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_OpenFile_exclusive_modeExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_OpenFile_exclusive_modeHint", "text": "texto hint    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_OpenFile_exclusive_modeHint"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_FileTruncateExecute", "text": "     O método Action_test_FileTruncateExecute testa o funcionamento do da função TObjectss.FileTruncate       ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_FileTruncateExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_FindFirstExecute", "text": "     O método Action_test_FindFirstExecute testa o funcionamento da função FindFirst       ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_FindFirstExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_ResetExecute", "text": "     A função Action_Test_ResetExecute é usada para testar os erros possívei ao abrir um arquivo com o reset do freepascal.       ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_ResetExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_test_CopyFileExecute", "text": "     O método Action_test_CopyFileExecute testa o funcionamento das funçõese TObjectss.FileOpen e TObjectss.FileClose no modo exclusivo       ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_test_CopyFileExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileSeekExecute", "text": "     O Método Action_Test_FileSeekExecute abre um arquivo e posiciona no último byte do arquivo.       ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileSeekExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileSizeExecute", "text": "O Método Action_Test_FileSizeExecute demonstra o uso da funçao FileSize.    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileSizeExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileReadExecute", "text": "O Método Action_Test_FileReadExecute demonstra o uso da funçao FileRead.    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileReadExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Action_Test_FileWriteExecute", "text": "O Método Action_Test_FileWriteExecute demonstra o uso da funçao FileWrite.    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Action_Test_FileWriteExecute"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.FormDestroy", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#FormDestroy"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.TabSheet_TfilesStreamsEnter", "text": "    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#TabSheet_TfilesStreamsEnter"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Test_TBufferMemory_sem_header", "text": "A procedure Test_TBufferMemory_sem_header demonstra o uso da classe TObjectss.TBufferStream quando o registro 0 (zero) do buffer é igual aos registros 1 a eof;    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Test_TBufferMemory_sem_header"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Test_TBufferMemory_com_header", "text": "A procedure Test_TBufferMemory_com_header demonstra o uso da classe TObjectss.TBufferStream quando o registro 0 (zero) do buffer é diferente dos registros 1 a eof;    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Test_TBufferMemory_com_header"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Test_FileStream_sem_header", "text": "A procedure Test_FileStream_sem_header demonstra o uso da classe TObjectss.TFileStream quando o registro 0 (zero) do arquivo é igual aos registros 1 a eof;    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Test_FileStream_sem_header"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Test_FileStream_com_header", "text": "A procedure Test_FileStream_com_header demonstra o uso da classe TObjectss.TFileStream quando o registro 0 (zero) do arquivo é diferente dos registros 1 a eof;    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Test_FileStream_com_header"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Test_tobjects_dlgs_Confirm", "text": "A procedure Test_tobjects_dlgs_Confirm demonstra o uso do método de classe TObjectss.dlgs.Confirm();    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Test_tobjects_dlgs_Confirm"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Test_tobjects_dlgs_Prompt", "text": "A procedure Test_tobjects_dlgs_Prompt demonstra o uso do método de classe TObjectss.dlgs.Prompt();    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Test_tobjects_dlgs_Prompt"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Test_tobjects_dlgs_password", "text": "A procedure Test_tobjects_dlgs_password demonstra o uso do método de classe TObjectss.dlgs.password();    ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Test_tobjects_dlgs_password"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Test_String_Asc_GUI_to_Asc_html", "text": "A procedure Test_String_Asc_GUI_to_Asc_html é usada para converter caractere acima de 127 para caractere equivalente em HTML.       EXEMPLO      ç = '&amp;ccedil;'   ã = '&amp;atilde;';   é = '&amp;eacute;';   etc...          ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Test_String_Asc_GUI_to_Asc_html"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.Test_String_Asc_GUI_to_Asc_Ingles", "text": "A procedure Test_String_Asc_GUI_to_Asc_Ingles é usada para converter caractere acima de 127 para caractere equivalente abaixo de 127.       EXEMPLO      ç = c;   ã = a;   é = e;   etc...          ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#Test_String_Asc_GUI_to_Asc_Ingles"},
     {"title": "mi.rtl.tests.TMi_Rtl_Tests.test_removeAccents", "text": "A procedure test_removeAccents é usada para converter caractere acima de 127 para caractere equivalente abaixo de 127.       EXEMPLO      ç = c;   ã = a;   é = e;   etc...          ", "tags": "", "url": "mi.rtl.tests.TMi_Rtl_Tests.html#test_removeAccents"},
     {"title": "mi.rtl.tests.Mi_Rtl_Tests", "text": "   ", "tags": "", "url": "mi.rtl.tests.html#Mi_Rtl_Tests"},
     {"title": "mi.rtl.tests.FileLog", "text": "   ", "tags": "", "url": "mi.rtl.tests.html#FileLog"},
     {"title": "mi.rtl.Types", "text": "     A Unit mi.rtl.Types reune os tipos globais usados pelo pacote mi.rtl. Esta unit foi testada nas plataformas: no linux.       NOTA      O Método TTypes.TPointer.Get_Mem ignora alocação de memória real porque não sei como fazer nas plataformas diferentes do Windows.      VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.types.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      Period : June to September of 2001)   14/09/2001 : I begin of the version: Windows 98   29/10/2021 : Portado para o compilador free pascal para os sistemas operacionais: 1. x86_64-linux 2. x86_64-win64 3. i386-win32   02/11/2021 : Trabalhei na documentação com pasdoc.   12/11/2021      A Unit mi.rtl.types foi convertida para unit mi.types.   Criado a class TTypes com todos os tipos definidos em mi.rtl.types com objetivo de encapsular os tipos globais do pacote mi.rtl.      13/11/2021      Documentação da unit mi.rtl.Types.      15/12/2021      Criado o tipo registro TIndentificação.                  ", "tags": "", "url": "mi.rtl.Types.html"},
     {"title": "mi.rtl.Types.TTypes", "text": "A classe TTypes declara todos os tipos globais do pacote MarIcarai   ", "tags": "", "url": "mi.rtl.Types.TTypes.html"},
     {"title": "mi.rtl.Types.TTypes.Alias", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#Alias"},
     {"title": "mi.rtl.Types.TTypes.ok_Set_Transaction", "text": "     A constant ok_Set_Transaction indica se o processo está dentro de uma transação.      ", "tags": "", "url": "mi.rtl.Types.TTypes.html#ok_Set_Transaction"},
     {"title": "mi.rtl.Types.TTypes.MAX_BYTE", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_BYTE"},
     {"title": "mi.rtl.Types.TTypes.MAX_ARRAY_BYTE", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_ARRAY_BYTE"},
     {"title": "mi.rtl.Types.TTypes.MAX_INT", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_INT"},
     {"title": "mi.rtl.Types.TTypes.MAX_ARRAY_INT", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_ARRAY_INT"},
     {"title": "mi.rtl.Types.TTypes.MAX_SMALL_INT", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_SMALL_INT"},
     {"title": "mi.rtl.Types.TTypes.MAX_ARRAY_SMALL_INT", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_ARRAY_SMALL_INT"},
     {"title": "mi.rtl.Types.TTypes.MAX_LONG_INT", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_LONG_INT"},
     {"title": "mi.rtl.Types.TTypes.MAX_ARRAY_LONG_INT", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_ARRAY_LONG_INT"},
     {"title": "mi.rtl.Types.TTypes.MAX_WORD", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_WORD"},
     {"title": "mi.rtl.Types.TTypes.MAX_ARRAY_WORD", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_ARRAY_WORD"},
     {"title": "mi.rtl.Types.TTypes.MAX_SMALL_WORD", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_SMALL_WORD"},
     {"title": "mi.rtl.Types.TTypes.MAX_ARRAY_SMALL_WORD", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_ARRAY_SMALL_WORD"},
     {"title": "mi.rtl.Types.TTypes.MAX_LONG_WORD", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_LONG_WORD"},
     {"title": "mi.rtl.Types.TTypes.MAX_ARRAY_LONG_WORD", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_ARRAY_LONG_WORD"},
     {"title": "mi.rtl.Types.TTypes.MAX_POINTER", "text": "O ideal seria memAvail, porém esta função não é multiplataforma;   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_POINTER"},
     {"title": "mi.rtl.Types.TTypes.MAX_ARRAY_PTR", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MAX_ARRAY_PTR"},
     {"title": "mi.rtl.Types.TTypes.FileNameLen", "text": "Usado para compatibilidade com o passado;   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#FileNameLen"},
     {"title": "mi.rtl.Types.TTypes.evNothing", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evNothing"},
     {"title": "mi.rtl.Types.TTypes.evMouseDown", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evMouseDown"},
     {"title": "mi.rtl.Types.TTypes.evMouseUp", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evMouseUp"},
     {"title": "mi.rtl.Types.TTypes.evMouseMove", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evMouseMove"},
     {"title": "mi.rtl.Types.TTypes.evMouseAuto", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evMouseAuto"},
     {"title": "mi.rtl.Types.TTypes.evKeyDown", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evKeyDown"},
     {"title": "mi.rtl.Types.TTypes.evCommand", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evCommand"},
     {"title": "mi.rtl.Types.TTypes.evBroadcast", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evBroadcast"},
     {"title": "mi.rtl.Types.TTypes.EvAplCliSvr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#EvAplCliSvr"},
     {"title": "mi.rtl.Types.TTypes.evMouse", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evMouse"},
     {"title": "mi.rtl.Types.TTypes.evKeyboard", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evKeyboard"},
     {"title": "mi.rtl.Types.TTypes.evMessage", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#evMessage"},
     {"title": "mi.rtl.Types.TTypes.SizeOffldCluster", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#SizeOffldCluster"},
     {"title": "mi.rtl.Types.TTypes.SizeOffldDbCluster", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#SizeOffldDbCluster"},
     {"title": "mi.rtl.Types.TTypes.Create", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.html#Create"},
     {"title": "mi.rtl.Types.TTypes.CheckEmpty", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.html#CheckEmpty"},
     {"title": "mi.rtl.Types.TTypes.AnsiCharSet", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#AnsiCharSet"},
     {"title": "mi.rtl.Types.TTypes.AnsiString_USASCII", "text": "CodePage 20127 = US ASCII (0-127)   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#AnsiString_USASCII"},
     {"title": "mi.rtl.Types.TTypes.Char", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#Char"},
     {"title": "mi.rtl.Types.TTypes.ComStr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#ComStr"},
     {"title": "mi.rtl.Types.TTypes.DirStr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#DirStr"},
     {"title": "mi.rtl.Types.TTypes.ExtStr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#ExtStr"},
     {"title": "mi.rtl.Types.TTypes.int64", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#int64"},
     {"title": "mi.rtl.Types.TTypes.Integer", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#Integer"},
     {"title": "mi.rtl.Types.TTypes.LongInt", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#LongInt"},
     {"title": "mi.rtl.Types.TTypes.LongWord", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#LongWord"},
     {"title": "mi.rtl.Types.TTypes.MatrizStr64", "text": "Usado na ConvValorExt   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#MatrizStr64"},
     {"title": "mi.rtl.Types.TTypes.NameStr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#NameStr"},
     {"title": "mi.rtl.Types.TTypes.PAnsiCharArray", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PAnsiCharArray"},
     {"title": "mi.rtl.Types.TTypes.PAnsiCharSet", "text": "AnsiCharacter set ptr   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PAnsiCharSet"},
     {"title": "mi.rtl.Types.TTypes.PArrayAnsiChar", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PArrayAnsiChar"},
     {"title": "mi.rtl.Types.TTypes.PArrayByte", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PArrayByte"},
     {"title": "mi.rtl.Types.TTypes.PArrayInt", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PArrayInt"},
     {"title": "mi.rtl.Types.TTypes.PArrayLong", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PArrayLong"},
     {"title": "mi.rtl.Types.TTypes.PArrayPtr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PArrayPtr"},
     {"title": "mi.rtl.Types.TTypes.PathStr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PathStr"},
     {"title": "mi.rtl.Types.TTypes.PBoolean", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PBoolean"},
     {"title": "mi.rtl.Types.TTypes.PByte", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PByte"},
     {"title": "mi.rtl.Types.TTypes.pChar", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#pChar"},
     {"title": "mi.rtl.Types.TTypes.PCluster", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PCluster"},
     {"title": "mi.rtl.Types.TTypes.PDouble", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PDouble"},
     {"title": "mi.rtl.Types.TTypes.PEvent", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PEvent"},
     {"title": "mi.rtl.Types.TTypes.PExtended", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PExtended"},
     {"title": "mi.rtl.Types.TTypes.PLongint", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PLongint"},
     {"title": "mi.rtl.Types.TTypes.PPoint", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PPoint"},
     {"title": "mi.rtl.Types.TTypes.PReal", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PReal"},
     {"title": "mi.rtl.Types.TTypes.PRealNum", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PRealNum"},
     {"title": "mi.rtl.Types.TTypes.PRect", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PRect"},
     {"title": "mi.rtl.Types.TTypes.PShortInt", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PShortInt"},
     {"title": "mi.rtl.Types.TTypes.PSItem", "text": "Define os tipos usados no Turbo Vision e nao declarados em QDialogs   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PSItem"},
     {"title": "mi.rtl.Types.TTypes.PSmallInt", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PSmallInt"},
     {"title": "mi.rtl.Types.TTypes.PSmallWord", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PSmallWord"},
     {"title": "mi.rtl.Types.TTypes.PSmallWordArray", "text": "Word array pointer   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PSmallWordArray"},
     {"title": "mi.rtl.Types.TTypes.PtrUInt", "text": "https://www.freepascal.org/docs-html/rtl/system/ptruint.html   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PtrUInt"},
     {"title": "mi.rtl.Types.TTypes.Ptstring", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#Ptstring"},
     {"title": "mi.rtl.Types.TTypes.PWord", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PWord"},
     {"title": "mi.rtl.Types.TTypes.PWordArray", "text": "Word array pointer   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#PWordArray"},
     {"title": "mi.rtl.Types.TTypes.Real", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#Real"},
     {"title": "mi.rtl.Types.TTypes.SmallWord", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#SmallWord"},
     {"title": "mi.rtl.Types.TTypes.TAlign", "text": "    Align_Original    Align_Left    Align_Center    Align_Right    Fill_with_spaces   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TAlign"},
     {"title": "mi.rtl.Types.TTypes.TAlinhamento", "text": "    Alinhamento_Direita    Alinhamento_Central    Alinhamento_Esquerda    Alinhamento_Justificado   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TAlinhamento"},
     {"title": "mi.rtl.Types.TTypes.TAnsiCharArray", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TAnsiCharArray"},
     {"title": "mi.rtl.Types.TTypes.TAnsiCharSet", "text": "AnsiCharacter set   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TAnsiCharSet"},
     {"title": "mi.rtl.Types.TTypes.TArray", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArray"},
     {"title": "mi.rtl.Types.TTypes.TArrayAnsiChar", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayAnsiChar"},
     {"title": "mi.rtl.Types.TTypes.TArrayByte", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayByte"},
     {"title": "mi.rtl.Types.TTypes.TArrayInt", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayInt"},
     {"title": "mi.rtl.Types.TTypes.TArrayLong", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayLong"},
     {"title": "mi.rtl.Types.TTypes.TArrayOpenAnsiString", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayOpenAnsiString"},
     {"title": "mi.rtl.Types.TTypes.TArrayOpenByte", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayOpenByte"},
     {"title": "mi.rtl.Types.TTypes.TArrayOpenInteger", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayOpenInteger"},
     {"title": "mi.rtl.Types.TTypes.TArrayOpenLongint", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayOpenLongint"},
     {"title": "mi.rtl.Types.TTypes.TArrayOpenVariant", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayOpenVariant"},
     {"title": "mi.rtl.Types.TTypes.TArrayOpenWord", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayOpenWord"},
     {"title": "mi.rtl.Types.TTypes.TArrayPtr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArrayPtr"},
     {"title": "mi.rtl.Types.TTypes.TArray_Of_Char", "text": "O tipo TArray_Of_Char é uma tabela de equivalência de caractere sem acentos quando os mesmos tiverem acentos.   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TArray_Of_Char"},
     {"title": "mi.rtl.Types.TTypes.TCluster", "text": "O tipo TCluster é um tipo de campo bit, onde cada bit pode estar ligado e desligado, por isso o mesmo pode contar 16 opções diferente se as opções forem multuamente exclusivas e 65535 caso contrário.       NOTA      Este tipo de informação é representado em um formulário pelo controle TRadioButton. No meu ponto de vista não sei porque foi criado porque acaba gastando mais espaço do que representar essas informações em um byte se o campo fosse enumerado.   O tipo byte também pode resentar as mesmas informações usando o controle TListaBox.      EXEMPLO      SEXO      Masculino   Feminino   Indefinido      Estado Civil      Soulteiro   Casado   Divorciado   Amigado            ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TCluster"},
     {"title": "mi.rtl.Types.TTypes.TConnectorType", "text": "Tipos de banco de dados reconhecidos pela função CreateDB_or_DropDB    PostgresSQL    SqLite3   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TConnectorType"},
     {"title": "mi.rtl.Types.TTypes.TConvertIdioma", "text": "O tipo TConvertIdioma é usada para passar como parâmetro na conversão de idioma de listas de string.    ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TConvertIdioma"},
     {"title": "mi.rtl.Types.TTypes.TDriveType", "text": "     Tipo enumerado usado para identificar o tipo de dispositivo de leitura e gravação.       dt_Invalid    dt_Floppy    dt_Memory_Stream    dt_RamDisk    dt_CDRom    dt_PenDriver    dt_LAN    dt_HD    dt_SSd    dt_Unknown    dt_DRIVE_NO_ROOT_DIR   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TDriveType"},
     {"title": "mi.rtl.Types.TTypes.TEnumMemory", "text": "*    MemoryNull    MemoryReal    MemoryVirtual   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TEnumMemory"},
     {"title": "mi.rtl.Types.TTypes.TFileMode", "text": "     O Tipo TFileMode é usado para informar o modo de abertura do arquivo.       NOTA:      As constantes tipo TFileMode (exceto fmCreate ) podem ser combinados com operador OR para indicar os possíveis modos de abertura de arquivos.             fmmOpenRead    fmmOpenWrite    fmmOpenReadWrite    fmmShareCompat    fmmShareExclusive    fmmShareDenyWrite    fmmShareDenyRead    fmmShareDenyNone   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TFileMode"},
     {"title": "mi.rtl.Types.TTypes.THandle", "text": "     O tipo THandle é usado para padronizar o tipo usado nos handles de acesso a arquivos.      ", "tags": "", "url": "mi.rtl.Types.TTypes.html#THandle"},
     {"title": "mi.rtl.Types.TTypes.TipoProc", "text": "O tipo TipoProc é usado quando se precisa de procedures anônimas sem parâmetros    ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TipoProc"},
     {"title": "mi.rtl.Types.TTypes.TNao_Sim", "text": "    NS_Nao    NS_Sim   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TNao_Sim"},
     {"title": "mi.rtl.Types.TTypes.TParamExecucao_Tipo_de_Execucao", "text": "    TParamExecucao_Tipo_de_Execucao_Normal    TParamExecucao_Tipo_de_Execucao_Normal_Sem_Pedir_Senha    TParamExecucao_Tipo_de_Execucao_Normal_Exec_Command    TParamExecucao_Tipo_de_Execucao_VCL    TParamExecucao_Tipo_de_Execucao_CGI    TParamExecucao_Tipo_de_Execucao_ISAPI   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TParamExecucao_Tipo_de_Execucao"},
     {"title": "mi.rtl.Types.TTypes.TQuad", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TQuad"},
     {"title": "mi.rtl.Types.TTypes.TRealNum", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TRealNum"},
     {"title": "mi.rtl.Types.TTypes.TSemHandle", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TSemHandle"},
     {"title": "mi.rtl.Types.TTypes.TSizeOffldCluster", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TSizeOffldCluster"},
     {"title": "mi.rtl.Types.TTypes.TSmallWordArray", "text": "Word array   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TSmallWordArray"},
     {"title": "mi.rtl.Types.TTypes.tstring", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#tstring"},
     {"title": "mi.rtl.Types.TTypes.TWordArray", "text": "Word array   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#TWordArray"},
     {"title": "mi.rtl.Types.TTypes.ValUInt", "text": "https://www.freepascal.org/docs-html/rtl/system/valuint.html   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#ValUInt"},
     {"title": "mi.rtl.Types.TTypes.Word", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.html#Word"},
     {"title": "mi.rtl.Types.TTypes.LongRec", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.LongRec.html"},
     {"title": "mi.rtl.Types.TTypes.LongRec.Lo", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.LongRec.html#Lo"},
     {"title": "mi.rtl.Types.TTypes.LongRec.Hi", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.LongRec.html#Hi"},
     {"title": "mi.rtl.Types.TTypes.LongRec.L", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.LongRec.html#L"},
     {"title": "mi.rtl.Types.TTypes.TEvent", "text": "     O tipo TEvent é usado enviar mensagem para uma classe inserida em um grupo de classes.      ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html"},
     {"title": "mi.rtl.Types.TTypes.TEvent.What", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#What"},
     {"title": "mi.rtl.Types.TTypes.TEvent.Buttons", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#Buttons"},
     {"title": "mi.rtl.Types.TTypes.TEvent.Double", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#Double"},
     {"title": "mi.rtl.Types.TTypes.TEvent.Where", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#Where"},
     {"title": "mi.rtl.Types.TTypes.TEvent.KeyCode", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#KeyCode"},
     {"title": "mi.rtl.Types.TTypes.TEvent.ShiftState", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#ShiftState"},
     {"title": "mi.rtl.Types.TTypes.TEvent.AnsiCharCode", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#AnsiCharCode"},
     {"title": "mi.rtl.Types.TTypes.TEvent.ScanCode", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#ScanCode"},
     {"title": "mi.rtl.Types.TTypes.TEvent.StrModule", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#StrModule"},
     {"title": "mi.rtl.Types.TTypes.TEvent.StrCommand", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#StrCommand"},
     {"title": "mi.rtl.Types.TTypes.TEvent.Module", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#Module"},
     {"title": "mi.rtl.Types.TTypes.TEvent.Command", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#Command"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoPtr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoPtr"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoLong", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoLong"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoWord", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoWord"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoInt", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoInt"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoByte", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoByte"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoAnsiChar", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoAnsiChar"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoStr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoStr"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoArrayStr", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoArrayStr"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoStr255", "text": "Usada para acessar a tstring referenciada por InfoStr   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoStr255"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoArrayStr255", "text": "Usado para acessar a tstring referenciada por InfoStr   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoArrayStr255"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoArrayAnsiChar512", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoArrayAnsiChar512"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoArrayByte", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoArrayByte"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoArrayInteger", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoArrayInteger"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoArrayLongint", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoArrayLongint"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoArrayPointer", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoArrayPointer"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoArrayPAnsiChar", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoArrayPAnsiChar"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoMsgWin", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoMsgWin"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoPoint", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoPoint"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoWeb", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoWeb"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoComponent", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoComponent"},
     {"title": "mi.rtl.Types.TTypes.TEvent.InfoPEvent", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TEvent.html#InfoPEvent"},
     {"title": "mi.rtl.Types.TTypes.TIdentification", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TIdentification.html"},
     {"title": "mi.rtl.Types.TTypes.TIdentification.Id_branch", "text": "Número da filial do usuário logado   ", "tags": "", "url": "mi.rtl.Types.TTypes.TIdentification.html#Id_branch"},
     {"title": "mi.rtl.Types.TTypes.TIdentification.Id_user", "text": "Número do usuário Logado;   ", "tags": "", "url": "mi.rtl.Types.TTypes.TIdentification.html#Id_user"},
     {"title": "mi.rtl.Types.TTypes.TIdentification.UserName", "text": "Nome do usuário logado   ", "tags": "", "url": "mi.rtl.Types.TTypes.TIdentification.html#UserName"},
     {"title": "mi.rtl.Types.TTypes.TIdentification.FullUserName", "text": "Nome completo do usuario logado   ", "tags": "", "url": "mi.rtl.Types.TTypes.TIdentification.html#FullUserName"},
     {"title": "mi.rtl.Types.TTypes.TIdentification.password", "text": "Senha do usuario logado   ", "tags": "", "url": "mi.rtl.Types.TTypes.TIdentification.html#password"},
     {"title": "mi.rtl.Types.TTypes.TipoOfsSeg", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TipoOfsSeg.html"},
     {"title": "mi.rtl.Types.TTypes.TipoOfsSeg.Ofs", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TipoOfsSeg.html#Ofs"},
     {"title": "mi.rtl.Types.TTypes.TipoOfsSeg.Seg", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TipoOfsSeg.html#Seg"},
     {"title": "mi.rtl.Types.TTypes.TMsg", "text": "O tipo TMsg é usado para transmitir mensagem para o windows   ", "tags": "", "url": "mi.rtl.Types.TTypes.TMsg.html"},
     {"title": "mi.rtl.Types.TTypes.TMsg.hwnd", "text": "Handle da Janela do windows   ", "tags": "", "url": "mi.rtl.Types.TTypes.TMsg.html#hwnd"},
     {"title": "mi.rtl.Types.TTypes.TMsg.Message", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TMsg.html#Message"},
     {"title": "mi.rtl.Types.TTypes.TMsg.WParam", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TMsg.html#WParam"},
     {"title": "mi.rtl.Types.TTypes.TMsg.LParam", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TMsg.html#LParam"},
     {"title": "mi.rtl.Types.TTypes.TMsg.time", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TMsg.html#time"},
     {"title": "mi.rtl.Types.TTypes.TMsg.pt", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TMsg.html#pt"},
     {"title": "mi.rtl.Types.TTypes.TObjectList", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TObjectList.html"},
     {"title": "mi.rtl.Types.TTypes.TObjectList.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TObjectList.html#Destroy"},
     {"title": "mi.rtl.Types.TTypes.TPoint", "text": "O registro TPoint é usado para guardar as coordenadas da tela. Usado no turbo vision   ", "tags": "", "url": "mi.rtl.Types.TTypes.TPoint.html"},
     {"title": "mi.rtl.Types.TTypes.TPoint.X", "text": "O X salva a coordenada da linha   ", "tags": "", "url": "mi.rtl.Types.TTypes.TPoint.html#X"},
     {"title": "mi.rtl.Types.TTypes.TPoint.Y", "text": "O Y salva a coordenada da coluna   ", "tags": "", "url": "mi.rtl.Types.TTypes.TPoint.html#Y"},
     {"title": "mi.rtl.Types.TTypes.TPoint.SetX", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TPoint.html#SetX"},
     {"title": "mi.rtl.Types.TTypes.TPoint.SetY", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TPoint.html#SetY"},
     {"title": "mi.rtl.Types.TTypes.TPointer", "text": "     A classe TPointer é usada para alocar memória no heap.       NOTA      A função SysTVGetSrcBuf usa para ler a memória de vídeo do console.   O Método TTypes.TPointer.Get_Mem ignora alocação de memória real porque não sei como fazer nas plataformas diferentes do Windows.            ", "tags": "", "url": "mi.rtl.Types.TTypes.TPointer.html"},
     {"title": "mi.rtl.Types.TTypes.TPointer.FCreate", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TPointer.html#FCreate"},
     {"title": "mi.rtl.Types.TTypes.TPointer.FillByte", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TPointer.html#FillByte"},
     {"title": "mi.rtl.Types.TTypes.TPointer.Create", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TPointer.html#Create"},
     {"title": "mi.rtl.Types.TTypes.TPointer.Create", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TPointer.html#Create"},
     {"title": "mi.rtl.Types.TTypes.TPointer.Destroy", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TPointer.html#Destroy"},
     {"title": "mi.rtl.Types.TTypes.TPointer.Byte", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TPointer.html#Byte"},
     {"title": "mi.rtl.Types.TTypes.TPointer.Size", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TPointer.html#Size"},
     {"title": "mi.rtl.Types.TTypes.TPointer.Pointer", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TPointer.html#Pointer"},
     {"title": "mi.rtl.Types.TTypes.TPointer.Type_Memory", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TPointer.html#Type_Memory"},
     {"title": "mi.rtl.Types.TTypes.TRect", "text": "     TRect Class - RECTANGLE Class      ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html"},
     {"title": "mi.rtl.Types.TTypes.TRect.A", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#A"},
     {"title": "mi.rtl.Types.TTypes.TRect.B", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#B"},
     {"title": "mi.rtl.Types.TTypes.TRect.Empty", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#Empty"},
     {"title": "mi.rtl.Types.TTypes.TRect.Equals", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#Equals"},
     {"title": "mi.rtl.Types.TTypes.TRect.Contains", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#Contains"},
     {"title": "mi.rtl.Types.TTypes.TRect.Copy", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#Copy"},
     {"title": "mi.rtl.Types.TTypes.TRect.Union", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#Union"},
     {"title": "mi.rtl.Types.TTypes.TRect.Intersect", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#Intersect"},
     {"title": "mi.rtl.Types.TTypes.TRect.Move", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#Move"},
     {"title": "mi.rtl.Types.TTypes.TRect.Grow", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#Grow"},
     {"title": "mi.rtl.Types.TTypes.TRect.Assign", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#Assign"},
     {"title": "mi.rtl.Types.TTypes.TRect.SetLeft", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#SetLeft"},
     {"title": "mi.rtl.Types.TTypes.TRect.SetTop", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#SetTop"},
     {"title": "mi.rtl.Types.TTypes.TRect.SetWidth", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#SetWidth"},
     {"title": "mi.rtl.Types.TTypes.TRect.SetHeight", "text": "    ", "tags": "", "url": "mi.rtl.Types.TTypes.TRect.html#SetHeight"},
     {"title": "mi.rtl.Types.TTypes.TReg_Of_Char", "text": "O tipo TReg_Of_Char é usado para calcular os caracteres equivalentes sem acentos quando os mesmos tiverem acentos   ", "tags": "", "url": "mi.rtl.Types.TTypes.TReg_Of_Char.html"},
     {"title": "mi.rtl.Types.TTypes.TReg_Of_Char.Asc_Ingles", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TReg_Of_Char.html#Asc_Ingles"},
     {"title": "mi.rtl.Types.TTypes.TReg_Of_Char.Asc_GUI", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TReg_Of_Char.html#Asc_GUI"},
     {"title": "mi.rtl.Types.TTypes.TReg_Of_Char.Asc_HTML", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TReg_Of_Char.html#Asc_HTML"},
     {"title": "mi.rtl.Types.TTypes.TSItem", "text": "     Difine os tipos usados no Turbo Vision e não declarados em QDialogs      ", "tags": "", "url": "mi.rtl.Types.TTypes.TSItem.html"},
     {"title": "mi.rtl.Types.TTypes.TSItem.Value", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TSItem.html#Value"},
     {"title": "mi.rtl.Types.TTypes.TSItem.Next", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TSItem.html#Next"},
     {"title": "mi.rtl.Types.TTypes.TStr255", "text": "     O tipo TStr255 é usado para chamadas das API do windows      ", "tags": "", "url": "mi.rtl.Types.TTypes.TStr255.html"},
     {"title": "mi.rtl.Types.TTypes.TStr255.Str", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TStr255.html#Str"},
     {"title": "mi.rtl.Types.TTypes.TStr255.Str_Win", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TStr255.html#Str_Win"},
     {"title": "mi.rtl.Types.TTypes.TWebMsg", "text": "     Registro usado para enviar mensagem entre classes      ", "tags": "", "url": "mi.rtl.Types.TTypes.TWebMsg.html"},
     {"title": "mi.rtl.Types.TTypes.TWebMsg.WebModule", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.TWebMsg.html#WebModule"},
     {"title": "mi.rtl.Types.TTypes.TWebMsg.User_Name", "text": "| Cliente | Identificação do usuário   ", "tags": "", "url": "mi.rtl.Types.TTypes.TWebMsg.html#User_Name"},
     {"title": "mi.rtl.Types.TTypes.TWebMsg.Password", "text": "| Cliente | Senha de acesso   ", "tags": "", "url": "mi.rtl.Types.TTypes.TWebMsg.html#Password"},
     {"title": "mi.rtl.Types.TTypes.TWebMsg.Name_Module", "text": "| Cliente | Usado para identifica a DLL a que o evento deve ser enviado   ", "tags": "", "url": "mi.rtl.Types.TTypes.TWebMsg.html#Name_Module"},
     {"title": "mi.rtl.Types.TTypes.TWebMsg.Acao_actual", "text": "| Cliente | São métodos do objeto que a página pode executar:   ", "tags": "", "url": "mi.rtl.Types.TTypes.TWebMsg.html#Acao_actual"},
     {"title": "mi.rtl.Types.TTypes.TWebMsg.Acao_Old", "text": "| CGI | São métodos do objeto que a página executou na chamada anterior.   ", "tags": "", "url": "mi.rtl.Types.TTypes.TWebMsg.html#Acao_Old"},
     {"title": "mi.rtl.Types.TTypes.WordRec", "text": "*   ", "tags": "", "url": "mi.rtl.Types.TTypes.WordRec.html"},
     {"title": "mi.rtl.Types.TTypes.WordRec.Lo", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.WordRec.html#Lo"},
     {"title": "mi.rtl.Types.TTypes.WordRec.Hi", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.WordRec.html#Hi"},
     {"title": "mi.rtl.Types.TTypes.WordRec.SW", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.WordRec.html#SW"},
     {"title": "mi.rtl.Types.TTypes.WordRec.Ch", "text": "   ", "tags": "", "url": "mi.rtl.Types.TTypes.WordRec.html#Ch"},
     {"title": "mi.rtl.Types.TTypes.WordRec.Attr", "text": "Quando usado em telas   ", "tags": "", "url": "mi.rtl.Types.TTypes.WordRec.html#Attr"},
     {"title": "mi.rtl.Types.TTypes._TStr255", "text": "     O tipo _TStr255 é usado para acessar o tipo AnsiChar de 255 caracteres      ", "tags": "", "url": "mi.rtl.Types.TTypes._TStr255.html"},
     {"title": "mi.rtl.Types.TTypes._TStr255.Len", "text": "Número de caractere de str. Usado para compatibiliza com os tstrings da linguagem C   ", "tags": "", "url": "mi.rtl.Types.TTypes._TStr255.html#Len"},
     {"title": "mi.rtl.Types.TTypes._TStr255.ArrayAnsiChar", "text": "Array de 256 elementos.   ", "tags": "", "url": "mi.rtl.Types.TTypes._TStr255.html#ArrayAnsiChar"},
     {"title": "mi.rtl.ui", "text": "   ", "tags": "", "url": "mi.rtl.ui.html"},
     {"title": "mi.ui.dialogs", "text": "     A unit mi.ui.dialogs implementa a classe TDialogs do pacote mi.ui.       VERSÃO:      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.ui.Dialogs.pas      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco e-mail: paulosspacheco@yahoo.com.br      2021-12-02      23:00 a 23:35 - Criado a unit mi.ui.dialogs e implementação da classe TDialogs         2021-12-03      09:40 a 12:00      Criar método de classe Confirm();   Criar método de classe Prompt();   Criar método de classe Password();         2021-12-04      15:11 a 16:40      Criar exemplo TMi_Rtl_Tests.Test_tobjects_dlgs_Confirm;   Criar exemplo TMi_Rtl_Tests.Test_tobjects_dlgs_Prompt;   Criar exemplo TMi_Rtl_Tests.Test_tobjects_dlgs_password;                  ", "tags": "", "url": "mi.ui.dialogs.html"},
     {"title": "mi.ui.dialogs.TDialogs", "text": "   ", "tags": "", "url": "mi.ui.dialogs.TDialogs.html"},
     {"title": "mi.ui.dialogs.TDialogs.Create", "text": "    ", "tags": "", "url": "mi.ui.dialogs.TDialogs.html#Create"},
     {"title": "mi.ui.dialogs.TDialogs.CreateMessageDialog", "text": "     O método CreateMessageDialog mostra uma mensagem formatada onde a função reconhece &circ;M para passagem de linha, &circ;J retorno do carro e &circ;C.       NOTA      O texto entre &circ;C vai ficar alinhado no centro do topo do formulário.      EXEMPLO                ", "tags": "", "url": "mi.ui.dialogs.TDialogs.html#CreateMessageDialog"},
     {"title": "mi.ui.dialogs.TDialogs.Alert", "text": "     A procedure Alert executa um dialogo com botão OK       ", "tags": "", "url": "mi.ui.dialogs.TDialogs.html#Alert"},
     {"title": "mi.ui.dialogs.TDialogs.Confirm", "text": "     A procedure Confirm executa um diálogo com dois botões: OK e Cancel       RETORNA:      True : Se o botão OK foi pŕessionando;   False : Se o botão Cancel foi pŕessionando.      EXEMPLO      procedure TMi_Rtl_Tests.Test_tobjects_dlgs_Confirm; begin   with TObjectss.dlgs do     if Confirm('Test_tobjects_dlgs_Confirm','Continua o processamento?')     then Alert('Test_tobjects_dlgs_Confirm','Confirmado a ação!')     else Alert('Test_tobjects_dlgs_Confirm','Não confirmado a ação!'); end;            ", "tags": "", "url": "mi.ui.dialogs.TDialogs.html#Confirm"},
     {"title": "mi.ui.dialogs.TDialogs.Prompt", "text": "     A função Prompt mostra um dialogo com dois botões OK e Cancel e uma entrada de dados solicitando que o usuário digite um valor.       RETORNA:      True : Se o botão ok foi pŕessionando;   False : Se o botão cancel foi pŕessionando.   aResult : Retorna a string digitada no formulário;      EXEMPLO      procedure TMi_Rtl_Tests.Test_tobjects_dlgs_Prompt;   var idade,fmt : string; begin   idade := '';   with TObjectss.dlgs do     if Prompt('Test de Dlgs.Prompt','Qual a sua idade',idade)     then begin            fmt := format('Idade digitada: %s   '+&circ;M+                          'Idade de meu pai é %d ',[idade,102]);            Alert('Test de Dlgs.Prompt',fmt) //          end     else Alert('Test de Dlgs.Prompt','Ok. Respeito sua privacidade.'); end;            ", "tags": "", "url": "mi.ui.dialogs.TDialogs.html#Prompt"},
     {"title": "mi.ui.dialogs.TDialogs.GetPassword", "text": "     A função GetPassword mostra um diálogo para receber um valor sem mostrar o que foi digitado. O formulário possui dois botões OK e Cancel       RETORNA:      True : Se o botão ok foi pressionado;   False : Se o botão cancel foi pressionado.   apassword : Retorna a string com a senha do usuário.             ", "tags": "", "url": "mi.ui.dialogs.TDialogs.html#GetPassword"},
     {"title": "mi.ui.dialogs.TDialogs.GetPassword", "text": "     A função GetPassword mostra um dialogo solicitando o login do usuário e a senha e dois botões OK e Cancel       RETORNA:      True : Se o botão ok foi pŕessionando;   False : Se o botão cancel foi pŕessionando.   aUsername : Retorna a string com nome do usuário.   apassword : Retorna a string com a senha do usuário.      EXEMPLO      procedure TMi_Rtl_Tests.Test_tobjects_dlgs_password;   Var     s,u : string; begin   s := '';   with TObjectss.dlgs do     if GetPassword('Password',u,s)     then Alert('Password','A senha digitada é: '+S)     else Alert('Password','Senha não informada');  end;            ", "tags": "", "url": "mi.ui.dialogs.TDialogs.html#GetPassword"},
     {"title": "mi.ui.dialogs._Dialogs", "text": "   ", "tags": "", "url": "mi.ui.dialogs.html#_Dialogs"},
     {"title": "mi.ui.lcl", "text": "   ", "tags": "", "url": "mi.ui.lcl.html"},
     {"title": "mi.ui.lcl.form", "text": "   ", "tags": "", "url": "mi.ui.lcl.form.html"},
     {"title": "mi_rtl_ui_custom_application", "text": "A unit mi_rtl_ui_custom_application implementa a classe TMI_ui_Custom_Application.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi_ui_Custom_Application.pas      PENDÊNCIAS   REFERÊNCIA      [PostgresSql MULTIBYTE-CHARSET-SUPPORTED](https://www.postgresql.org/docs/current/multibyte.html#MULTIBYTE-CHARSET-SUPPORTED)   [Documento oficial do componente sqldb](https://www.freepascal.org/docs-html/fcl/sqldb/index.html)   [Exemplos de uso do SqlDb](https://www.freepascal.org/docs-html/fcl/sqldb/usingsqldb.html)   [SqlDBHowto](https://wiki.freepascal.org/SqlDBHowto)   [tsqlquery.insertsql](https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.insertsql.html)      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br)      2022-03-29 16:06      Criar a unit mi_rtl_ui_custom_application e analisar o que preciso fazer para integrar com a unit mi_ui_Dmxscroller_sql ✅      2022-04-06 15:40      Implementar o evento Get_ParametersCloseQuery e salvar o formulário quando ele for executado. ✅   No evento Get_ParametersCloseQuery Checar se o usuário é válido. ✅   Criar método DoOnValidUser ✅   Criar método Get_ParametersCloseQuery para executar o evento DoOnValidUser. ✅      2022-04-07 08:43      Cada banco de dados SQL tem alguns parâmetros básicos para sua conexão:      Criar as propriedades de TMI_ui_Custom_Application para que o usuário informe esses parâmetros:      Banco de dados PostgresSQL      CharSet = 'UTF8'; ✅   ConnectorType:='PostgreSQL'; ✅   HostName := '127.0.0.1'; ✅   UserName := 'postgres'; ✅   Password := 'masterkey'; ✅   DatabaseName:= 'maricarai'; ✅   DirDatabaseName:= './'; ✅      connected :Boolean ✅   Options : TSQLConnectorOptions ✅      Documentar as propriedade criadas hoje ✅.         2022-04-08      09:00      Escrever a descrição da classe TMI_ui_Custom_Application. ✅      11:18      Alterar o nome da propriedade Options para SQLConnectorOptions. ✅   Criar a propriedade SQLTransactionOptions ✅      14:22      Documentar as propriedades da classe TMi_ui_Custom_Application. ✅      21:40      Em TMI_ui_Custom_Application.Get_ParametersCloseQuery antes de checar se os parãmetros são válidos, transferir os campos do formulários para as propriedades equivalentes.         2022-04-14 14:58      Criar a constante OkCreateDataBase e o método CreateDataBase. ✅      2022-04-15 10:00      Criar método NameDataBase que retorna o nome do database porque o nome do dataBase é diferente em cada banco de dados. O postres usa um nome simples e o ip para acessar o banco, o SqLite3 usa o nome da pasta + nome do database + ext. ✅               ", "tags": "", "url": "mi_rtl_ui_custom_application.html"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application", "text": "A classe TMI_ui_Custom_Application concentra as propriedades e formulários gerais necessários em qualquer aplicação.       Recursos globais:      Propriedade Get_Parameters cria um formulário de entrada de dados de configuração de acesso ao banco de dados e outros parâmetros;   Propriedade SQLConnector e SQLTransaction e as propriedades relacionadas;   O evento OnValidUser é usado para validar o nome do usuário e senha.         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.BufDataSet1", "text": "O atributo BufDataSet1 é usado para salvar em disco local no arquivo FileName_Parameters os parâmetros informados pelo formulário Get_Parameters   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#BufDataSet1"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.DataSource1", "text": "O atributo DataSource1 permite integrar os dados da classe TMiDmxScroller com os componentes da LCL com DbGrid, DbEdit etc...   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#DataSource1"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.OkCreateDataBase", "text": "A constante OkCreateDataBase se true executa o método CreateDataBase se ExisteCreateDataBase = false   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#OkCreateDataBase"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Const_ConnectorType", "text": "A constante Const_ConnectorType contém a lista de nomes dos tipo de bancos de dados testados pelo componente TMI_ui_Custom_Application   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Const_ConnectorType"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.FileName_Parameters", "text": "A constante FileName_Parameters contém o nome do arquivo de parâmetros      A constante FileName_Parameters é inicializado em TMI_ui_Custom_Application.create onde:      FileName_Parameters := ParamStr(0)+'_Parameters.bds';         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#FileName_Parameters"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application._Get_Parameters", "text": "Este atributo é usado pelas classes filhas para implementar classes herdadas de TUiDmxScroller.       No momento (08/04/22 a classe que herdade é: TUiDmxScroller_form)      ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#_Get_Parameters"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.ExistDataBase", "text": "O Método ExistDataBase retorna true se o banco de dados existe e false se não existir.    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#ExistDataBase"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.CreateDataBase", "text": "O método CreateDataBase cria o banco de dados se a constante OkCreateDataBase = true    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#CreateDataBase"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Get_ParametersEnter", "text": "O método Get_ParametersEnter é usado pela classe Get_Parameters.      Esse evento cria o arquivo de parâmetros usando os dados das propriedades de TMI_ui_Custom_Application definidas no tempo de projeto.       ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Get_ParametersEnter"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Get_ParametersExit", "text": "    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Get_ParametersExit"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Get_ParametersCloseQuery", "text": "O método Get_ParametersCloseQuery é usado para confirmar o fechamento do formulário Get_Parameters com botão MrOK caso os campos de Get_Parameters sejam válidos.       NOTA      Método Get_ParametersCloseQuery executa o evento DoOnValidUser, se o mesmo for assinalado na aplicação com objetivo de não permitir fechar o formulário modal com botão MrOK caso  DoOnValidUser retornar false.   Pode ser usado para checar se usuário e senha são válidos bem como se os parâmetros estão compatíveis com os bancos de dados instalados.          ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Get_ParametersCloseQuery"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Login_GetTemplate", "text": "O método Login_GetTemplate retorna um Template usado para criar o formulário de entrada de dados para a conexão.    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Login_GetTemplate"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.NameDataBase", "text": "O método NameDataBase retorna o nome do banco de dados de acordo com o tipo de banco de dados.    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#NameDataBase"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.DoOnValidUser", "text": "O método DoOnValidUser executa o evento onValidUser se o mesmo for assinalado na aplicação ou retorna true se onValidUser = nil    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#DoOnValidUser"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Create_Get_Parameters", "text": "O método Create_Get_Parameters deve ser implementado para criar classe TUiDmxScroller_form_lcl ou TUiDmxScroller_form_HTML_Angular4.    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Create_Get_Parameters"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Create", "text": "O constructor Create cria os componentes SQLConnector, SQLTransaction, BufDataSet1, DataSource1, Inicia a constante FileName_Parameters, executa o método Create_Get_Parameters, inicializa charSet e liga os componentes SQLConnector com SQLTransaction e os componentes DataSource1.DataSet := BufDataset1.    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Create"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Destroy", "text": "O destructor Destroy destrói as classes criadas pelo constructor da classe    ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Destroy"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.SQLConnectorOptions", "text": "A propriedade SQLConnectorOptions é usada para controlar o comportamento do SqlDb para esta conexão.       As seguintes opções podem ser definidas:      Type TSQLConnectionOption = (scoExplicitConnect, scoApplyUpdatesChecksRowsAffected);   ONDE:      scoExplicitConnect :      Quando definido, a conexão deve ser feita explicitamente.   O comportamento padrão é para TSQLQuery abrir implicitamente a conexão conforme necessário.      scoApplyUpdatesChecksRowsAffected :      Quando definido, sempre que uma instrução SQL de atualização é executada durante ApplyOptions de um conjunto de dados, RowsAffected é verificado e deve ser igual a 1.            REFERÊNCIAS      [tsqltransaction.options](https://www.freepascal.org/docs-html/fcl/sqldb/tsqltransaction.options.html)         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#SQLConnectorOptions"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.SQLTransactionOptions", "text": "A propriedade SQLTransactionOptions é usada para controlar o comportamento do SqlDb para esta transação.       As seguintes opções podem ser definidas:      Type TSQLTransactionOption = (stoUseImplicit, stoExplicitStart);   ONDE:      stoUseImplicit :      Use o suporte a transações implícitas do mecanismo de banco de dados. Isso significa que nenhum comando explícito de início e parada de transação será enviado ao servidor quando os métodos Commit ou Rollback forem chamados (tornando-os efetivamente sem operação no nível do banco de dados).      stoExplicitStart      Quando definido, sempre que uma instrução SQL é executada, a transação deve ter sido iniciada explicitamente. O comportamento padrão é que TSQLStatement ou TSQLQuery iniciem a transação conforme necessário.            REFERÊNCIAS      [tsqltransaction.options](https://www.freepascal.org/docs-html/fcl/sqldb/tsqltransaction.options.html)         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#SQLTransactionOptions"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Connected", "text": "A propriedade Connected conecta ao banco de dados selecionado.       True = Conecta ao banco;   False = Desconecta do banco;      ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Connected"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.ConnectorType", "text": "O evento ConnectorType seleciona o tipo de banco de dados a ser conectado   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#ConnectorType"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.HostName", "text": "A propriedade HostName informa ao SQLConnector o IP ou domínimo onde o banco de dados foi hospedado.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#HostName"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.DirDataBaseName", "text": "A propriedade DirDataBaseName contém a pasta do HD do servidor onde o banco de banco foi hospedado.       Não foi implementado ainda      Preciso de mais informações de como alterar a pasta dos bancos de dados PostgreSQL e SQLite3.         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#DirDataBaseName"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.DatabaseName", "text": "A propriedade DatabaseName contém o nome do Banco de Dados dentro do PostegresSQL ou do SQLite3.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#DatabaseName"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.UserName", "text": "A propriedade UserName contém o nome do usuário conectado ao banco de dados.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#UserName"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Password", "text": "A propriedade Password contém a senha do usuário conectado ao banco de dados.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Password"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.CharSet", "text": "A propriedade CharSet é usada para definir o tipo de caractere do banco de dados.       NOTA      Deve ser informado em tempo de designe do projeto.      REFERÊNCIAS      [CHARSET-TABLE](https://www.postgresql.org/docs/current/multibyte.html#CHARSET-TABLE)         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#CharSet"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.onValidUser", "text": "O evento onValidUser é disparado toda vez que o TUiDmxScroller ativado.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#onValidUser"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.SQLConnector", "text": "A propriedade SQLConnector é um componente conector de banco de dados versátil para uso com qualquer banco de dados suportado.       A incluir uma aplicação TMi_UI_Application na aplicação corrente automáticamente é disponibilizado um conector de acesso o banco de dados.   REFERÊNCIAS      [TSQLConnector](https://wiki.freepascal.org/TSQLConnector)   [sqldb/tsqlconnector](https://www.freepascal.org/docs-html/fcl/sqldb/tsqlconnector.html)         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#SQLConnector"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.SQLTransaction", "text": "A propriedade SQLTransaction representa uma transação no banco de dados na qual um TSQLQuery é tratado.       Na prática, pelo menos uma transação precisa estar ativa para um banco de dados, mesmo que você a utilize apenas para leitura de dados.   NOTAS      Ao usar uma única transação, defina a propriedade TConnection. Transaction para a transação para definir a transação padrão para o banco de dados; a propriedade TSQLTransaction.Database correspondente deve apontar automaticamente para a conexão.   Ao ativar uma TSQLTransaction o método StartTransaction inicia uma transação; chamar o método Commit ou o método RollBack confirma (salva) ou reverte (esquece/aborta) a transação.      Você deve cercar suas transações de banco de dados com eles, a menos que use as propriedades Autocommit ou CommitRetaining.         REFERÊNCIAS      [tsqltransaction](https://www.freepascal.org/docs-html/fcl/sqldb/tsqltransaction.html)         ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#SQLTransaction"},
     {"title": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.Get_Parameters", "text": "A propriedade Get_Parameters contém o formulário para ler os parâmetros de conexão com o banco de dados.   ", "tags": "", "url": "mi_rtl_ui_custom_application.TMI_ui_Custom_Application.html#Get_Parameters"},
     {"title": "mi_rtl_ui_custom_application.Mi_ui_Custom_Application", "text": "A função Mi_ui_Custom_Application retorna a ultima instância de TMI_ui_Custom_Application criada no sistema    ", "tags": "", "url": "mi_rtl_ui_custom_application.html#Mi_ui_Custom_Application"},
     {"title": "mi_rtl_ui_custom_application.Set_Mi_ui_Custom_Application", "text": "A função Set_Mi_ui_Custom_Application seta a ultima instância de TMI_ui_Custom_Application criada no sistema e retorna aplicação selecionada anteriormente.    ", "tags": "", "url": "mi_rtl_ui_custom_application.html#Set_Mi_ui_Custom_Application"},
     {"title": "mi_rtl_ui_custom_application.TOnValidUser", "text": "O tipo TOnValidUser é usado no evento OnValidUser    ", "tags": "", "url": "mi_rtl_ui_custom_application.html#TOnValidUser"},
     {"title": "mi_rtl_ui_Dmxscroller", "text": "A unit mi_rtl_ui_Dmxscroller implementa a classe TUiDmxScroller e registro TDmxFieldRec.       VERSÃO      Alpha - 0.5.0.693      HISTÓRICO      ./mi_rtl_ui_dmxscroller_historico.md       CÓDIGO FONTE:      mi_rtl_ui_DmxScroller.pas   PENDÊNCIAS      T12 Quando uma linha em um label tem muitos caracteres de 2 bytes os últimos não são interpretados.   T12 Implementar o campo FldLink. (Esse campo executa um ação usando controle TStaticText.   T12 O controle TComboBox da LCL alterar o tamanho da fonte courie New caso o tema do sistema mude.      Pesquisar sobre o assunto.      T12 No método SetString em caso de erro de gera exceção informando valor máximo do campo e não o valor digitado.   T12 Implementar o evento OnChange em todos os controles, visto que o mesmo é mais fácil criar lógica de negócios visto que o mesmo só é executado se o campo for modificado.   T12 Implementar a possibilidade das fontes do label ser personalizada baseado em um estilo que pode ser uma variável global.       Suponha que &circ;Z = &lt;h1&gt; Título e &circ;D = &lt;B&gt; de negrito então o sistema informa a TDmxFieldRec.Style = nome do estilo onde nome do estilo = 'Font = FonteX; Size= XX; etc.. '       Exemplo:    &tilde;&circ;ZCADASTRO DE ALUNOS&tilde;  &tilde;&circ;DÑome do Aluno:&tilde;\\ssssssssss           T12 Na construção do formulário LCL setar o campo PDmxFieldRec.LinkEdit;   T12 Implementar o método: function FieldByNum(aFieldnum:Integer):PDmxFieldRec;   T12 Implementar a edição FldBoolean.      Os campo Boolean deve ser editados como uma campo enumerado onde:      0 - False; não   1 = True; sim         T12 O campo fld_LHora não inicializado antes de compactar a hora.   T12 Quando o usuário teclar tab para passar o campo e o campo seguinte não estiver visível o sistema deve passar a página do controle parent.   T12 Implementar a edição de campo FldMemo.   T!2 Implementar a campo fldBLOb;   t12 Implementar a edição de fldHexValue.      O campo Hexadecimal deve ser campo longint mais a edição é uma string comum . FldStr      T12 Implementar a propriedade AlignmentLabels := taCenter; AlignmentLabels := taLeftJustify; AlignmentLabels := taRightJustify ;   T12 Implementar a execução do evento do tipo CharExecProc quando a tecla F7 é pressionada.   T12 Criar opção para gerar cliente HTML a partir de TDmxScroller      Referência: [Componente que espoe dados para o browser](https://wiki.freepascal.org/SqlDbRestBridge#Purpose)      T12 O grupo TMi_RadioGroup_Lcl não é selecionado com a tecla na tecla TAB      Quando os botões TRadioButton estão dentro do TRadioGroup a propriedade TRadioGroup.TabStop não funciona.      T12 Nosso código só é executado com o editor de propriedade. Se não estamos no editor de propriedade então não temos controle do código no modo design. Qual o meu problema: O formulário deve ser criado em tempo de execução, porém eu queria ver como ele estava ficando sem precisar compilar e executar o código, por isso coloquei o código em um stringList e ao ativar o objeto, o formulário é criado. Porém esses objetos criados no designer não podem ficar no arquivo de recursos porque quando for executado vai haver duplicidade.      Quando eu desativo o objetos todos os objetos que ele criou são excluídos do arquivo de recursos.   Isso eu já faço agora, mais quando distribuir o componente as pessoas vão deixar esses componente usado no teste e ao executar vai haver error.   Por isso eu queria que caso a propriedade active tivesse em true eu queria que ela ficasse em false.            CONCLUÍDO      T12 O campo FldCheckBox não está funcionando o flag charHint ✅️.   T12 Implementar o controle ChatHint no Template para seja possível passar um documento markdown pelo Template; ✅️.   T12 Ao executar o evento OnExit é necessário o redraw em de todos os campo caso haja alteração ao retorna da chamada. ✅️.   T12 O componente TMi_ui_Button_lcl não está na lista dos campos selecionados na tecla tab. ✅   T12 Os campos FldEnum não estão mostrando o help. ✅   T12 Criar a propriedade Locked; ✅         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup", "text": "A classe TFldEnum_Lookup é usada para implementar campo ComboBox quando TDmxScroller estiver TDataSource &lt;&gt; nil porque o Lazarus espera em campos ComboBox um string e não o índice da lista de strings.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.BufDataSet", "text": "O atributo BufDataSet contém o arquivo em memória das opções do campo ComboBox sendo editado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#BufDataSet"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.DataSource", "text": "O atributo DataSource é a fonte de dados associado a TFldEnum_Lookup.BufDataSet do campo sendo editado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#DataSource"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.KeyField", "text": "O atributo KeyField contém o nome do campo chave da tabela associada.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#KeyField"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.ListField", "text": "O atributo ListField contém o nome do campo da tabela associada a ser visualizado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#ListField"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.create", "text": "O constructor create cria os campos TBufDataSet e TDataSource do campo TFldEnum_Lookup    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#create"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.destroy", "text": "O destructor destroy destrói os campos TBufDataSet e TDataSource do campo TFldEnum_Lookup    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#destroy"},
     {"title": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.DmxFieldRec", "text": "A propriedade DmxFieldRec contém o campo comboBox se ser editado   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TFldEnum_Lookup.html#DmxFieldRec"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec", "text": "O registro TDmxFieldRec é usado para guardar as informações passadas pelos Templates das strings.       REFERÊNCIA      [Estrutura record e object]https://wiki.freepascal.org/Record      A aparência padrão dessas visualizações geralmente é orientada por coluna/linha, com exceção de exibições do tipo formulário e campos únicos.   Você declara uma estrutura de registro para o procedimento de inicialização do tvDMX em um modelo string – que também determina o formato de exibição. (Você verá mais tarde como o tvDMX pode ser usado para trabalhar com formulários ou editores de campo.)   EXEMPLO       O Template '\\ sssssssss`sssssssssss \\ iiii \\ rrr.rr' representa o registro:      CÓDIGO PASCAL      type    TRecord = Record               nome : String [20];               Ano  : Integer;               Valor : Real;             end;     NOTA:      A letra ( s ) minúsculo aceita qualquer número e letras maiúsculas e minúsculas;   A letra ( i ) representa um número inteiro com 2 bytes com edição em 4 posições (0 a 9999);   A letra ( r ) representa um número real com 8 bytes com edição em 5 posições (0 a 999.99)   O símbolo ( ` ) crase é usado para informar que a parte do texto depois deste sinal deve ser omitida da visão.   A símbolo ( ' \\ ' ) barra invertida deve ser usada como delimitador de campo e é exibida como um espaço em branco.   O símbolo ( &tilde; ) til deve ser usado para separar rótulos dos campos de dados.            ATENÇÃO      O registro TDmxFieldRec não pode ser class e nem conter métodos virtuais, porque este registro e alocado com as funções new e dispose.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.LinkEdit", "text": "Componente corrente que está editando esse campo.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#LinkEdit"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Alias", "text": "O campo Alias é usado para associar label ao corrente campo.       NOTA      Esse campo foi necessário para implementar campos do tipo boolean [X] por que o mesmo sempre vem associado a um rótulos amigável e o controle checkbox precisa dele.      EXEMPLO      Template de um botão checkbox:      Resourcestring   tmp_Aceita = '\\X Aceita o contrato +ChFN+'Aceita_contrato'+CharHint+'Aceita os termos do contrato?           ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Alias"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Template_org", "text": "O campo Template_org guarda o modelo original do Template e deve ser inicializado em CreateStruct   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Template_org"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Next", "text": "Próximo campo   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Next"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.RSelf", "text": "Usado para referenciar-se a si mesmo.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#RSelf"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Prev", "text": "Campo anterior   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Prev"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.access", "text": "read-only, hidden, skip, accSpecX   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#access"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Fieldnum", "text": "Número do campo, varia de 1 a totalFields (Se zero (0) é porque trata-se um rótulos)   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Fieldnum"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ScreenTab", "text": "Override column num.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ScreenTab"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ColumnWid", "text": "width of Field column   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ColumnWid"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ShownWid", "text": "visible width of column   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ShownWid"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.TypeCode", "text": "'s', 'r', etc.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#TypeCode"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FldEnum_Lookup", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FldEnum_Lookup"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FillValue", "text": "If the Field is numeric, fill in with '#0' if it's alphanumeric, fill in with ' '   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FillValue"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.UpperLimit", "text": "maximum value limit   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#UpperLimit"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ShowZeroes", "text": "display zero values   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ShowZeroes"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.TrueLen", "text": "unformatted text length   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#TrueLen"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Parenthesis", "text": "'('/')' AnsiCharacters   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Parenthesis"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Decimals", "text": "decimal point or cluster value   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Decimals"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FieldSize", "text": "sizeof (datatype)   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FieldSize"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.DataTab", "text": "position in record   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#DataTab"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Template", "text": "Field Template   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Template"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ListComboBox", "text": "O atributo ListComboBox contém uma lista de opções possíveis para o campo.       Nota:      Após caractere CharListComboBox contém um ponteiro para uma lista de opções do mesmo tipo de campo.      Exemplo:     Const    '&tilde;Dia de vencimento:&tilde;\\Ssssss'+ChFN+'Dia'+CreateOptions(accNormal, 1,       NewSItem('Dia 10',       NewSItem('Dia 15',       NewSItem('Dia 20',       NewSItem('Dia 25',                nil)))));              ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ListComboBox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ListComboBox_Default", "text": "O Atributo ListComboBox_Default* é usado guardar o valor padrão para a lista do BomboBox ou LookupBox       Exemplo para selecionar &quot;Dia 20&quot; da lista.      O número 2 representa o terceiro item da lista.        Const        '&tilde;Vencimento:&tilde;\\Ssssss'+ChFN+'Dia'+CreateOptions(accNormal, 2,           NewSItem('Dia 10',           NewSItem('Dia 15',           NewSItem('Dia 20',           NewSItem('Dia 25',                    nil)))));           ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ListComboBox_Default"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ExecAction", "text": "O campo ExecAction é inicializado no interpretador de Template quando o caractere CharExecAction é encontrado.       EXEMPLO DE USO DE AÇÕES NO TEMPLATE      Se o atributo Fieldnum do campo for diferente de zero, então o rótulo do botão associado a ação será o caracteres 🔍 e a ação pode atualizar o buffer do campo.      No exemplo a seguir a função CreateExecAction retorna a string chFN+aFieldName+'&tilde; 🔍&tilde;'+ChEA+(aFieldName+'.'+aExecAction).   O interpretador de Template atualiza a string LinkExecAction caso o o ponto seja encontrado no ExecAction do Label.      Result := NewSItem('&tilde;Cliente:&tilde;'+'\\LLLLL'+CreateExecAction('Cliente',Pesquisa.Name),nil);        Se o atributo Fieldnum do campo for igual a zero, então a rótulo do botão será o rótulo do campo.      No exemplo a seguir um rótulo de novo cliente (icons 🆕) e um botão ok (icons 🆗)      NewSItem('&tilde; 🆕 &amp;Novo cliente:&tilde;'+CharExecAction+Action_Novo.name+          '&tilde;   &tilde;&tilde; 🆗 &tilde;'+CharExecAction+Action_Ok.name)              ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ExecAction"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.LinkExecAction", "text": "O atributo LinkExecAction é atualizado com o ponteiro do campo passado por execAction.       O Interpretador de Template deve pegar o campo usando a função FieldByName(aFieldName passado em execAction), quando execAction tiver um ponto antes do nome da ação.      Ex: (aFieldName.aExecAction).           Result := NewSItem('&tilde;Cliente:&tilde;'+'\\LLLLL'+CreateExecAction('Cliente',Pesquisa.Name),nil);     ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#LinkExecAction"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.CharShowPassword", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#CharShowPassword"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec._DateMask", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#_DateMask"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec._HourMask", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#_HourMask"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.QuitFieldAltomatic", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#QuitFieldAltomatic"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.CurPos", "text": "Posição do curso quando este campo estiver sendo editado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#CurPos"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SelStart", "text": "Posição do início da seleção quando este campo estiver sendo editado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SelStart"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SelEnd", "text": "Posição do fim da seleção quando este campo estiver sendo editado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SelEnd"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec._FieldAltered", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#_FieldAltered"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.HelpCtx_Hint", "text": "O campo HelpCtx_Hint contém a documentação resumida do registro.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#HelpCtx_Hint"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.HelpCtx_Porque", "text": "Por que preciso deste campo?   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#HelpCtx_Porque"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.HelpCtx_Onde", "text": "Onde esse campo será usado?   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#HelpCtx_Onde"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec._OkSpcAnt", "text": "Salva o valor de _OkSpc antes de setar com aOkSpc   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#_OkSpcAnt"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ProviderFlags", "text": "O atributo ProviderFlags é usado nos métodos TUiDmxScroller_sql.CreateTables e TUiDmxScroller_sql.CreateBufDataset_FieldDefs para integração do componente TDmxScroller com o componente TSqlDbConnector.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ProviderFlags"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ForeignKey", "text": "O atributo ForeignKey é usado para criar chave estrangeira e os relacionamentos   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ForeignKey"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.KeyForeign", "text": "O atributo KeyForeign contém uma string com o nome da tabela estrangeira e a lista de campos relacionados       EXEMPLO      CIDADES,ESTADO;CIDADE      CIDADES = tabela estrangeira   ESTADO = Estado da cidade.   CIDADE = Cidade do estado.            ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#KeyForeign"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.StrNumberValid", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#StrNumberValid"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetAsStringFromBuffer", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetAsStringFromBuffer"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetAsString", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetAsString"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetAsString", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetAsString"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsInputText", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsInputText"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SItemsLen", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SItemsLen"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.MaxItemStrLen", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#MaxItemStrLen"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetMaxLength", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetMaxLength"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsStaticText", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsStaticText"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsInputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsInputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsInputDbRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsInputDbRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsInputCheckbox", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsInputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.isInputPassword", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#isInputPassword"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsInputHidden", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsInputHidden"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsSelect", "text": "O objeto filho que implementar um ISelect deve anular e retornar a interface ISelect;    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsSelect"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsComboBox", "text": "Usado quando trata-se de campos enumerados.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsComboBox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FirstField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FirstField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.LastField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#LastField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.NextField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#NextField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.PrevField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#PrevField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SelectFirstField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SelectFirstField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SelectLastField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SelectLastField"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Select", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetCount_Cluster", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetCount_Cluster"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetValue_Cluster", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetValue_Cluster"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetValue_Cluster", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetValue_Cluster"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetChecked_Cluster", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetChecked_Cluster"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetChecked_Cluster", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetChecked_Cluster"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetCount_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetCount_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetValue_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetValue_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetValue_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetValue_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetChecked_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetChecked_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetChecked_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetChecked_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.get_Item_Focused_InputRadio", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#get_Item_Focused_InputRadio"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetCount_InputCheckbox", "text": "Construção da propriedade Count      Objetivo: Retorna o numero de items da lista onde os itens devem ser acessados com index 0 a count-1       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetCount_InputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetValue_InputCheckbox", "text": "Construção da propriedade Value       Objetivo: Ler o label associado a opção ou trocar seu valor.   Sintaxe: Setando = Value[1] = 'Sim'; Value[2] = 'Nao'; Value[1] = 'Yes' Lendo = If LowerCase(Value[1]) = 'SIM' Then;       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetValue_InputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetValue_InputCheckbox", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetValue_InputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetChecked_InputCheckbox", "text": "Construção da propriedade Checked - Sintaxe: 1 = If Checked[1] then; 2 = Checked[1] := True.       Objetivo: Selecionar um item da lista de opções ou checar se a opção está selecionada       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetChecked_InputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetChecked_InputCheckbox", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetChecked_InputCheckbox"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetCount_Select", "text": "Construção da propriedade Count de campos enumerados      Objetivo: Retorna o numero de items da lista onde os itens devem ser acessados com index 0 a count-1       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetCount_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetSize_Select", "text": "Número de Linhas a ser mostrada no box. Usado em campos enumerados.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetSize_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetValue_Select", "text": "Construção da propriedade Value      Objetivo: Ler o label associado a opção ou trocar seu valor.   Sintaxe: Setando = Value[1] = 'Sim'; Value[2] = 'Nao'; Value[1] = 'Yes' Lendo = If LowerCase(Value[1]) = 'SIM' Then;       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetValue_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetValue_Select", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetValue_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetChecked_Select", "text": "Construção da propriedade Checked - Sintaxe: 1 = If Checked[1] then; 2 = Checked[1] := True.       Objetivo: Selecionar um item da lista de opções ou checar se a opção está selecionada       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetChecked_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetChecked_Select", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetChecked_Select"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsNumber", "text": "O método IsNumber retorna true se o campo é numérico e false se alfanumérico    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsNumber"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsNumberReal", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsNumberReal"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsNumberInteger", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsNumberInteger"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsData", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsData"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.IsHora", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#IsHora"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetLeft", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetLeft"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetTop", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetTop"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetWidth", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetWidth"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.GetHeight", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#GetHeight"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.SetAccess", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#SetAccess"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Valid", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Valid"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.DoOnEnter", "text": "O método DoOnEnter é executado toda vez antes do controle ler do buffer do campo.      Se o TUiDmxScroller.OnEnterField tiver assinalado o método DoOnEnter o executa.       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#DoOnEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.DoOnExit", "text": "O método DoOnExit é executado toda vez antes do controle gravar no buffer do campo.      Se o TUiDmxScroller.OnExitField tiver assinalado o método DoOnExit o executa.       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#DoOnExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FieldName", "text": "O campo FieldName guarda o nome do campo e deve ser inicializado em CreateStruct   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FieldName"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.ID_Dynamic", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#ID_Dynamic"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.owner", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#owner"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FieldAltered", "text": "A propriedade FieldAltered Indica que o campo foi alterado. Deve ser atualizado na visão caso a tabela esteja em modo de edição.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FieldAltered"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.OkSpc", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#OkSpc"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.OkMask", "text": "O método OkMask é usado para habilitar ou não em GetString a mascara em campos numéricos.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#OkMask"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.AsString", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#AsString"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.Value", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#Value"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FldOrigin_Y", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FldOrigin_Y"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.FldOrigin", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#FldOrigin"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.vidis_OnEnter", "text": "A propriedade vidis_OnEnter usado para evitar reentrância do evento DoOnEnter()   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#vidis_OnEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.vidis_OnExit", "text": "A propriedade vidis_OnExit é usado para evitar reentrância do evento DoOnExit()   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TDmxFieldRec.html#vidis_OnExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller", "text": "A classe TUiDmxScroller tem como objetivo criar um formulário baseado em uma lista do tipo ShortString.       NOTAS      O método createStruct criar uma lista de campo tipo TDmxFieldRec com todas as informações necessárias para criar uma tabela ou um formulário.   O formulário é criado com apena uma linha.      EXEMPLO:      Template := '&tilde;Nome&tilde;\\SSSSSSSSSSSSSSSSSSSS &tilde;Idade:&tilde;\\BB'      A classe cria a lista de campos:      Label1: Nome   Field1: campo ShortString com 20 posições maiúsculas   Label2: Idade   Field2: Campo byte com duas posições               ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Fields", "text": "O atributo Fields contém uma lista pDmxFieldRec cujo Fieldnum&lt;&gt;0.       Essa lista é atualizada em createStruct      ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Fields"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Limit", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Limit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateValid", "text": "Deve ser true ao criar a classe   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateValid"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.WorkingData", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#WorkingData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.WorkingDataOld", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#WorkingDataOld"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DataBlockSize", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DataBlockSize"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ActualRecordNum", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ActualRecordNum"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DMXField1", "text": "O atributo DMXField1 contém o primeiro campo da lista encandeada   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DMXField1"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.TotalFields", "text": "O atributo TotalFields contém o total de campos da lista apontada por DMXField1   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#TotalFields"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.RecordSize", "text": "O atributo RecordSize contém o tamanho do buffer calculado por CreateStruct   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#RecordSize"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.FieldData", "text": "O atributo FieldData contém o ponteiro do buffer do corrente campo calculado pela propriedade CurrentField   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#FieldData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.RecordData", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#RecordData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.WidthChar", "text": "O atributo WidthChar deve ser iniciado quando este controle for incluído em um TScrollingWinControl. em um controle gráfico.      EXEMPLO      WidthChar := ((Owner as TScrollingWinControl).Canvas.TextWidth(UiDmxScroller.CharAlfanumeric) div Length(UiDmxScroller.CharAlfanumeric));         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#WidthChar"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.HeightChar", "text": "O atributo HeightChar deve ser iniciado quando este controle for incluído em um TScrollingWinControl.      EXEMPLO      HeightChar := (Owner as TScrollingWinControl).Canvas.TextHeight(CharAlfanumeric)+2;         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#HeightChar"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.KeyAltered", "text": "O atributo KeyAltered indica se algum campo da chave foi alterado é setado em changeMade   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#KeyAltered"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.keysPrimaryKeyComposite", "text": "O atributo keysPrimaryKeyComposite contém a lista de campos que pertence a chave primária      EXEMPLOS:      Chave simples:      'Matricula'.      Chave composta:      'Estado,Cidade'.         NOTA      Se pos(',',keysPrimaryKeyComposite) &lt;&gt; 0 indica que a chave é composta.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#keysPrimaryKeyComposite"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.flagPrimaryKey_AutoIncrement", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#flagPrimaryKey_AutoIncrement"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._OnCloseQuery", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_OnCloseQuery"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._OnEnter", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_OnEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._OnExit", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_OnExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._OnEnterField", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_OnEnterField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._OnExitField", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_OnExitField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._Active", "text": "O atributo name é usado para criar a propriedade active do componente       NOTAS      O componente só pode estar ativo se o GetTemplate &lt;&gt; nil .   O método CreateFormLCL só pode ser executado uma vêz.   Caso o active esteja true e o usuário seta para false o controle Owner deve ficar invisível.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_Active"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._CurrentField", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_CurrentField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._BufDataset", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_BufDataset"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._DataSource", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_DataSource"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._ActionList", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_ActionList"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller._Locked", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#_Locked"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetHelpCtx_Hint", "text": "O método SetHelpCtx_Hint inicia a documentação resumida do campo. aFldNum    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetHelpCtx_Hint"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetHelpCtx_Hint", "text": "O método SetHelpCtx_Hint inicia a documentação resumida do campo passado em :apDmxFieldRec    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetHelpCtx_Hint"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetCurrentRecord", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetCurrentRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ShowControlState", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ShowControlState"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.UpdateBuffers", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#UpdateBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Refresh", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Refresh"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetAppending", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetAppending"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetAppending", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetAppending"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetOnCalcRecord", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetOnCalcRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetRecordSelected", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetRecordSelected"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetRecordSelected", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetRecordSelected"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ChangeMadeOnOff", "text": "O método ChangeMadeOnOff seta os atributos indicativos de que o objeto foi alterado ou não.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ChangeMadeOnOff"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnNewRecord", "text": "O método DoOnNewRecord é usado para inicializa os parâmetros de um novo registro    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnNewRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetState", "text": "O método SetState seta o bit passado no parâmetro aState e retorna o estado anterior do mapa de bits passado por aState    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetState"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetState", "text": "O Método GetState recebe um mapa de bits e retorna:      false : Se o bite estiver desligado;   true ; Se o bit estiver ligado       ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetState"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.FieldByName", "text": "O método FieldByName retorna o campo passado por aName.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#FieldByName"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.FieldByNumber", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#FieldByNumber"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CancelBuffers", "text": "O método CancelBuffers copia o buffer do registro anterior para o buffer do registro atual    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CancelBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetBuffers", "text": "O método GetBuffers copia o buffer do registro atual para o buffer do registro anterior       OBSERVAÇÃO:      O método GetBuffers deve ser anulado para ler o buffer dos campos dos arquivos associados a classe TUiDmxScroller para o buffer dos campos da classe TUiDmxScroller          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.PutBuffers", "text": "O método PutBuffers deve ser anulado para grava o buffer dos campos da classe TUiDmxScroller para o buffer dos campos dos arquivos associados a classe TUiDmxScroller    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#PutBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnCloseQuery", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnCloseQuery"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnCloseQuery", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnCloseQuery"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Scroll_it_inview", "text": "O método Scroll_it_inview é usado para da o scroller na janela onde esse componente for inserido.      NOTA      A LCL não rola a tela com a tecla tab e o controle não estiver visível.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Scroll_it_inview"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnEnter", "text": "O método DoOnEnter Executa o evento onEnter se o mesmo estiver assinalado.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnExit", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.BeforeDestruction", "text": "Executado antes de construir o componente    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#BeforeDestruction"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Create", "text": "Constrói o componente    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Create"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.destroy", "text": "Destrói o componente    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#destroy"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateStruct", "text": "A procedure CreateStruct é executado para construir a lista apontada por DMXField1 baseado no Template do tipo TString.       NOTA      O parâmetro aTemplate é um string com 255 caracteres, porém o mesmo pode ser encandeado usando a função CreateAppendFields.   A função CreateAppendFields retorna a constante fldAPPEND mais o endereço da string a ser concatenada.       EXEMPLO     Var   S1,s2,Template : TString; begin   S1 := '&tilde;Nome do Aluno....:&tilde;\\ssssssssssssssssssssssssssssssssss';   s2 := '&tilde;Endereço do aluno:&tilde;\\sssssssssssssssssssssssss';   Template := S1+CreateAppendFields(s2); end;               ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateStruct"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateStruct", "text": "A procedure CreateStruct é executado para construir a lista apontada por DMXField1 baseado na lista PSItem.       NOTA      O parâmetro aTemplate é uma lista PSitem.   A função CreateTSItemFields retorna uma lista de PSItem.      EXEMPLO     Var   Template : PSItem; begin   Template := CreateTSItemFields(                         NewSItem('cccccccccccccccccccccccccccccccccccccccccccccccccc',                         NewSItem('cccccccccccccccccccccccccccccccccccccccccccccccccc',                         NewSItem('cccccccccccccccccccccccccccccccccccccccccccccccccc',                         NewSItem('cccccccccccccccccccccccccccccccccccccccccccccccccc',                         NewSItem('cccccccccccccccccccccccccccccccccccccccccccccccccc',nil)))))) end;               ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateStruct"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateStruct", "text": "A procedure CreateStruct interpreta o Template obtido em getTemplate e cria a lista de pDmxFieldRec associada ao Template.       Nota      O Template pode ser obtido pela propriedade Template se Template&lt;&gt; '' ou retornado pelo evento onGetTemplate.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateStruct"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DestroyStruct", "text": "A procedure DestroyStruct destrói as lista criada por CreateStruct acima.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DestroyStruct"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateBufDataset_FieldDefs", "text": "O método CreateBufDataset_FieldDefs é usado para criar os campos de BufDataset    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateBufDataset_FieldDefs"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateData", "text": "A procedure CreateData é usada para alocar (RecordSize) memória para o buffer (WorkingData) do registro calculado por createStruct    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DestroyData", "text": "A procedure DestroyData é usada para desalocar memória do buffer do registro criado por CreateData    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DestroyData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetRecordData", "text": "A função GetRecordData retorna o atributo WorkingData    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetRecordData"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetLimit", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetLimit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetTemplate", "text": "O método GetTemplate é usado para atualizar o atributo _onGetTemplate com o modelo informado pelo usuário caso o onGetTemplate seja nil.       NOTA      O Evento _onGetTemplate só é iniciado em tempo de execução por isso o formulário não pode ser criado em tempo de projeto usando o evento onGetTemplate.   As strings do formulário também pode ser desenhado usando o evento OnAddTemplate.   O evento OnGetTemplate tem prioridade em relação ao evento OnAddTemplate;          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetActive", "text": "A procedure SetActive seta a propriedade active e criar um formulário LCL ou HTML dependendo do tipo de aplicação    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetActive"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetCurrentField", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetCurrentField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.PutString", "text": "A função PutString salva a string S no currentField       PARÂMETROS      OkSpc : campo lógico e se true salva o campo preenchendo com espaço para completar a máscara.   S : String do tipo ShortString com conteúdo do campo.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#PutString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.PutString", "text": "O método PutString salva um string no campo passado por aFieldName.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#PutString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetString", "text": "O método GetString retorna um string do campo passado por aFieldName.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetString", "text": "A função GetString retorna a string com o valor do currentField       PARÂMETROS      OkSpc : campo lógico e se true retorna o campo preenchendo com espaço para completar a máscara.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.GetString", "text": "A função GetString retorna a string com o valor do currentField sem preencher com espaço para completar a máscara.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#GetString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.PutString", "text": "A função PutString salva a string S no currentField usando okspc = false;       PARÂMETROS      S : String do tipo ShortString com conteúdo do campo.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#PutString"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Get_MaskEdit_LCL", "text": "O método Get_MaskEdit_LCL receber a máscara do DmxScroller e retorna a mascara do componente LCL.       Nota      Em Size_TypeFld retorno o tamanho do tipo de dados da mascara;   Em OkMask retorna true se tiver mascara e false caso contrário          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Get_MaskEdit_LCL"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Get_MaskEdit_LCL", "text": "O método Get_MaskEdit_LCL receber a máscara do Dmx e retorna a mascara do componente LCL.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Get_MaskEdit_LCL"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoAddRec", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoAddRec"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.IfEqual", "text": "O atributo IfEqual retorna true se o buffer apontado por PAnt for igual ao buffer apontado por PAtu.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#IfEqual"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.RecordAltered", "text": "O método RecordAltered retorna true se o registro atual for diferente do registro anterior    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#RecordAltered"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ModifyFontsAll_LCL", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ModifyFontsAll_LCL"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ModifyFontsAll_LCL", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ModifyFontsAll_LCL"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CreateExecAction", "text": "A classe método CreateExecAction é usado para adicionar a chamada de um procedimento quando a tecla F7 é pressionada;    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CreateExecAction"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.add", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#add"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.SetLocked", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#SetLocked"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CurrentRecord", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CurrentRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Strings", "text": "A propriedade Strings o Strings é usada para editar o Template em tempo de projeto.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Strings"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.TableName", "text": "A propriedade TableName contém o nome da tabela ou consulta no banco de dados.       NOTA      A propriedade TableName é usado no método SetSqlBufDataset para criação da propriedade TCustomSQLQuery.SQL e no método AlterTable para criação da tabela ou consulta no banco de dados.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#TableName"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Appending", "text": "A propriedade Appending é usada para saber se está editando um novo registro ou não       NOTA      TRUE = Indica que um novo registro esta sendo editado.   False = Indica que um registro existente está sendo editado ou visualizado.   Obs: Deve ser atualizado na visão caso a tabela está em edição.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Appending"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DoOnNewRecord_FillChar", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DoOnNewRecord_FillChar"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.RecordSelected", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#RecordSelected"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.OnNewRecord", "text": "A propriedade OnNewRecord é executada em DoOnNewRecord se a mesma for assinalada.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#OnNewRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onCloseQuery", "text": "O evento onCloseQuery é disparado toda vez que o TUiDmxScroller é desativado.       NOTA*      Este evento é disparado antes de desativar a classe **TUiDmxScroller   .      Obs: Se o parâmetro CanClose for false, então o formulário não é desativado.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onCloseQuery"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onEnter", "text": "O evento onEnter é disparado toda vez que o TUiDmxScroller ativado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onExit", "text": "O evento onExit é disparado toda vez que o TUiDmxScroller é destivado.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onEnterField", "text": "O evento onEnterField é disparado toda vez que o controle corrente recebe o foco.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onEnterField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onExitField", "text": "O evento onExitField é disparado toda vez que o controle corrente perde o foco.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onExitField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onGetTemplate", "text": "O evento onGetTemplate substitui o método getTemplate caso OnGetTemplate&lt;&gt;nil   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onGetTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.onAddTemplate", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#onAddTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Active", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Active"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.CurrentField", "text": "A propriedade CurrentField contem um ponteiro para o campo selecionado   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#CurrentField"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.AlignmentLabels", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#AlignmentLabels"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.BufDataset", "text": "A propriedade BufDataset é usada com objetivo de integração dos dados do formulário TVDmx e os controle decentes de TDataSet.   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#BufDataset"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.DataSource", "text": "A propriedade DataSource permite que controles da LCL (Lazarus Componentes Library) possam usar os dados do componente TDmxScroller.       NOTA      Essa integração permite que TDmxScroller utilize todos os componentes de banco de dados do Free Pascal.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#DataSource"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.ActionList", "text": "A propriedade ActionList permite que ações do formulário LCL possam ser executados a partir do componente TDmxScroller.       NOTA      O interpretador de Template inicia o campo TDmxFieldRec.ExecAction e o campo LinkExecAction.   O gerador de formulário ao encontrar TDmxFieldRec.ExecAction cria um botão para que se possa executar a ação.      EXEMPLO      with DmxScroller_Form1 do begin   Result := NewSItem('&tilde;     &tilde;&tilde;⏭️&amp;Primeiro&tilde;'+CharExecAction+Novo.Name+                      '&tilde;⏩ P&amp;róximo&tilde;'+CharExecAction+(Gravar.Name)+                      '&tilde;⏪️&amp;Anterior&tilde;'+CharExecAction+Pesquisar.Name+                      '&tilde;⏮️ &amp;Ultimo&tilde;'+CharExecAction+(Excluir.Name),nil); end;        ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#ActionList"},
     {"title": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.Locked", "text": "A propriedade Locked deve ser redefinida na interface filha desta classe para travar o formulário se aLocked = true e destravar se aLocked = false;   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.TUiDmxScroller.html#Locked"},
     {"title": "mi_rtl_ui_Dmxscroller.AccNormal", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#AccNormal"},
     {"title": "mi_rtl_ui_Dmxscroller.LF", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#LF"},
     {"title": "mi_rtl_ui_Dmxscroller.PSItem", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#PSItem"},
     {"title": "mi_rtl_ui_Dmxscroller.tString", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#tString"},
     {"title": "mi_rtl_ui_Dmxscroller.ptString", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#ptString"},
     {"title": "mi_rtl_ui_Dmxscroller.TDates", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TDates"},
     {"title": "mi_rtl_ui_Dmxscroller.PValue", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#PValue"},
     {"title": "mi_rtl_ui_Dmxscroller.TValue", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TValue"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnGetTemplate", "text": "Usado para criar modelos de formulários dinamicamente usando como parâmetro listas de PSItems.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnGetTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnAddTemplate", "text": "Usado para criar modelos de formulários dinamicamente usando o método add       EXEMPLO      Procedure AddTemplate(const aUiDmxScroller:TUiDmxScroller); begin   with aUiDmxScroller do   begin     add('&tilde;EXEMPLO DE TEMPLATE&tilde;');     add('');     add('&tilde;Alfanumérico maiúscula com 15 posições:&tilde;\\SSSSSSSSSSSSSSS');     add('&tilde;Alfanumérico maiúscula e minuscula com 30 posições:&tilde;');     add('&tilde;&tilde;\\ssssssssssssssssssssssssssssssssssssss');     add('&tilde;Alfanumérico com a primeira letra maiúscula:&tilde;\\Sssssssssssssss');     add('&tilde;Valor double.......:&tilde;\\RRR,RRR.RR');     add('&tilde;Valor SmalInt......:&tilde;\\II,III');     add('&tilde;Valor Byte.........:&tilde;\\BBB');     add('&tilde;Valor Smallword....:&tilde;\\WW,WWW');     add('&tilde;Sexo...............:&tilde;'+ CreateEnumField(TRUE, accNormal, 0,                                   NewSItem(' indefinido ',                                   NewSItem(' Masculino',                                   NewSItem(' Feminino',                                           nil)))));     add('&tilde;Estado Civil              &tilde;\\KA Indefinido  '+chFN+'Sexo');     add('&tilde;&tilde;\\X Casado?                \\KA Masculino    ');     add('&tilde;&tilde;\\X Pretende se divorciar? \\KA Feminino     ');     add('&tilde;&tilde;\\X Tens filhos?          ');     add('');   end; end;  procedure TForm1.DmxScroller_Form1AddTemplate(const aUiDmxScroller: TUiDmxScroller); begin   AddTemplate(aUiDmxScroller); end;         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnAddTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller.pDmxFieldRec", "text": "O tipo pDmxFieldRec aponta para o campo do tipo TDmxFieldRec   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#pDmxFieldRec"},
     {"title": "mi_rtl_ui_Dmxscroller.TEndProc", "text": "O tipo TEndProc é usado para fazer pesquisa genérica no banco de dados quando a tecla F7 é pressionada.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TEndProc"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnEnter", "text": "O tipo TOnEnter é usado para implementar evento onEnter da classe TUiDmxScroller    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnEnter"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnExit", "text": "O tipo TOnExit é usado para implementar evento onExit da classe TUiDmxScroller    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnExit"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnNewRecord", "text": "O tipo TOnNewRecord é usado para implementar evento onNewRecord da classe TUiDmxScroller    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnNewRecord"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnCloseQuery", "text": "O tipo TOnCloseQuery é usado para implementar evento OnCloseQuery da classe TUiDmxScroller       NOTA*      Este evento é disparado antes de desativar a classe **TUiDmxScroller   .      Obs: Se o parâmetro CanClose for false, então a classe TUiDmxScroller não é desativado.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnCloseQuery"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnEnterField", "text": "O tipo TOnEnterField é usado no evento OnEnterField    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnEnterField"},
     {"title": "mi_rtl_ui_Dmxscroller.TOnExitField", "text": "O tipo TOnExitField é usado no evento OnExitField    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#TOnExitField"},
     {"title": "mi_rtl_ui_Dmxscroller.SmallWord", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller.html#SmallWord"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons", "text": "A unit mi_rtl_ui_DmxScroller_Buttons implementa a classe TUiDmxScroller_Buttons.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi_rtl_ui_DmxScroller_Buttons.pas   PENDÊNCIAS   CONCLUÍDO      Criar classe TUiDmxScroller_Buttons ✅️   Criar constructor Create.✅️   Criar Function Create_RCommands. ✅️   Commands_Buttons_High : Byte; ✅️   Commands_Buttons : Array[0..Max_List_Buttons] of TRCommand; ✅️   Max_List_Buttons = sizeof(Longint); ✅️   Commands_Buttons_Mb : Longint; ✅️   Function Add_RCommands_Buttons; ✅️   Function Create_RCommands_Buttons; ✅️   Function Set_Commands_Buttons_Mb(Const aMb_Bits:Longint):Longint;✅️   Documentar os atributos abaixo: ️      Commands_Buttons_High : Byte; ✅️   Commands_Buttons : Array[0..Max_List_Buttons] of TRCommand; ✅️         HISTÓRICOS      DIAS ANTERIORES      ./mi_rtl_ui_DmxScroller_Buttons_historico.md       DO DIA      2022-07-07      09:45      Documentar o método Add_RCommands_Buttons      14:55      Documentar o método Add_RCommands_Buttons                     ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.html"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons", "text": "A classe TUiDmxScroller_Buttons tem como objetivo registrar os dados necessários para criar os botões de navegação e edição de uma tabela quando TDataSource for &lt;&gt; nil.       EXEMPLO USO            ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.UiDmxScroller", "text": "O atributo UiDmxScroller deve ser passado em constructor create   ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#UiDmxScroller"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.OkCmmNewRecord", "text": "O atributo OkCmmNewRecord indica se o registro pode ser incluído ou não, ou seja: é o estado inicial da ação incluir informada pelo usuário.       NOTA      True : O registro pode ser incluído. Obs: DataSet.Append pode ser executado.   False: O registro não pode ser incluído. Obs: DataSet.Append não pode ser executado.   Esse atributo é usado nos seguintes métodos:      Create_RCommands_Edit   No método DoOnNewRecord   Action Novo         EXEMPLO     // Tirado do código: Function TRecord.Create_RCommands_Edit  OkCmmNewRecord := Application.FileOptions_CommandEnabled(Module,aCmNovo); if aCmNovo&lt;=255 then   if OkCmmNewRecord   then Application.EnableCommands([aCmNovo])   Else Application.DisableCommands([aCmNovo]);        ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#OkCmmNewRecord"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.OkCmmDbLocaliza", "text": "O atributo OkCmmDbLocaliza indica se o registro pode ser localizado ou não, ou seja: é o estado inicial da ação pesquisar informada pelo usuário.       NOTA      True : O registro pode ser pesquisado. DataSet.Locate pode ser executado.   False: O registro não pode ser pesquisado. DataSet.Locate não pode ser executado.   Esse atributo é usado nos seguintes métodos:      Create_RCommands_Edit   No método DoOnNewRecord   Action Pesquisa         EXEMPLO     // Tirado do código: Function TRecord.Create_RCommands_Edit  if OkCmmNewRecord or OkCmmEvaluateRecord or OkCmmZeroizeRecord then begin        self.OkCmmDbLocaliza := true;        self.Locked := false;      end else begin         self.OkCmmDbLocaliza := Application.FileOptions_CommandEnabled(Module,ACmLocaliza);         self.Locked := True;       end;        ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#OkCmmDbLocaliza"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.OkCmmZeroizeRecord", "text": "O atributo OkCmmZeroizeRecord indica se o registro pode ser excluído ou não, ou seja: é o estado inicial da ação excluir informada pelo usuário.       NOTA      True : O registro pode ser deletado.   False: O registro não pode ser deletado.   Esse atributo é usado nos seguintes métodos:      Create_RCommands_Edit   Nos métodos DeleteRec   Action Delete         EXEMPLO     // Tirado do código: Function TRecord.Create_RCommands_Edit  OkCmmZeroizeRecord  := Application.FileOptions_CommandEnabled(Module,ACmExclusao); if ACmExclusao&lt;=255 then   if OkCmmZeroizeRecord   then Application.EnableCommands([ACmExclusao])   Else Application.DisableCommands([ACmExclusao]);        ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#OkCmmZeroizeRecord"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Max_List_Buttons", "text": "A constante Max_List_Buttons contém o número máximo de comandos da matriz Commands_Buttons   ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Max_List_Buttons"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Commands_Buttons", "text": "O atributo Commands_Buttons contém os dados necessários para criar os botões de ações da classe de acesso a arquivos.       EXEMPLO DE USO DESTA MATRIZ     Commands_Buttons[1] := Create_RCommand(CmOk,'Ok'  ,'',KbEnter,AHelpCtx,Flag)&circ;; Commands_Buttons[2] := Create_RCommand(CmOk,'Next','',Kbno   ,AHelpCtx,Flag)^;        ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Commands_Buttons"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Create", "text": "O construtor Create é usado para iniciar o atributo _UiDmxScroller com o cast (aOwner as TUiDmxScroller)    ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Create"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Set_Commands_Buttons_Mb", "text": "O Método Set_Commands_Buttons_Mb seta _Commands_Buttons_Mb e retorna o mapa de bits Commands_Buttons_Mb anterior.  EXEMPLO DE USO      //*** Seta as propriedades do fornecedor *** With ArqFornecedor do Begin   Alias := sgc('Parâmetros para pesquisa de duplicatas');   SetExpandable(False); //Não permite Inclusões   SetLocked(False); //false = Não travado porque a janela filha pode ser alterada e expandida   SetOkWriteRec(False);  //Desabilita a alteração.   Set_Commands_Buttons_Mb(Mb_Cm_Bof_Prev_Next_Eof); end;      ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Set_Commands_Buttons_Mb"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Create_RCommand", "text": "O método Create_RCommand é usado para iniciar os elementos da matriz Commands_Buttons       EXEMPLO E USO      Function Create_RCommands_Buttons(Var aCommands : Array of TRCommand):SmallWord; Begin   If High(aCommands) &lt; 2   Then Raise TException.Create(self,'Create_RCommands_Buttons()',ParametroInvalido);    Create_RCommand('CmDbGoBof'  ,CmDbGoBof   ,'&amp;Inicio'   ,'',kbNoKey,0,0,Mb_Cm_Bof   ,bfNormal ,aCommands[1]);   Create_RCommand('CmDbPrevRec',CmDbPrevRec ,'&amp;Anterior' ,'',kbNoKey,0,0,Mb_Cm_Prev  ,bfNormal ,aCommands[2]);  end;         ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Create_RCommand"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Create_RCommands_Buttons", "text": "O método Create_RCommands_Buttons retorna em aCommands a matriz aberta de TRCommand e em result retorna o número de elementos adicionados em aCommands.       EXEMPLO E USO       Var    Commands_Buttons_High : Byte; //Numero de comandos de Commands    Commands_Buttons      : Array[0..Max_List_Buttons] of TRCommand; Begin   Commands_Buttons_High := Create_RCommands_Buttons(Commands_Buttons); end;         ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Create_RCommands_Buttons"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Add_RCommands_Buttons", "text": "O método Add_RCommands_Buttons adiciona um botão na posição Commands_Buttons[Commands_Buttons_High+1].    ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Add_RCommands_Buttons"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Length_Button_Name_Actives", "text": "O método Length_Button_Name_Actives retorna a soma do número de caracteres do campo TRCommand.name dos botões ativos    ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Length_Button_Name_Actives"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Get_Commands_Mb_i", "text": "O método Get_Commands_Mb_i retorna a posição na matriz Commands_Buttons do mapa de bit passado por aMb_Bits.       Nota      A posição deve ser a mesma do Mapa: _Commands_Buttons_Mb          ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Get_Commands_Mb_i"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Get_Commands_Mb_StrCommand", "text": "Retorna o nome do comando passado per aMb_Bits.    ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Get_Commands_Mb_StrCommand"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Commands_Buttons_High", "text": "A propriedade Commands_Buttons_High contém o número de linhas inicializadas da matriz Commands_Buttons, ou seja: é igual o número de linhas criadas em: Create_RCommands_Buttons.   ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Commands_Buttons_High"},
     {"title": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.Commands_Buttons_Mb", "text": "O atributo Commands_Buttons_Mb contém o mapa de bits dos botões que serão criados no formulário.       NOTA      O mapa de bits é do tipo longint (4 bytes) por isso pode conter no máximo (4x8=32) botões.         ", "tags": "", "url": "mi_rtl_ui_DmxScroller_Buttons.TUiDmxScroller_Buttons.html#Commands_Buttons_Mb"},
     {"title": "mi_rtl_ui_dmxscroller_form", "text": "A unit mi_rtl_ui_dmxscroller_form implementa a classe TDmxScroller_Form.       Primeiro autor: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br)   VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      uMi_rtl_ui_Dmxscroller_form.pas      HISTÓRICO:      umi_ui_dmxscroller_form_historico.md      PENDÊNCIAS      T12 Documentar a unit.   T12 Criar propriedade UiDmxScroller_Buttons:TUiDmxScroller_Buttons      CONCLUÍDO      Criar atributo private FirstDataRow : integer; ✅   Criar atributo private PrevRec : integer; ✅   Criar atributo protected DMXFields : TFPList; ✅   Criar atributo protected FldRadioButtonsAdicionados:TStringList;✅   Criar atributo Public Function SetHelpCtx_Hint ✅   Criar atributo Public Procedure SetHelpCtx_Hint ✅   Criar constructor Create(aOwner:TComponent);Override; ✅   Criar método public procedure AfterConstruction; override; ✅   Criar public destructor destroy;override; ✅   Criar método protected procedure ShowControlState;override; ✅   Criar método protected procedure CreateStruct ✅   Criar método Protected procedure DestroyStruct; Override; ✅   Criar método procedure Scroll_it_inview_LCL ✅   Criar método public procedure Scroll_it_inview ✅   Criar método protected procedure CreateFormLCL ✅   Criar método public function GetTemplate(aNext: PSItem) ✅   Criar método protected procedure UpdateBuffers_Controls;virtual; ✅   Criar método public procedure UpdateBuffers;override; ✅   Criar método public procedure Refresh;override; ✅   Criar método protected procedure SetActiveTarget(aActive : Boolean);override; ✅   Criar método protected procedure SetActive(aActive : Boolean);override; ✅         ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.html"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.DMXFields", "text": "O atributo DMXFields salva todos os rótulos e campos da lista de Templates       MOTIVO      A classe mãe TUiDmxScroller mãe da classe TDmxScroller_Form cria Template de apenas uma linha, a lista DMXFields salva todas as linhas para geração de um Template do tipo formulário.         ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.html#DMXFields"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.FldRadioButtonsAdicionados", "text": "Usado para evitar que RadiosButton sejam adicionados mais de uma vês em radiosgroups diferentes.      Mais informações veja campos FldRadioGrous.      ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.html#FldRadioButtonsAdicionados"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.SetHelpCtx_Hint", "text": "O método SetHelpCtx_Hint inicia a documentação resumida do campo. aFldNum    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.html#SetHelpCtx_Hint"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.SetHelpCtx_Hint", "text": "O método SetHelpCtx_Hint inicia a documentação resumida do campo passado em :apDmxFieldRec    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form_Atributos.html#SetHelpCtx_Hint"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form", "text": "A classe TDmxScroller_Form implementa a construção de formulários usando uma lista de Templates do tipo TDmxScroller   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.Create", "text": "Constrói o componente    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#Create"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.AfterConstruction", "text": "    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#AfterConstruction"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.destroy", "text": "Destrói o componente    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#destroy"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.CreateStruct", "text": "O método CreateStruct interpreta uma lista de strings do tipo PSItem e adiciona os layout de cada campo em pDmxFieldRec, em seguida adiciona pDmxFieldRec em DMXFields com todos os campos de formação de formulário visual.    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#CreateStruct"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.DestroyStruct", "text": "O método DestroyStruct destrói os dados criados em CreateStruct().    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#DestroyStruct"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.GetTemplate", "text": "O método GetTemplate retorna uma lista de PSItem (Lista de strings) com o modelo usado para criar a tela.       NOTA      O Evento onGetTemplate só é iniciado em tempo de execução, por isso o formulário não pode ser criado em tempo de desenho do aplicativo.   Caso o evento onGetTemplate seja nil, então não posso ativar a tela.   Esse método pode ser anulado, caso se queira ignorar o evento onGetTemplate e definir o Template em uma método pai herdado desta classe.   O modelo cria um formulário usando os tipos de dados primitivos.      EXEMPLO      // Implementação de um modelo no Alvo LCL function TDMAlunos.DmxScroller_Form_AlunoGetTemplate(aNext: PSItem): PSItem; begin   with DmxScroller_Form_Aluno do   begin     // AlignmentLabels:= taCenter;     AlignmentLabels := taLeftJustify;     // AlignmentLabels := taRightJustify ;     Result :=       NewSItem('&tilde;     Matrícula &tilde;\\LLLLL'+CharFieldName+'matricula'+CharAccReadOnly+CharPfInKeyPrimary+CharPfInAutoIncrement,       NewSItem('&tilde;Nome do aluno: &tilde;\\ssssssssssssssssssss`sssssss'+CharFieldName+'Nome'+CharPfInKey,       NewSItem('',       NewSItem('&tilde;     Endereço: &tilde;\\ssssssssssssssssssss`sssssssssss'+CharFieldName+'Endereco',       NewSItem('&tilde;P. Referência: &tilde;\\ssssssssssssssssssss`sssss'+CharFieldName+'PontoDeReferencia',       NewSItem('&tilde;          Cep: &tilde;\\##.###-###'+CharFieldName+'cep',       NewSItem('&tilde;       Estado: &tilde;\\SS'+CharFieldName+'Estado'+CharForeignKeyN_Um_false+'Estados,Estado',       NewSItem('&tilde;       Cidade: &tilde;\\ssssssssssssssssssss`sssss'+CharFieldName+'cidade'+CharForeignKeyN_Um_false+'Cidades,Estado;Cidade',       NewSItem('',       aNext)))))))));   end; end;         ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#GetTemplate"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.UpdateBuffers_Controls", "text": "    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#UpdateBuffers_Controls"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.UpdateBuffers", "text": "    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#UpdateBuffers"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.SetActiveTarget", "text": "A procedure SetActiveTarget seta a propriedade active e criar um formulário na plataforma alvo    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#SetActiveTarget"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.SetActive", "text": "A procedure SetActive seta a propriedade active e criar um formulário LCL ou HTML dependendo do tipo de aplicação    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#SetActive"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.name", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#name"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.Alias", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#Alias"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.Strings", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#Strings"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.OnAddTemplate", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#OnAddTemplate"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.OnNewRecord", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#OnNewRecord"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onCloseQuery", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onCloseQuery"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onEnter", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onEnter"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onExit", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onExit"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onEnterField", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onEnterField"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onExitField", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onExitField"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.onGetTemplate", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#onGetTemplate"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.Active", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#Active"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.AlignmentLabels", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#AlignmentLabels"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.ActionList", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.TDmxScroller_Form.html#ActionList"},
     {"title": "mi_rtl_ui_dmxscroller_form.accDelimiter", "text": "A constante accDelimiter informa que o campo é delimitador de campos no Template.   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#accDelimiter"},
     {"title": "mi_rtl_ui_dmxscroller_form.accHidden", "text": "A constante accHidden (Const accHidden = 2;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o mesmo é invisível.       EXEMPLO      Como usar o mapa de bits accHidden para saber se o campo está invisível.      with pDmxFieldRec&circ; do   If (access and accHidden &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s está invisível'),[CharFieldName]);         end;           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#accHidden"},
     {"title": "mi_rtl_ui_dmxscroller_form.AccNormal", "text": "A constante AccNormal (Const AccNormal = 0;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se que o campo pode ser editado.       EXEMPLO      Como usar o mapa de bits accNormal para saber se o campo pode ser editado.      with pDmxFieldRec&circ; do   If (access and accNormal &lt;&gt; 0)    then begin          ShowMessage(Format('O campo %s pode ser editado'),[FieldName]);        end;           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#AccNormal"},
     {"title": "mi_rtl_ui_dmxscroller_form.accReadOnly", "text": "A constante accReadOnly (Const ReadOnly = 1;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o campo é somente para leitura.      EXEMPLO      Como usar o mapa de bits ReadOnly para saber se o campo não pode ser editado.    with pDmxFieldRec&circ; do   If (access and ReadOnly &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s não pode ser editado'),[FieldName]);        end;           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#accReadOnly"},
     {"title": "mi_rtl_ui_dmxscroller_form.accSkip", "text": "A constante accSkip (Const accSkip = 4;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o campo pode receber o focus.      EXEMPLO      Como usar o mapa de bits accSkip para saber se o campo não pode receber o focus.    with pDmxFieldRec&circ; do   If (access and accSkip &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s não pode receber o focus'),[FieldName]);        end;           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#accSkip"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharHint", "text": "A constante CharHint é usado para documentar o campo e indica que todo o texto até o próximo caractere de controle será o conteúdo do campo HelpCtx_Hint.       EXEMPLO      Resourcestring   tmp_Alunos_Idade = '\\BB'+ChFN+'idade'+CharUpperlimit+#64+                      CharHint+'A idade do aluno. Valores válidos 1 a 64'+                      CharHintPorque+'Este campo é necessário para que se agrupe o alunos baseado em sua faixa etária'+                      CharHintOnde+'Ele será usado pelo coordenador ao classificar a turma';    tmp_Alunos_Matricula = \\IIII'+ChFN+'matricula'+CharHint+'A matricula do aluno é um campo sequencial e calculado ao incluir o registro';   tmp_Alunos = '&tilde;     Idade:&tilde;%s'+lf+               '&tilde; Matricula:&tilde;%s        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharHint"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharHintOnde", "text": "A contante CharHintOnde informa que todo texto até o próximo delimitador contém informações para o campo HelpCtx_Onde   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharHintOnde"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharHintPorque", "text": "A contante CharHintPorque informa que todo texto até o próximo delimitador contém informações para o campo HelpCtx_Porque   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharHintPorque"},
     {"title": "mi_rtl_ui_dmxscroller_form.fld_LData", "text": "A constante fld_LData é do tipo TDateTime e guarda a data compactada 'dd/dd/dd'   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fld_LData"},
     {"title": "mi_rtl_ui_dmxscroller_form.fld_LHora", "text": "A constante fld_LHora é do tipo TDateTime e guarda a hora compactada ##:##:##   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fld_LHora"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldAnsiChar", "text": "A constante fldAnsiChar (Const fldAnsiChar = 'C') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'C' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere maiúsculo.       EXEMPLO      Representação de um AnsiString de 10 dígitos em um buffer de 11 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const   Nome := '\\CCCCCCCCCC'; //PAULO SÉRG           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldAnsiChar"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldAnsiChar_Minuscula", "text": "A constante fldAnsiChar_Minuscula (Const fldAnsiChar = 'c') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'c' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere minúsculo.       EXEMPLO      Representação de um AnsiString de 10 dígitos em um buffer de 11 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const   Nome := '\\cccccccccc'; //paulo Sérg   Nome := '\\Cccccccccc'; //Paulo Sérg           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldAnsiChar_Minuscula"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldAnsiCharNUM", "text": "A constante fldAnsiCharNUM (Const fldAnsiChar = '0') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '0' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere numérico ['0'..'9']] .       EXEMPLO      Representação de um AnsiString de 11 dígitos em um buffer de 12 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const    telefone := '\\(00) 0 0000-0000' //85 9 9702 4498           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldAnsiCharNUM"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldAnsiCharVAL", "text": "A constante fldAnsiCharVAL (Const fldAnsiChar = '0') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '0' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere numérico ['0'..'9']] com formatação dbase.       EXEMPLO      Representação de um AnsiString de 11 dígitos em um buffer de 12 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const    telefone := '\\(NN) N NNNN-NNNN' //85 9 9702 4498           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldAnsiCharVAL"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldAPPEND", "text": "A constante fldAPPEND é usada para concatenar duas listas do tipo PSItem.       A constante fldAPPEND é necessário porque DmxScroller trabalha com string curta e a mesma tem um tamanho de 255 caracteres, onde o tamanho está na posição 0.   Como usar a constante fldAPPEND:       A função CreateAppendFields retorna a constante fldAPPEND mais o endereço da string a ser concatenada.       EXEMPLO      procedure Template : ShortString;   Var     S1,s2,Template : TString; begin   S1 := '&tilde;Nome do Aluno....:&tilde;\\ssssssssssssssssssssssssssssssssss';   s2 := '&tilde;Endereço do aluno:&tilde;\\sssssssssssssssssssssssss';   result := S1+CreateAppendFields(s2); end;     NOTA      A contante fldAPPEND foi criada porque o projeto inicial foi para turbo pascal e ambiente console.   A versão atual podemos usar AnsiString visto que o limite do mesmo é a memória.   Para usar AnsiString é necessário converter para PSitem com a função: StringToSItem.       EXEMPLO:      function TMI_UI_InputBox.DmxScroller_Form1GetTemplate(aNext: PSItem): PSItem; begin   with DmxScroller_Form1 do   begin     if _Template  &lt;&gt; ''     then Result := StringToSItem(_Template, 80);  //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Esquerda) //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Central) //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Direita) //    Result := StringToSItem(_Template, 80,TObjectsTypes.TAlinhamento.Alinhamento_Justificado)      else result := nil;   end; end;                    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldAPPEND"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldBLOb", "text": "A constante fldBLOb indica que o campo é não formatado podendo ser um Record, porém a edição do mesmo será feito por outros meios.       NOTA      Para informar ao buffer do registro que o campo é fldBLOb, a função CreateBlobField é necessário.   A class function TUiMethods.CreateBlobField(Len: integer; AccMode,Default: byte) : DmxIDstr; reserva espaço para o mesmo.   Pendência: Preciso criar um exemplo de uso deste tipo de informação.         ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldBLOb"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldBYTE", "text": "A constante fldBYTE (Const fldBYTE = 'B') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'B' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo byte.       EXEMPLO      Const    idade := '\\BB' //Os dois dígitos estarão em um buffer de 1 byte;        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldBYTE"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldBoolean", "text": "A constante fldBoolean (fldBoolean = 'X') indica que o campo é do tipo byte e só pode ter dois valores.       NOTA      Valores possíveis:      0 - False; não   1 = True; sim      A forma de editá-los deve ser com o componente checkbox.      EXEMPLO      Resourcestring   tmp_Aceita = '\\[X]'+ChFN+'Aceita_contrato'+CharHint+'Aceita os termos do contrato?';   Template = tmp_Aceita+'&tilde;Aceita os termos do contrato&tilde;';        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldBoolean"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldCONTRACTION", "text": "A constante fldCONTRACTION ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldCONTRACTION"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldData", "text": "A constante fldData ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldData"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldDateTimeDos", "text": "A constante FldDateTimeDos ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldDateTimeDos"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldENUM", "text": "A constante fldENUM (fldENUM=&circ;E) é um campo do tipo byte(0..255) que contém uma lista de string que são selecionadas por um componente tipo ComboBox.       EXEMPLO        Const tmpMidia : PSitem = nil; begin   tmpMidia := CreateEnumField(TRUE, accNormal, 0,                               NewSItem(' indefinido ',                               NewSItem(' PenDriver  ',                               NewSItem(' SSD        ',                               nil))))+CharFieldName+'Midia;    Template = NewSItem('&tilde;  Eu uso &tilde;'+ tmpMidia + '&tilde; em meu computador.&tilde;        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldENUM"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharExecAction", "text": "A contante CharExecAction é usado para associar ao campo atual uma classe TAction.       NOTA      O interpretador de Templates associa a ação do Template ao corrente campo.      EXEMPLO DE USO DE AÇÕES NO TEMPLATE      Se o atributo Fieldnum do campo for diferente de zero, então o rótulo do botão associado a ação será o caracteres 🔍 e a ação pode atualizar o buffer do campo.      No exemplo a seguir um rótulo e um campo de cliente:      NewSItem('&tilde;Cliente:&tilde;'+'\\LLLLL'+CharExecAction+CreateExecAction(Action_pesquisa)        Se o atributo Fieldnum do campo for igual a zero, então a rótulo do botão será o rótulo do campo.      No exemplo a seguir um rótulo de novo cliente (icons 🆕) e um botão ok (icons 🆗)      NewSItem('&tilde; 🆕 &amp;Novo cliente:&tilde;'+CharExecAction+CreateExecAction(Action_Novo)+          '&tilde;   &tilde;&tilde; 🆗 &tilde;'+CharExecAction+CreateExecAction(Action_Ok)              ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharExecAction"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldExtended", "text": "A constante fldExtended (fldExtended='E') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'E' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo Extended.       EXEMPLO      Const    Valor := '\\EEE,EEE,EEE,EEE,EE' //Todos os números editados nesta                                   //mascara, estarão em um buffer de 10 bytes;        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldExtended"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharFieldName", "text": "A constante CharFieldName usada para informar o nome do campo informado antes deste caractere.       EXEMPLO      Const   idade := '\\BB'+CharFieldName+'idade'        ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharFieldName"},
     {"title": "mi_rtl_ui_dmxscroller_form.ChFN", "text": "A constante ChFN é igual a CharFieldName. Foi criada para facilitar seu uso.   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#ChFN"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldHexValue", "text": "A constante fldHexValue ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldHexValue"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldLData", "text": "A constante fldLData ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldLData"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldLHora", "text": "A constante fldLHora ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldLHora"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldLONGINT", "text": "A constante fldLONGINT ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldLONGINT"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldMemo", "text": "A constante FldMemo ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldMemo"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldOperador", "text": "A constante FldOperador ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldOperador"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldRadioButton", "text": "A constante FldRadioButton ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldRadioButton"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldReal4", "text": "A constante fldReal4 ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldReal4"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldReal4P", "text": "A constante fldReal4P ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldReal4P"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldReal4Positivo", "text": "A constante fldReal4Positivo ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldReal4Positivo"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldReal4PPositivo", "text": "A constante fldReal4PPositivo ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldReal4PPositivo"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldRealNum", "text": "A constante fldRealNum ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldRealNum"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldRealNum_Positivo", "text": "A constante fldRealNum_Positivo ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldRealNum_Positivo"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldSData", "text": "A constante FldSData ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldSData"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldSDateTimeDos", "text": "A constante FldSDateTimeDos ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldSDateTimeDos"},
     {"title": "mi_rtl_ui_dmxscroller_form.FldSHora", "text": "A constante FldSHora ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#FldSHora"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSHORTINT", "text": "A constante fldSHORTINT ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSHORTINT"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSItems", "text": "A constante fldSItems ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSItems"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSmallInt", "text": "A constante fldSmallInt ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSmallInt"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSmallWORD", "text": "A constante fldSmallWORD ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSmallWORD"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSTR", "text": "A constante fldSTR (Const fldStr = 'S') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'S' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere maiúsculo.       EXEMPLO      Representação de um string de 10 dígitos em um buffer de 11 bytes onde o byte zero contém o tamanho da string;      Const   Nome := '\\SSSSSSSSSS'  //PAULO SÉRG           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSTR"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSTR_Minuscula", "text": "A constante fldSTR_Minuscula (Const fldSTR_Minuscula = 's') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 's' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere minúscula.       EXEMPLO      Representação de um string de 10 dígitos em um buffer de 11 bytes onde o byte zero contém o tamanho da string;      Const   Nome := '\\ssssssssss' //paulo sérg   Nome := '\\Ssssssssss' //Paulo sérg           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSTR_Minuscula"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldSTRNUM", "text": "A constante fldSTRNUM (Const fldSTRNUM = '#') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '#' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere numérico.       EXEMPLO      Representação de um string de 11 dígitos em um buffer de 12 bytes onde o byte zero contém o tamanho da string;      Const   telefone := '\\(##) # ####-####' //85 9 9702 4498           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldSTRNUM"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharUpperlimit", "text": "A constante CharUpperlimit (CharUpperlimit=&circ;U) permite informar um limite superior para campos do tipo byte.       O gerador de formulário deve usar o conteúdo do campo pDmxFieldRec.Upperlimit para criticar se o valor do campo está na faixa entre 1 e pDmxFieldRec.Upperlimit.   O valor zero significa que o campo está nulo.   EXEMPLO      Um campo onde o seu conteúdo não ultrapasse um byte, pode ser informado no Template da seguinte forma:      Const   idade := '\\BBB+CharUpperlimit+#130+CharHint+'Não existe humanos com a idade superior a 130 anos.           ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharUpperlimit"},
     {"title": "mi_rtl_ui_dmxscroller_form.fldZEROMOD", "text": "A constante fldZEROMOD ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#fldZEROMOD"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharShowPassword", "text": "A constante CharShowPassword informa para controle que os caracteres não devem ser visualizado.       NOTA      Usados no campos tipo senha.         ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharShowPassword"},
     {"title": "mi_rtl_ui_dmxscroller_form.CharShowPasswordChar", "text": "A constante CharShowPasswordChar ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#CharShowPasswordChar"},
     {"title": "mi_rtl_ui_dmxscroller_form.TypeDate", "text": "A constante TypeDate ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#TypeDate"},
     {"title": "mi_rtl_ui_dmxscroller_form._TypeDate", "text": "A constante _TypeDate ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#_TypeDate"},
     {"title": "mi_rtl_ui_dmxscroller_form.TypeHora", "text": "A constante TypeHora ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#TypeHora"},
     {"title": "mi_rtl_ui_dmxscroller_form.TypeMemo", "text": "A constante TypeMemo ...   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#TypeMemo"},
     {"title": "mi_rtl_ui_dmxscroller_form.Register", "text": "    ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#Register"},
     {"title": "mi_rtl_ui_dmxscroller_form.TDmxFieldRec", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#TDmxFieldRec"},
     {"title": "mi_rtl_ui_dmxscroller_form.pDmxFieldRec", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#pDmxFieldRec"},
     {"title": "mi_rtl_ui_dmxscroller_form.SmallWord", "text": "   ", "tags": "", "url": "mi_rtl_ui_dmxscroller_form.html#SmallWord"},
     {"title": "mi_rtl_ui_Dmxscroller_sql", "text": "A unit mi_rtl_ui_Dmxscroller_sql implementa a classe TUiDmxScroller_sql.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi_ui_Dmxscroller_sql.pas   PENDÊNCIAS      T12 Falta implementar chave estrangeira em createTable;   T12 Em TUiDmxScroller_sql.DoOnNewRecord; está executando o método (CustomBufDataset as TSQLQuery).Append; antes do componenente TUiDmxScroller_sql está visível e isto está gerando exceção.   T12 ANÁLISE      [Estudar os procedimentos armazenados](https://www.w3schools.com/sql/sql_stored_procedures.asp)   [Estudar as restrições SQL](https://www.w3schools.com/sql/sql_constraints.asp)   Como saber se um campo é uma chave que liga outra tabela?      SQL FOREIGN KEY Constraint      /*Não, podemos permitir que os registros das pessoas que possuim camisetas   lavando sejam apagados, para garantir a integridade da informação.   Para isso devemos utilizar o as chaves estrangeiras que acusarão   um erro quando tentarmos deletar uma pessoa que possuir camisetas.   Veja em código: */  CREATE TABLE Pessoa(     IdPessoa INT NOT NULL PRIMARY KEY IDENTITY(1,1),     Nome VARCHAR(20) NOT NULL )  CREATE TABLE Camiseta(     IdCamiseta INT NOT NULL PRIMARY KEY IDENTITY(1,1),     Descrição VARCHAR(20) NOT NULL,     IdPessoa INT NOT NULL     CONSTRAINT FK_Camiseta_Pessoa FOREIGN  KEY(IdPessoa) REFERENCES Pessoa(IdPessoa) )  INSERT INTO Pessoa VALUES ('HeyJoe') INSERT INTO Pessoa VALUES ('Caique')   INSERT INTO Camiseta VALUES ('Azul', 1) INSERT INTO Camiseta VALUES ('Amarela', 1) INSERT INTO Camiseta VALUES ('Preta', 2)  SELECT * FROM Pessoa, Camiseta WHERE Pessoa.IdPessoa = Camiseta.IdPessoa        Como saber o tipo de relacionamento que os campos de outra tabela tem com a tabela atual?      T12 A opção CreateTable está dando mensagem de erro quando a coluna já existe.      Encontrar uma forma de não gerar exceção ou ignorar as exceções nesta rotina.      T12 Em TUiDmxScroller_sql.AlterTable checar:      T12 Criar código para todos os tipos reconhecidos por marIcaraí.   T12 Debugar para saber se está tudo funcionando.   T12 Permitir adicionar uma nova coluna mesmo que a tabela já exista.      T12 Em SetTableName(aTableName:String) criticar o nome aTableName é um nome válido para a tabela.      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br) ✅   2022-03-13      09:00      T12 Implementar a criação de código SQL baseado nos dados de TUiDmxScroller.      ANÁLISE:      Onde pegar o nome da tabela ou consulta? ✅      TUiDmxScroller.CustomBufDataset.FileName;      Onde pegar o nome dos campos da tabela CustomBufDataset.Filename? ✅      A lista de campos encontra-se em : TUiDmxScroller_Atributos.Fields : TFPList;      Como saber se TUiDmxScroller é uma tabela ou a uma consulta?      Se todos os TUiDmxScroller_Atributos.Fields[].FieldName não contém '|' é porque é FileName é uma tabela. ✅   Se pelo menos um TUiDmxScroller_Atributos.Fields[].FieldName contém '|' é porque é FileName é uma consulta envolvendo mais de uma tabela. ✅      Como saber se uma tabela ou consulta existe do banco de dados?      O SQL do postegres e do sqlite3 tem a clausula IN NOT EXISTS no comando CREATE TABLE:      EXEMPLO:     CREATE TABLE IF NOT EXISTS TEST01 ();  ✅              REFERÊNCIAS      SQL:2016      (PostgresSQL aceita 160 das 169 especificação 2016)(https://www.postgresql.org/docs/12/features.html)   [Comparativo entre os bancos de dados x conformidade SQL](https://en.wikipedia.org/wiki/SQL_compliance)   [Clientes de bancos de dados opensource](https://medevel.com/17-sql-client-open-source/)   Instalei programa cliente SQL DBeaver      Obs: Não deu certo. Ele é escrito em java e não funcionou o básico.      [sqlite create database if not exists](https://www.codegrepper.com/code-examples/sql/sqlite+create+database+if+not+exists)                  2022-03-14      08:22      T12 Criar a unit mi_ui_Dmxscroller_sql.pas com a classe TUiDmxScroller_sql com objetivo de concentrar a integração do TDmxScroller com o componente TSQLQuery ✅      20:00      T12 Na Construção de TFields atualizar a propriedade TField.ProviderFlags com o tipo de acesso definido em TDmxFieldRec.Access ✅      21:12      T12 Criar propriedade TableName ✅      21:27      T12 Criar Function SetSqlCustomBufDataset:Boolean;Virtual;      CustomBufDataset.SQL := SELECT * FROM X  onde X será definido pela propriedade TableName ✅            2022-03-15      09:11      Depurar o que fiz ontem para fazer funciona a atualização do banco de dados SQL. ✅      11:36      Criar método TUiDmxScroller_sql.AlterTable : Boolean; ✅      14:38      T12 Atualizar TSQLQury.TFields.ProviderFlags com TUiDmxScroller.MiProviderFlags ✅         2022-03-16      16:23      T12 Em TUiDmxScroller_sql.CreateCustomBufDataset_FieldDefs, atualizar TField.ProviderFlags com os dados do campo TDmxFieldRec.ProviderFlags. ✅      16:54      Em TUiDmxScroller_sql.AlterTable usar os flags TDmxFieldRec.ProviderFlags para criação da tabela. ✅         2022-03-17      10:48      T12 Os flags indicando que se trata de chave primária não está sendo atualizado em createStructor, por isso não está criando a chave primária. ✅         2022-03-18      10:40      T12 Ao criar uma tabela SQL em AlterTable adicionar colunas ao invés de criar a tabela toda. ✅      Motivo:      Permitir que o banco de dados fique compatível com o Template.   Alterar um coluna de forma automática não é bom, porque o que está feito gera dependências que produzirão erros ao fazer essas alterações.               2022-03-21      08:57      T12 Criar function SQL_AddkeysPrimaryKeyComposite(I : Integer):Boolean; ✅      Esta função adiciona chave primária composta na tabela.   REFERÊNCIA      [Como adiconar chave primaria usando a expressão ALTER TABLE](https://www.techonthenet.com/postgresql/primary_keys.php#:&tilde;:text=In%20PostgreSQL%2C%20a%20primary%20key%20is%20created%20using%20either%20a,or%20drop%20a%20primary%20key.)            15:40      T12 Em AlterTable criar a restrição de chave estrangeira no TDmxScroller_sql. ✅      Nome da função: function AddKeyForeigns(I : Integer):Boolean;            2022-03-22      09:00      T12 Documentar as units TuiTypes e TUIConsts. ✅      10:00      T12 Criar os relacionamentos entre tabelas (restrições entre tabelas) ✅      14:14      T12 Depurar os relacionamentos entre tabelas. ✅      18:47      O Componente CustomBufDataset não está entrando no modo edit. ✅      O problema estava nos eventos TScrollBoxDMX.DoOnEnter e TScrollBoxDMX.DoOnExit;]            2022-03-22      20:27      T12 Analisar como criar os comandos CmIncluir, cmAlterar, cmExcluir, cmConsulta para a tabela TDmxScroller      Criar os comandos: ✅      Public Procedure DoOnNewRecord;overload;override; //Usado para inicializa os parametros de um novo registro   Public Procedure PutRec;Override;//Grava o buffer no arquivo memo   Public Procedure GetRec;Override;//O primeiro registro esta gravado em Value   Public Function DeleteRec:Boolean;Override;   Function UpdateRec: Boolean;Override;   Function UpdateRec_if_RecordAltered:Boolean;Override;   Function PrevRec : Boolean;overload;override;   Function NextRec : Boolean;overload;override;               2022-03-23      Criar método Public Function AddRec:Boolean;Override; ✅      Para que DoAddrec possa adicionar o registro é necessário que o registro esteja selecionando, ou seja no modo edit.   Obs: Está com problema.         2022-03-25      Estudar página sobre o banco de dados firebird ✅      2022-03-28      Em TUiDmxScroller_sql.DoOnNewRecord; está executando o método (CustomBufDataset as TSQLQuery).Append; antes do componenente TUiDmxScroller_sql está visível e isto está gerando exceção. -      2022-03-30      Implementar a conexão com o banco de dados usando o componente Mi_Application.      2022-04-14      Debugar o método TUiDmxScroller_sql.AlterTable.      2022-04-15      O método TUiDmxScroller_sql.AlterTable precisa reconhecer a sintaxe do banco de dados selecionado.      O postgresSQL sintaxe:      CREATE TABLE [IF NOT EXISTS] table_name ( column1 datatype(length) column_contraint, column2 datatype(length) column_contraint, column3 datatype(length) column_contraint, table_constraints );   REFERÊNCIA      [postgresql-create-table](https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-create-table/)         O sqLite3 sintaxe:      CREATE TABLE [IF NOT EXISTS] [schema_name].table_name ( column_1 data_type PRIMARY KEY, column_2 data_type NOT NULL, column_3 data_type DEFAULT 0,table_constraints) [WITHOUT ROWID];   REFERÊNCIA:      [sqlite-create-table](https://www.sqlitetutorial.net/sqlite-create-table/)                        ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.html"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos", "text": "A class TDmxScroller_sql_Atributos contém os atributos da class TDmxScroller_sql   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos.html"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos.CustomBufDataset", "text": "O atributo pública CustomBufDataset é definida em CreateCustomBufDataset_FieldDefs que é executado em TDmxScroller.CreateData baseado na estrutura do Template passado por GetTemplate.       NOTA      O atributo CustomBufDataset deve ser passado por DataSource.DataSet.   Em CreateCustomBufDataset_FieldDefs é criado os campo da propriedade CustomBufDataset se a propriedade (DataSource&lt;&gt;nil) e (DataSource.DataSet &lt;&gt; nil).   Se a propriedade DataSource.DataSet = nil então a propriedade CustomBufDataset=nil   O método CreateCustomBufDataset_FieldDefs reconhece duas possibilidade para os descendentes de CustomBufDataset quais sejam:      [TBufDataset](https://www.freepascal.org/docs-html/fcl/bufdataset/tbufdataset.html)   TCustomSQLQuery      Preciso das propriedades de acesso a banco de dados SQL.   O evento OnGetTemplate deve setar as propriedades customizadas de TCustomSQLQuery.            REFERẼNCIA:      [tcustombufdataset](https://www.freepascal.org/daily/packages/fcl-db/bufdataset/tcustombufdataset-14.html)   [tcustomsqlquery](https://www.freepascal.org/docs-html/fcl/sqldb/tcustomsqlquery.html)   TCustomBufDataset;   [TBufDataSet](https://wiki.freepascal.org/How_to_write_in-memory_database_applications_in_Lazarus/FPC#TBufDataSet)   [tstatementtype.html](https://www.freepascal.org/docs-html/fcl/sqltypes/tstatementtype.html)   [tsqlquery](https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.html)   [tdatasetstate](https://www.freepascal.org/docs-html/fcl/db/tdatasetstate.html)   [How_to_connect_to_a_database_server](https://wiki.freepascal.org/SqlDBHowto#How_to_connect_to_a_database_server.3F)   [Example:_reading_data_from_a_table](https://wiki.freepascal.org/SqlDBHowto#Example:_reading_data_from_a_table)   [How_to_execute_direct_queries.2Fmake_a_table](https://wiki.freepascal.org/SqlDBHowto#How_to_execute_direct_queries.2Fmake_a_table.3F)   [How_to_read_data_from_a_table](https://wiki.freepascal.org/SqlDBHowto#How_to_read_data_from_a_table.3F)   [Why_does_TSQLQuery.RecordCount_always_return](https://wiki.freepascal.org/SqlDBHowto#Why_does_TSQLQuery.RecordCount_always_return_10.3F)   [Como usar SQLDb no Lazarus](https://wiki.freepascal.org/SqlDBHowto#Lazarus)   [Trabalhando com tabelas relacionadas](https://wiki.freepascal.org/MasterDetail)   [How_to_change_data_in_a_table](https://wiki.freepascal.org/SqlDBHowto#How_to_change_data_in_a_table.3F)   [How_does_SqlDB_send_the_changes_to_the_database_server](https://wiki.freepascal.org/SqlDBHowto#How_does_SqlDB_send_the_changes_to_the_database_server.3F)   [How_to_handle_Errors](https://wiki.freepascal.org/SqlDBHowto#How_to_handle_Errors)   [How_to_execute_a_query_using_TSQLQuery](https://wiki.freepascal.org/SqlDBHowto#How_to_execute_a_query_using_TSQLQuery.3F)   [How_to_use_parameters_in_a_query](https://wiki.freepascal.org/SqlDBHowto#How_to_use_parameters_in_a_query.3F)   [Select_query](https://wiki.freepascal.org/SqlDBHowto#Select_query)   [Exemplo de SQLQuery com parãmetros](https://wiki.freepascal.org/SqlDBHowto#Example)   Troubleshooting:_TSQLConnection_logging      [Exemplo de log](https://wiki.freepascal.org/SqlDBHowto#FPC_.28or:_the_manual_way.29)            ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos.html#CustomBufDataset"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql", "text": "A classe TUiDmxScroller_sql implementa o acesso ao banco de dados usando o atributo CustomBufDataset       NOTA      O atributo CustomBufDataset pode ser TBufDataset não conectado a banco de dados sql e TCustomSQLQuery conectado ao banco de dados SQL.      REFERÊNCIA      [Working_With_TSQLQuery](https://wiki.freepascal.org/Working_With_TSQLQuery)   [Parameters_in_TSQLQuery](https://wiki.freepascal.org/Working_With_TSQLQuery#Parameters_in_TSQLQuery.SQL)   [sql-basico](https://www.devmedia.com.br/sql-basico/28877)         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql._DataSource", "text": "   ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#_DataSource"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.SetDataBase", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#SetDataBase"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.Create", "text": "Constrói o componente    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#Create"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetkeysPrimaryComposite", "text": "O método GetkeysPrimaryComposite retorna a lista de campos pertencentes a chave composta primária.    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetkeysPrimaryComposite"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetKeysPrimary", "text": "A função GetKeysPrimary retorna a chave primária composta ou não na tabela.       Como TSQLQuery trata os campos de chave primária      Ao atualizar registros, TSQLQuery precisa saber quais campos compõem a chave primária que pode ser usada para atualizar o registro e quais campos devem ser atualizados: com base nessas informações, ele constrói um comando SQL UPDATE, INSERT ou DELETE.   A construção da instrução SQL é controlada pela propriedade UsePrimaryKeyAsKey e pelas propriedades ProviderFlags .   A propriedade Providerflags é um conjunto de 3 sinalizadores:      pfInkey : O campo faz parte da chave primária   pfInWhere : O campo deve ser utilizado na cláusula WHERE das instruções SQL.   pfInUpdate : Atualizações ou inserções devem incluir este campo. Por padrão, ProviderFlags consiste apenas em pfInUpdate .   NOTA*      Se sua tabela tiver uma chave primária (conforme descrito acima), você só precisará definir a propriedade **UsePrimaryKeyAsKey    como True e tudo será feito para você. Isso definirá o sinalizador pfInKey para os campos de chave primária.         REFERÊNCIA      [Working With TSQLQuery e Primary_key_Fields](https://wiki.freepascal.org/Working_With_TSQLQuery#Primary_key_Fields)          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetKeysPrimary"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.CreateTable", "text": "A função CreateTable cria a tabela se a mesma não existir    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#CreateTable"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.AlterTable", "text": "O método AlterTable cria a tabela ou consulta TableName no banco de dados caso a propriedade TableName não existe no banco de dados e TableName seja diferente de vazio.       O método TUiDmxScroller_sql.AlterTable precisa reconhecer a sintaxe do banco de dados selecionado.      O postgresSQL sintaxe:      CREATE TABLE [IF NOT EXISTS] table_name ( column1 datatype(length) column_contraint, column2 datatype(length) column_contraint, column3 datatype(length) column_contraint, table_constraints );   REFERÊNCIA      [postgresql-create-table](https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-create-table/)         O sqLite3 sintaxe:      CREATE TABLE [IF NOT EXISTS] [schema_name].table_name ( column_1 data_type PRIMARY KEY, column_2 data_type NOT NULL, column_3 data_type DEFAULT 0,table_constraints) [WITHOUT ROWID];   REFERÊNCIA:      [lang_createtable.html](https://www.sqlite.org/lang_createtable.html)   [sqlite-create-table](https://www.sqlitetutorial.net/sqlite-create-table/)   [lang_createtable.html](https://www.sqlite.org/lang_createtable.html)            NOTAS      As tabelas só são criadas automaticamente caso a constante AlterTableQL = true.   Ao adiciona uma coluna que já exista no banco de dados o sistema trata a exceção e tenta adicionar a próxima coluna. Motivo: Poder expandir a tabela dinâmicamente.   O comportamento do Banco de dados SqLite ao criar uma tabela é diferente do postgres.      O sqLite não permite criar tabela vazia.             ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#AlterTable"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.SetSqlCustomBufDataset", "text": "O método SetSqlCustomBufDataset inicializa as propriedades SQLs de CustomBufDataset       PROPRIEDADES OBRIGATÓRIAS SEREM INICIALIZADAS:      CustomBufDataset.SQL;      PROPRIEDADES OPCIONAIS SEREM INICIALIZADAS:      CustomBufDataset.InsertSQL;   CustomBufDataset.UpdataSQL;   CustomBufDataset.DeleteSQL;   CustomBufDataset.RefreshSQL;      GERAÇÃO AUTOMÁTICA DE INSTRUÇÃO SQL DE ATUALIZAÇÃO      O SqlDb (mais em particular, TSQLQuery ) pode gerar automaticamente instruções de atualização para os dados que busca. Para isso, ele irá varrer a instrução propriedade CustomBufDataset.SQL e determinar a tabela principal na consulta: esta é a primeira tabela encontrada na parte FROM da instrução SELECT .      Exemplo:      SELECT * FROM ALUNOS         Alunos será a tabela selecionada para uso dos campos de TField.         Para operações INSERT e UPDATE, a propriedade instrução SQL gerada inserirá e atualizará todos os campos que possuim pfInUpdate em sua propriedade TField.ProviderFlags.      Os campos somente leitura não serão adicionados à instrução SQL.   Os campos que são NULL não serão adicionados a uma consulta de inserção, o que significa que o servidor de banco de dados inserirá o que estiver na cláusula DEFAULT da definição de campo correspondente.      O campos de chave primária      Ao atualizar registros, TSQLQuery precisa saber quais campos compõem a chave primária que pode ser usada para atualizar o registro e quais campos devem ser atualizados: com base nessas informações, ele constrói os comandos SQL UPDATE, INSERT ou DELETE.   A construção da instrução SQL é controlada pela propriedade UsePrimaryKeyAsKey e pelas propriedades ProviderFlags.   A propriedade TField.ProviderFlag é um conjunto de 6 sinalizadores:      pfInUpdate : As alterações no campo devem ser propagadas para o banco de dados..   pfInWhere : O campo deve ser usado na cláusula WHERE de uma instrução de atualização no caso de upWhereChanged.   pfInKey : Campo é um campo chave e usado na cláusula WHERE de uma instrução de atualização.   pfHidden : O valor deste campo deve ser atualizado após a inserção.   pfRefreshOnInsert : O valor deste campo deve ser atualizado após a inserção.   pfRefreshOnUpdate : O valor deste campo deve ser atualizado após a atualização.            REFERẼNCIAS      [TSQLQuery Introdução](https://wiki.freepascal.org/Working_With_TSQLQuery#General)   [TSQLQuery exemplos](https://wiki.freepascal.org/TSQLQuery)   https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.html   Trabalhando com TSQLQuery;   updatesqls.html;          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#SetSqlCustomBufDataset"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.CreateCustomBufDataset_FieldDefs", "text": "O método CreateCustomBufDataset_FieldDefs é usado para criar os campos de CustomBufDataset    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#CreateCustomBufDataset_FieldDefs"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetTemplate", "text": "O método GetTemplate retorna uma lista de PSItem (Lista de strings) com o modelo usado para criar a tela.       NOTA      O Evento onGetTemplate só é iniciado em tempo de execução, por isso o formulário não pode ser criado em tempo de desenho do aplicativo.   Caso o evento onGetTemplate seja nil, então não posso ativar a tela.   Esse método pode ser anulado, caso se queira ignorar o evento onGetTemplate e definir o Template em uma método pai herdado desta classe.          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetTemplate"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetBuffers", "text": "O método GetBuffers ler o buffer dos campos dos arquivos associados a classe TUiDmxScroller_sql para o buffer dos campos da classe TUiDmxScroller    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.PutBuffers", "text": "O método PutBuffers grava o buffer dos campos da classe TUiDmxScroller_sql para o buffer dos campos dos arquivos associados a classe TUiDmxScroller_sql    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#PutBuffers"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.SetActiveLCL", "text": "    ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#SetActiveLCL"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.DoOnNewRecord", "text": "O método DoOnNewRecord seleciona o registro para adição de um novo registro      NOTA      Está gerando exceção.?????          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#DoOnNewRecord"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.DoAddRec", "text": "O método DoAddRec adicione o registro editado no banco de dados. = OBSERVAÇÂO      O método DoAddRec só funciona se o registro atender as seguintes condições:      appending =true;   Mb_St_Insert habilidado   CustomBufDataset &lt;&gt; nil   CustomBufDataset.Active = true;           REFERÊNCIA      [tsqlquery.options](https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.options.html)          ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#DoAddRec"},
     {"title": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.DataSource", "text": "A propriedade DataSource permite que controles da LCL (Lazarus Componenents Library) possam usar os dados do componenente TDmxScroller.       NOTA      Essa integração permite que TDmxScroller utilize todos os componentes de banco de dados do Free Pascal.         ", "tags": "", "url": "mi_rtl_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#DataSource"},
     {"title": "mi_rtl_ui_interfaces", "text": "     A unit mi_rtl_ui_interfaces é usada para implementar as interfaces do pacote mi.ui com propopósito de permitir que se possa criar as interfaces com usuário independente do pacote gráfico instalado.       NOTA      O IDE Lazarus cria automaticamente o número da interface. Tecla: Crt+Alt+G            ", "tags": "", "url": "mi_rtl_ui_interfaces.html"},
     {"title": "mi_rtl_ui_interfaces.IITable", "text": "   ", "tags": "", "url": "mi_rtl_ui_interfaces.html#IITable"},
     {"title": "mi_rtl_ui_interfaces.IIInputText", "text": "   ", "tags": "", "url": "mi_rtl_ui_interfaces.html#IIInputText"},
     {"title": "mi_rtl_ui_interfaces.TEnum_HelpCtx_StrCurrentCommand_Topic_Content_run", "text": "    HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_Indefinido    HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_indicator    HelpCtx_StrCurrentCommand_Topic_Content_run_Parameter_File   ", "tags": "", "url": "mi_rtl_ui_interfaces.html#TEnum_HelpCtx_StrCurrentCommand_Topic_Content_run"},
     {"title": "mi_rtl_ui_methods", "text": "   ", "tags": "", "url": "mi_rtl_ui_methods.html"},
     {"title": "mi_rtl_ui_methods.TUiMethods", "text": "   ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateAppendFields", "text": "A class function CreateAppendFields é usado para encandear Templates do tipo TString    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateAppendFields"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateBlobField", "text": "A class function CreateBlobField é usado para encandear campos do tipo blob    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateBlobField"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateEnumField", "text": "A class function CreateEnumField é usado para encandear Templates do tipo enumerado    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateEnumField"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateCheckBoxField", "text": "A class function CreateCheckBoxField é usado para encandear Templates do tipo checkbox    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateCheckBoxField"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateTSItemFields", "text": "A class function CreateTSItemFields é usado para encandear Templates do tipo PSItem    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateTSItemFields"},
     {"title": "mi_rtl_ui_methods.TUiMethods.CreateOptions", "text": "A class function CreateOptions é usado para informar uma lista de opções para o campo.       NOTA O campo que pode receber uma lista pode ser de qualquer tipo, exceto os tipos:      FldEnum,FldBoolean e FldRadioButton.      EXEMPLO DE USO      with aUiDmxScroller do begin   add('&tilde;_EXEMPLO DE TEMPLATE________________________________________&tilde;');   add('');   add('&tilde;Vencimento:&tilde;\\Ssssss'+ChFN+'Vencimento'+CreateOptions(1,NewSItem('Dia 10',                                                                NewSItem('Dia 15',                                                                NewSItem('Dia 20',                                                                NewSItem('Dia 25',                                                                nil)))))+'&tilde; dias&tilde;');    add('&tilde;     Prazo:&tilde;\\BB'+ChFN+'Dias'+CreateOptions(2,NewSItem('30',                                                      NewSItem('60',                                                      NewSItem('90',                                                      NewSItem('120',                                                      nil)))))+'&tilde; dias&tilde;');    add(''); end;         ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#CreateOptions"},
     {"title": "mi_rtl_ui_methods.TUiMethods.GetMaxTViRect", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#GetMaxTViRect"},
     {"title": "mi_rtl_ui_methods.TUiMethods.AnsiString_to_TCollectionString", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#AnsiString_to_TCollectionString"},
     {"title": "mi_rtl_ui_methods.TUiMethods.MsgDlgButtons_To_MsgDlgBtn", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#MsgDlgButtons_To_MsgDlgBtn"},
     {"title": "mi_rtl_ui_methods.TUiMethods.FStrSelection", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#FStrSelection"},
     {"title": "mi_rtl_ui_methods.TUiMethods.EliminaTilDeTodasAsStrings", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#EliminaTilDeTodasAsStrings"},
     {"title": "mi_rtl_ui_methods.TUiMethods.GetModalResult", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#GetModalResult"},
     {"title": "mi_rtl_ui_methods.TUiMethods.isValueDbChanged", "text": "O método isValueDbChanged verifica se o componente fornecido tem uma relação com db e o conteúdo foi alterado    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#isValueDbChanged"},
     {"title": "mi_rtl_ui_methods.TUiMethods.TextWidthChar", "text": "    ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#TextWidthChar"},
     {"title": "mi_rtl_ui_methods.TUiMethods.FMb_Bits", "text": "O método FMb_Bits retorna o mapa de bits da posição aBit. Ou seja: a função move o bit para a esquerda aBits posição.       NOTA      Como o mapa de bits possui 4 bytes este método gera exceção se aBit for maior que 32.      Example:      Command is: 00000100 shl 2 (shift left 2 bits)   Action is: 00000100 &lt;- 00 (00 gets added to the right of the value; left 00 &quot;disappears&quot;)   Result is: 00010000          ", "tags": "", "url": "mi_rtl_ui_methods.TUiMethods.html#FMb_Bits"},
     {"title": "mi_rtl_ui_types", "text": "A unit mi_rtl_ui_types implementa a classe TUiTypes.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi_ui_types.pas   HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br) ✅   2022-03-16      19:49      Criar o tipo TStrSQL com objetivo de criar sql para qualquer banco de dados conhecido pelo sistema. ✅                  ", "tags": "", "url": "mi_rtl_ui_types.html"},
     {"title": "mi_rtl_ui_types.TUiTypes", "text": "A class TUiTypes concentra todos os tipo do pacote mi.ui.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.PRCommand", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#PRCommand"},
     {"title": "mi_rtl_ui_types.TUiTypes.PRCommands", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#PRCommands"},
     {"title": "mi_rtl_ui_types.TUiTypes.PValue", "text": "O tipo PValue é usado para acessar o dados do registro quando se sabe o tipo   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#PValue"},
     {"title": "mi_rtl_ui_types.TUiTypes.PViRect", "text": "O tipo **PViRect é usado é usado para calcular os retângulos vizinhos do retângulado atual   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#PViRect"},
     {"title": "mi_rtl_ui_types.TUiTypes.TDirection", "text": "O tipo TDirection é usado por TViRect para indicar o sentido do cálculo do novo retângulo    North  Nort = Acima da origem  South  Sul = Abaixo da origem  West  oeste A esquerda da origem  East  Leste = A direita da origem  CenterX  Centro de X da origem  CenterY  Centro de Y da origem  CenterXY  Centro de XY da origem ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TDirection"},
     {"title": "mi_rtl_ui_types.TUiTypes.TForeignKey", "text": "O tipo TForeignKey é usado para criar integridade referêncial.       REFERÊNCIA      [sql-createtable](https://www.postgresql.org/docs/11/sql-createtable.html)   [postgresql-foreign-key](https://www.postgresqltutorial.com/postgresql-foreign-key/)   [Introdução à restrição de chave estrangeira do PostgreSQL](https://www.postgresqltutorial.com/postgresql-foreign-key/)      OBSERVAÇÕES      As ações de TForeignKey são combinadas com o comando On Delete e On Update.      Exemplo:      Fk_action_No_Action = ON DELETE NO ACTION ON UPDATE NO ACTION   Fk_action_Restrict = ON DELETE RESTRICT ON UPDATE RESTRICT   Fk_Action_Cascade = ON DELETE CASCADE ON UPDATE CASCADE   Fk_Action_Set_Null = ON DELETE SET NULL ON UPDATE SET NULL   Fk_Action_Set_Default = ON DELETE SET DEFAULT ON UPDATE SET DEFAULT         Se as colunas referenciadas forem alteradas com frequência, pode ser aconselhável adicionar um índice às colunas de referência para que as ações referenciais associadas à restrição de chave estrangeira possam ser executadas com mais eficiência.          Fk_No_Action  Produz um erro indicando que a exclusão ou atualização criaria uma violação de restrição de chave estrangeira. Se a restrição for adiada, esse erro será produzido no momento da verificação da restrição se ainda existirem linhas de referência. Esta é a ação padrão.  Fk_Restrict  Produz um erro indicando que a exclusão ou atualização criaria uma violação de restrição de chave estrangeira. Isso é o mesmo que, NO ACTION exceto que o cheque não é adiável.  Fk_Cascade  Exclua todas as linhas que fazem referência à linha excluída ou atualize os valores das colunas de referência para os novos valores das colunas referenciadas, respectivamente.  Fk_Set_Null  Defina a(s) coluna(s) de referência como nula.  Fk_Set_Default  Defina a(s) coluna(s) de referência para seus valores padrão. (Deve haver uma linha na tabela referenciada que corresponda aos valores padrão, se eles não forem nulos, ou a operação falhará. ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TForeignKey"},
     {"title": "mi_rtl_ui_types.TUiTypes.TipoProc", "text": "O tipo TipoProc é usado quando se precisa de procedures anônimas sem parâmetros    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TipoProc"},
     {"title": "mi_rtl_ui_types.TUiTypes.TIRCommands", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TIRCommands"},
     {"title": "mi_rtl_ui_types.TUiTypes.TMiProviderFlag", "text": "Usado por TDmxScroller_sql para criar consulta sql no banco de dados       REFERÊNCIA      [Ótimo exemplo de uso das contantes abaixo](https://www.devmedia.com.br/providerflags-no-delphi-atualizando-dados-de-uma-unica-tabela/26689)          pfInUpdate  Usado por SqlDbConnector : As alterações no campo devem ser propagadas para o banco de dados..  pfInWhere  Usado por SqlDbConnector : O campo deve ser usado na cláusula WHERE de uma instrução de atualização no caso de upWhereChanged.  pfInKey  Usado por SqlDbConnector : Indica se o campo é parte da Chave Primária.      Campo é um campo chave e usado na cláusula WHERE de uma instrução de atualização.     pfHidden    pfRefreshOnInsert  Usado por SqlDbConnector : O valor deste campo deve ser atualizado após a inserção.  pfRefreshOnUpdate  Usado por SqlDbConnector : O valor deste campo deve ser atualizado após a atualização.  pfInKeyPrimary  Usado por TDmxScroller_sql : Campo é um campo chave primária e usado na cláusula WHERE de uma instrução de atualização.  pfInAutoIncrement  Usado por TDmxScroller_sql : Campo é um campo autoincremental e usado em uma instrução de atualização. ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TMiProviderFlag"},
     {"title": "mi_rtl_ui_types.TUiTypes.TMiProviderFlags", "text": "O tipo TMiProviderFlags é usado pelo componente TDataSet para gerar instruções sql de acesso ao banco de dados.      REFERÊNCIA:      [providerflags atualizando dados de uma única tabela](https://www.devmedia.com.br/providerflags-no-delphi-atualizando-dados-de-uma-unica-tabela/26689)         ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TMiProviderFlags"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommands", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.html#TRCommands"},
     {"title": "mi_rtl_ui_types.TOverflow", "text": "Coordenada X do contato superior esquerdo.   ", "tags": "", "url": "mi_rtl_ui_types.TOverflow.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.TOverflow.XA_Min", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TOverflow.html#XA_Min"},
     {"title": "mi_rtl_ui_types.TUiTypes.TOverflow.YA_Min", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TOverflow.html#YA_Min"},
     {"title": "mi_rtl_ui_types.TUiTypes.TOverflow.XB_Max", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TOverflow.html#XB_Max"},
     {"title": "mi_rtl_ui_types.TUiTypes.TOverflow.YB_Max", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TOverflow.html#YB_Max"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.StrCommand", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#StrCommand"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.Name", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#Name"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.Param", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#Param"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.KeyCode", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#KeyCode"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.HelpCtx_Hint", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#HelpCtx_Hint"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.AHelpCtx", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#AHelpCtx"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.State", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#State"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.Mb_Bits", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#Mb_Bits"},
     {"title": "mi_rtl_ui_types.TUiTypes.TRCommand.Flags_Buttons", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TRCommand.html#Flags_Buttons"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL", "text": "O record TStrSQL é usado para padronizar os comandos sql independente do banco de dados.       Os geradores de código não usa string diretamente e sim a variável que contém o comando, isso é necessário porque os bancos de dados não são padronizados.       Exemplo:      Comando para criar um campo Integer com 4 bytes com chave primária e autoincremental:      SqLite = Integer PRIMARY KEY AUTOINCREMENT   PostgreSQL = SERIAL PRIMARY KEY            REFERẼNCIA      [Planilha com sintaxe dos banco de dados aceitos](https://docs.google.com/spreadsheets/d/16jchX4-1KfGUn7c0Qp_GD7YVEbZ0Yh49OjkKYXo0WCE/edit#gid=0)         ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.strictt", "text": "O campo strictt é usado no SqLite após a declaração de criação da tabela indicando que deve considerar os tipos de dados   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#strictt"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Create", "text": "O comando Create Cria tabela no bancod e dados.      REFERÊNCIA      [sql-createtable](https://www.postgresql.org/docs/11/sql-createtable.html)         ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Create"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.table", "text": "Clausula Table. Padrão   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#table"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.if_not_exists", "text": "Clausula indicando que não faça nada caso o nome seguinte exista no banco de dados.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#if_not_exists"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.not_null", "text": "restrição indicando que não pode conter valor nulo.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#not_null"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.CreateTable", "text": "O comando CreateTable é usado para criar tabela   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#CreateTable"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.CreateTable_AddColString", "text": "Adiciona um coluna tipo string na clausula Create Table   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#CreateTable_AddColString"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.CreateTable_AddColNumber", "text": "Adiciona um coluna tipo número na clausula Create Table   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#CreateTable_AddColNumber"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.AlterTable_AddColString", "text": "Adiciona um coluna tipo string na clausula Alter Table   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#AlterTable_AddColString"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.AlterTable_AddColNumber", "text": "Adiciona um coluna tipo número na clausula Alter Table   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#AlterTable_AddColNumber"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Select", "text": "Clausula Select - Padrão   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Select"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.From", "text": "Clausula from - Padrão   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#From"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.PrimaryKey", "text": "Chave primária número usada com a clausula AutoIncrement.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#PrimaryKey"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.PrimaryKeyComposite", "text": "Chave primária composta usada em create Table.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#PrimaryKeyComposite"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.PrimaryKeyCompositeAlterTable", "text": "Chave primária composta usada em Alter Table   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#PrimaryKeyCompositeAlterTable"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Unique", "text": "Essa clausula cria um índice com chave única e composta ou não.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Unique"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.AutoIncrement", "text": "Indica que a coluna é numérica e que a sequência é criada automaticamente.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#AutoIncrement"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Longint_PrimaryKey_AutoIncrement", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Longint_PrimaryKey_AutoIncrement"},
     {"title": "mi_rtl_ui_types.byte", "text": "Acoluna é do tipo byte. ( 1 posição)   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#byte"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.SmallInt", "text": "Acoluna é do tipo smallint. ( 2 posições)   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#SmallInt"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Longint", "text": "Acoluna é do tipo longint. ( 4 posições)   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Longint"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Real4", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Real4"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Real8", "text": "A coluna é do tipo single   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Real8"},
     {"title": "mi_rtl_ui_types.char", "text": "Acoluna é do tipo char. ( 1 posição)   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#char"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Ansi_String", "text": "Tipo string de tamanho fixo.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Ansi_String"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.Array_Char", "text": "Tipo array de char de tamanho fixo preenchido com espaço em branco.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#Array_Char"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.memo", "text": "Tipo de campo memo no banco de dados   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#memo"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey", "text": "Expressão para criar restrição de chave estrangeira ou seja relacionamentos.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey_SetNull", "text": "Caso o registro da tabela pai seja excluído o campo da tabela filha torna-se o valor nulo.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey_SetNull"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey_SetDefault", "text": "Caso o registro da tabela pai seja excluído o campo da tabela filha torna-se o padrão para o campo.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey_SetDefault"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey_Restrict", "text": "Não permite incluir um registro na filha se o mesmo não existir na tabela pai.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey_Restrict"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey_NoAction", "text": "Não faz nada   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey_NoAction"},
     {"title": "mi_rtl_ui_types.TUiTypes.TStrSQL.ForeignKey_Cascade", "text": "Caso um registro da tabela pai seja excluído então deleta todos os registro da tabela filha.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TStrSQL.html#ForeignKey_Cascade"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPointer", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPointer"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asLongint", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asLongint"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPLongint", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPLongint"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asWord", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asWord"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPWord", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPWord"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asSmallInt", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asSmallInt"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPSmallInt", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPSmallInt"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asByte", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asByte"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPByte", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPByte"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asAnsiChar", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asAnsiChar"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPAnsiChar", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPAnsiChar"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsString", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsString"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPString", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPString"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsStr255", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsStr255"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPStr255", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPStr255"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArrayAnsiChar512", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArrayAnsiChar512"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArrayByte", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArrayByte"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArraySmallInt", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArraySmallInt"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArrayLongint", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArrayLongint"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArrayPointer", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArrayPointer"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsArrayPAnsiChar", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsArrayPAnsiChar"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsReal", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsReal"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPReal", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPReal"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsDouble", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsDouble"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPDouble", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPDouble"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsRealNum", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsRealNum"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPRealNum", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPRealNum"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsExtended", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsExtended"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.AsPExtended", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#AsPExtended"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asDate", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asDate"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPDate", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPDate"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asSHORTINT", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asSHORTINT"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPSHORTINT", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPSHORTINT"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asCluster", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asCluster"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPCluster", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPCluster"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asBOOLEAN", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asBOOLEAN"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asPBOOLEAN", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asPBOOLEAN"},
     {"title": "mi_rtl_ui_types.TUiTypes.TValue.asSmallWord", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TValue.html#asSmallWord"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect", "text": "O registro TViRect usado para calcular retângulo baseado em uma origem e seu visinho na direção de TDirection       NOTA      Exemplo de uso está na unit : mi.rtl.objects.methods.ui.Dmxscroller.test;   O Exemplo foi criado para executar modo console.   Para testar no modo console veja o projeto rtl/TestTviRect         ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.A", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#A"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.B", "text": "   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#B"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.R_New_Limits", "text": "R_new.A deve ser maior ou igual R_New_Limit.A e R_new.B deve ser menor ou igual R_New_Limit.B   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#R_New_Limits"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.R_Neighbor", "text": "O quadro R_Neighbor guarda o retângulo vizinho do novo retângulo a ser gerado   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#R_Neighbor"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.R_New", "text": "O retângulo R_New contém o novo retângulo calculado por GetRec   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#R_New"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.Overflow", "text": "Se alguma as coordenadas for negativa overflow=true   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#Overflow"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.ROverflow", "text": "Inform o lado que gerou overflow   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#ROverflow"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.AddCol_overfow", "text": "True = Adiciona uma nova linha ao encontrar overflow.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#AddCol_overfow"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.AddRow_overfow", "text": "True = Adiciona uma nova coluna ao encontrar overflow.   ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#AddRow_overfow"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.Assign", "text": "A procedure Assign inicia o ponto A e Ponto B com os parâmetros passado    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#Assign"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.Copy", "text": "A procedure Copy copia o retângulo passodo por R para os pontos A e B    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#Copy"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.AssignLimits", "text": "A procedure AssignLimits inicia os limites da janela na qual os retângulo serão calculados    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#AssignLimits"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.Adjust_if_not_valid", "text": "    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#Adjust_if_not_valid"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect_Relative", "text": "A função GetRect_Relative receber o retando em aR_Neighbor e retorna em aR_New um retângulo a direta ou a esquerda ou acima ou abaixo de aR_Neighbor.    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect_Relative"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect_Absolute", "text": "A função GetRect_Absolute calcula um novo retângulo de largura aWidth e altura aHeight vizinho nas quatro direções da origem aR_Neighbor    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect_Absolute"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect_Absolute", "text": "    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect_Absolute"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect_AddCol", "text": "A função GetRect_AddCol calcula um retângula a direita do corrente, se passar do limite direito adiciona uma nova linha.    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect_AddCol"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect_AddRow", "text": "A função GetRect_AddRow calcula um retângula a abaixo do corrente e se passar do limite Limit.B.Y adiciona uma nova Coluna.    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect_AddRow"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.Set_Max_Ax_e_Max_BY", "text": "    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#Set_Max_Ax_e_Max_BY"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.MoveTo", "text": "O método MoveTo move o retangulo para o pornto x,y    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#MoveTo"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.MoveTo_Direction", "text": "O método MoveTo_Direction move o retangula para as direções passada por adirection    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#MoveTo_Direction"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.MoveTo_Direction", "text": "A procedure MoveTo_Direction ajusta o retângulo filho dentro do retângulo limites levando em consideracao as coordenadas geográficas.    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#MoveTo_Direction"},
     {"title": "mi_rtl_ui_types.TUiTypes.TViRect.GetRect", "text": "A procedure GetRect retorna o ponto calculado    ", "tags": "", "url": "mi_rtl_ui_types.TUiTypes.TViRect.html#GetRect"},
     {"title": "mi_ui_Dmxscroller_sql", "text": "A unit mi_ui_Dmxscroller_sql implementa a classe TUiDmxScroller_sql.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi_ui_Dmxscroller_sql.pas   PENDÊNCIAS      T12 Falta implementar chave estrangeira em createTable;   T12 Em TUiDmxScroller_sql.DoOnNewRecord; está executando o método (CustomBufDataset as TSQLQuery).Append; antes do componenente TUiDmxScroller_sql está visível e isto está gerando exceção.   T12 ANÁLISE      [Estudar os procedimentos armazenados](https://www.w3schools.com/sql/sql_stored_procedures.asp)   [Estudar as restrições SQL](https://www.w3schools.com/sql/sql_constraints.asp)   Como saber se um campo é uma chave que liga outra tabela?      SQL FOREIGN KEY Constraint      /*Não, podemos permitir que os registros das pessoas que possuim camisetas   lavando sejam apagados, para garantir a integridade da informação.   Para isso devemos utilizar o as chaves estrangeiras que acusarão   um erro quando tentarmos deletar uma pessoa que possuir camisetas.   Veja em código: */  CREATE TABLE Pessoa(     IdPessoa INT NOT NULL PRIMARY KEY IDENTITY(1,1),     Nome VARCHAR(20) NOT NULL )  CREATE TABLE Camiseta(     IdCamiseta INT NOT NULL PRIMARY KEY IDENTITY(1,1),     Descrição VARCHAR(20) NOT NULL,     IdPessoa INT NOT NULL     CONSTRAINT FK_Camiseta_Pessoa FOREIGN  KEY(IdPessoa) REFERENCES Pessoa(IdPessoa) )  INSERT INTO Pessoa VALUES ('HeyJoe') INSERT INTO Pessoa VALUES ('Caique')   INSERT INTO Camiseta VALUES ('Azul', 1) INSERT INTO Camiseta VALUES ('Amarela', 1) INSERT INTO Camiseta VALUES ('Preta', 2)  SELECT * FROM Pessoa, Camiseta WHERE Pessoa.IdPessoa = Camiseta.IdPessoa        Como saber o tipo de relacionamento que os campos de outra tabela tem com a tabela atual?      T12 A opção CreateTable está dando mensagem de erro quando a coluna já existe.      Encontrar uma forma de não gerar exceção ou ignorar as exceções nesta rotina.      T12 Em TUiDmxScroller_sql.AlterTable checar:      T12 Criar código para todos os tipos reconhecidos por marIcaraí.   T12 Debugar para saber se está tudo funcionando.   T12 Permitir adicionar uma nova coluna mesmo que a tabela já exista.      T12 Em SetTableName(aTableName:String) criticar o nome aTableName é um nome válido para a tabela.      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br) ✅   2022-03-13      09:00      T12 Implementar a criação de código SQL baseado nos dados de TUiDmxScroller.      ANÁLISE:      Onde pegar o nome da tabela ou consulta? ✅      TUiDmxScroller.CustomBufDataset.FileName;      Onde pegar o nome dos campos da tabela CustomBufDataset.Filename? ✅      A lista de campos encontra-se em : TUiDmxScroller_Atributos.Fields : TFPList;      Como saber se TUiDmxScroller é uma tabela ou a uma consulta?      Se todos os TUiDmxScroller_Atributos.Fields[].FieldName não contém '|' é porque é FileName é uma tabela. ✅   Se pelo menos um TUiDmxScroller_Atributos.Fields[].FieldName contém '|' é porque é FileName é uma consulta envolvendo mais de uma tabela. ✅      Como saber se uma tabela ou consulta existe do banco de dados?      O SQL do postegres e do sqlite3 tem a clausula IN NOT EXISTS no comando CREATE TABLE:      EXEMPLO:     CREATE TABLE IF NOT EXISTS TEST01 ();  ✅              REFERÊNCIAS      SQL:2016      (PostgresSQL aceita 160 das 169 especificação 2016)(https://www.postgresql.org/docs/12/features.html)   [Comparativo entre os bancos de dados x conformidade SQL](https://en.wikipedia.org/wiki/SQL_compliance)   [Clientes de bancos de dados opensource](https://medevel.com/17-sql-client-open-source/)   Instalei programa cliente SQL DBeaver      Obs: Não deu certo. Ele é escrito em java e não funcionou o básico.      [sqlite create database if not exists](https://www.codegrepper.com/code-examples/sql/sqlite+create+database+if+not+exists)                  2022-03-14      08:22      T12 Criar a unit mi_ui_Dmxscroller_sql.pas com a classe TUiDmxScroller_sql com objetivo de concentrar a integração do TDmxScroller com o componente TSQLQuery ✅      20:00      T12 Na Construção de TFields atualizar a propriedade TField.ProviderFlags com o tipo de acesso definido em TDmxFieldRec.Access ✅      21:12      T12 Criar propriedade TableName ✅      21:27      T12 Criar Function SetSqlCustomBufDataset:Boolean;Virtual;      CustomBufDataset.SQL := SELECT * FROM X  onde X será definido pela propriedade TableName ✅            2022-03-15      09:11      Depurar o que fiz ontem para fazer funciona a atualização do banco de dados SQL. ✅      11:36      Criar método TUiDmxScroller_sql.AlterTable : Boolean; ✅      14:38      T12 Atualizar TSQLQury.TFields.ProviderFlags com TUiDmxScroller.MiProviderFlags ✅         2022-03-16      16:23      T12 Em TUiDmxScroller_sql.CreateCustomBufDataset_FieldDefs, atualizar TField.ProviderFlags com os dados do campo TDmxFieldRec.ProviderFlags. ✅      16:54      Em TUiDmxScroller_sql.AlterTable usar os flags TDmxFieldRec.ProviderFlags para criação da tabela. ✅         2022-03-17      10:48      T12 Os flags indicando que se trata de chave primária não está sendo atualizado em createStructor, por isso não está criando a chave primária. ✅         2022-03-18      10:40      T12 Ao criar uma tabela SQL em AlterTable adicionar colunas ao invés de criar a tabela toda. ✅      Motivo:      Permitir que o banco de dados fique compatível com o Template.   Alterar um coluna de forma automática não é bom, porque o que está feito gera dependências que produzirão erros ao fazer essas alterações.               2022-03-21      08:57      T12 Criar function SQL_AddkeysPrimaryKeyComposite(I : Integer):Boolean; ✅      Esta função adiciona chave primária composta na tabela.   REFERÊNCIA      [Como adiconar chave primaria usando a expressão ALTER TABLE](https://www.techonthenet.com/postgresql/primary_keys.php#:&tilde;:text=In%20PostgreSQL%2C%20a%20primary%20key%20is%20created%20using%20either%20a,or%20drop%20a%20primary%20key.)            15:40      T12 Em AlterTable criar a restrição de chave estrangeira no TDmxScroller_sql. ✅      Nome da função: function AddKeyForeigns(I : Integer):Boolean;            2022-03-22      09:00      T12 Documentar as units TuiTypes e TUIConsts. ✅      10:00      T12 Criar os relacionamentos entre tabelas (restrições entre tabelas) ✅      14:14      T12 Depurar os relacionamentos entre tabelas. ✅      18:47      O Componente CustomBufDataset não está entrando no modo edit. ✅      O problema estava nos eventos TScrollBoxDMX.DoOnEnter e TScrollBoxDMX.DoOnExit;]            2022-03-22      20:27      T12 Analisar como criar os comandos CmIncluir, cmAlterar, cmExcluir, cmConsulta para a tabela TDmxScroller      Criar os comandos: ✅      Public Procedure DoOnNewRecord;overload;override; //Usado para inicializa os parametros de um novo registro   Public Procedure PutRec;Override;//Grava o buffer no arquivo memo   Public Procedure GetRec;Override;//O primeiro registro esta gravado em Value   Public Function DeleteRec:Boolean;Override;   Function UpdateRec: Boolean;Override;   Function UpdateRec_if_RecordAltered:Boolean;Override;   Function PrevRec : Boolean;overload;override;   Function NextRec : Boolean;overload;override;               2022-03-23      Criar método Public Function AddRec:Boolean;Override; ✅      Para que DoAddrec possa adicionar o registro é necessário que o registro esteja selecionando, ou seja no modo edit.   Obs: Está com problema.         2022-03-25      Estudar página sobre o banco de dados firebird ✅      2022-03-28      Em TUiDmxScroller_sql.DoOnNewRecord; está executando o método (CustomBufDataset as TSQLQuery).Append; antes do componenente TUiDmxScroller_sql está visível e isto está gerando exceção. -      2022-03-30      Implementar a conexão com o banco de dados usando o componente Mi_Application.      2022-04-14      Debugar o método TUiDmxScroller_sql.AlterTable.      2022-04-15      O método TUiDmxScroller_sql.AlterTable precisa reconhecer a sintaxe do banco de dados selecionado.      O postgresSQL sintaxe:      CREATE TABLE [IF NOT EXISTS] table_name ( column1 datatype(length) column_contraint, column2 datatype(length) column_contraint, column3 datatype(length) column_contraint, table_constraints );   REFERÊNCIA      [postgresql-create-table](https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-create-table/)         O sqLite3 sintaxe:      CREATE TABLE [IF NOT EXISTS] [schema_name].table_name ( column_1 data_type PRIMARY KEY, column_2 data_type NOT NULL, column_3 data_type DEFAULT 0,table_constraints) [WITHOUT ROWID];   REFERÊNCIA:      [sqlite-create-table](https://www.sqlitetutorial.net/sqlite-create-table/)                        ", "tags": "", "url": "mi_ui_Dmxscroller_sql.html"},
     {"title": "mi_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos", "text": "A class TDmxScroller_sql_Atributos contém os atributos da class TDmxScroller_sql   ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos.html"},
     {"title": "mi_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos.CustomBufDataset", "text": "O atributo pública CustomBufDataset é definida em CreateCustomBufDataset_FieldDefs que é executado em TDmxScroller.CreateData baseado na estrutura do Template passado por GetTemplate.       NOTA      O atributo CustomBufDataset deve ser passado por DataSource.DataSet.   Em CreateCustomBufDataset_FieldDefs é criado os campo da propriedade CustomBufDataset se a propriedade (DataSource&lt;&gt;nil) e (DataSource.DataSet &lt;&gt; nil).   Se a propriedade DataSource.DataSet = nil então a propriedade CustomBufDataset=nil   O método CreateCustomBufDataset_FieldDefs reconhece duas possibilidade para os descendentes de CustomBufDataset quais sejam:      [TBufDataset](https://www.freepascal.org/docs-html/fcl/bufdataset/tbufdataset.html)   TCustomSQLQuery      Preciso das propriedades de acesso a banco de dados SQL.   O evento OnGetTemplate deve setar as propriedades customizadas de TCustomSQLQuery.            REFERẼNCIA:      [tcustombufdataset](https://www.freepascal.org/daily/packages/fcl-db/bufdataset/tcustombufdataset-14.html)   [tcustomsqlquery](https://www.freepascal.org/docs-html/fcl/sqldb/tcustomsqlquery.html)   TCustomBufDataset;   [TBufDataSet](https://wiki.freepascal.org/How_to_write_in-memory_database_applications_in_Lazarus/FPC#TBufDataSet)   [tstatementtype.html](https://www.freepascal.org/docs-html/fcl/sqltypes/tstatementtype.html)   [tsqlquery](https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.html)   [tdatasetstate](https://www.freepascal.org/docs-html/fcl/db/tdatasetstate.html)   [How_to_connect_to_a_database_server](https://wiki.freepascal.org/SqlDBHowto#How_to_connect_to_a_database_server.3F)   [Example:_reading_data_from_a_table](https://wiki.freepascal.org/SqlDBHowto#Example:_reading_data_from_a_table)   [How_to_execute_direct_queries.2Fmake_a_table](https://wiki.freepascal.org/SqlDBHowto#How_to_execute_direct_queries.2Fmake_a_table.3F)   [How_to_read_data_from_a_table](https://wiki.freepascal.org/SqlDBHowto#How_to_read_data_from_a_table.3F)   [Why_does_TSQLQuery.RecordCount_always_return](https://wiki.freepascal.org/SqlDBHowto#Why_does_TSQLQuery.RecordCount_always_return_10.3F)   [Como usar SQLDb no Lazarus](https://wiki.freepascal.org/SqlDBHowto#Lazarus)   [Trabalhando com tabelas relacionadas](https://wiki.freepascal.org/MasterDetail)   [How_to_change_data_in_a_table](https://wiki.freepascal.org/SqlDBHowto#How_to_change_data_in_a_table.3F)   [How_does_SqlDB_send_the_changes_to_the_database_server](https://wiki.freepascal.org/SqlDBHowto#How_does_SqlDB_send_the_changes_to_the_database_server.3F)   [How_to_handle_Errors](https://wiki.freepascal.org/SqlDBHowto#How_to_handle_Errors)   [How_to_execute_a_query_using_TSQLQuery](https://wiki.freepascal.org/SqlDBHowto#How_to_execute_a_query_using_TSQLQuery.3F)   [How_to_use_parameters_in_a_query](https://wiki.freepascal.org/SqlDBHowto#How_to_use_parameters_in_a_query.3F)   [Select_query](https://wiki.freepascal.org/SqlDBHowto#Select_query)   [Exemplo de SQLQuery com parãmetros](https://wiki.freepascal.org/SqlDBHowto#Example)   Troubleshooting:_TSQLConnection_logging      [Exemplo de log](https://wiki.freepascal.org/SqlDBHowto#FPC_.28or:_the_manual_way.29)            ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TDmxScroller_sql_Atributos.html#CustomBufDataset"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql", "text": "A classe TUiDmxScroller_sql implementa o acesso ao banco de dados usando o atributo CustomBufDataset       NOTA      O atributo CustomBufDataset pode ser TBufDataset não conectado a banco de dados sql e TCustomSQLQuery conectado ao banco de dados SQL.      REFERÊNCIA      [Working_With_TSQLQuery](https://wiki.freepascal.org/Working_With_TSQLQuery)   [Parameters_in_TSQLQuery](https://wiki.freepascal.org/Working_With_TSQLQuery#Parameters_in_TSQLQuery.SQL)   [sql-basico](https://www.devmedia.com.br/sql-basico/28877)         ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql._DataSource", "text": "   ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#_DataSource"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.SetDataBase", "text": "    ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#SetDataBase"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.Create", "text": "Constrói o componente    ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#Create"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetkeysPrimaryComposite", "text": "O método GetkeysPrimaryComposite retorna a lista de campos pertencentes a chave composta primária.    ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetkeysPrimaryComposite"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetKeysPrimary", "text": "A função GetKeysPrimary retorna a chave primária composta ou não na tabela.       Como TSQLQuery trata os campos de chave primária      Ao atualizar registros, TSQLQuery precisa saber quais campos compõem a chave primária que pode ser usada para atualizar o registro e quais campos devem ser atualizados: com base nessas informações, ele constrói um comando SQL UPDATE, INSERT ou DELETE.   A construção da instrução SQL é controlada pela propriedade UsePrimaryKeyAsKey e pelas propriedades ProviderFlags .   A propriedade Providerflags é um conjunto de 3 sinalizadores:      pfInkey : O campo faz parte da chave primária   pfInWhere : O campo deve ser utilizado na cláusula WHERE das instruções SQL.   pfInUpdate : Atualizações ou inserções devem incluir este campo. Por padrão, ProviderFlags consiste apenas em pfInUpdate .   NOTA*      Se sua tabela tiver uma chave primária (conforme descrito acima), você só precisará definir a propriedade **UsePrimaryKeyAsKey    como True e tudo será feito para você. Isso definirá o sinalizador pfInKey para os campos de chave primária.         REFERÊNCIA      [Working With TSQLQuery e Primary_key_Fields](https://wiki.freepascal.org/Working_With_TSQLQuery#Primary_key_Fields)          ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetKeysPrimary"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.CreateTable", "text": "A função CreateTable cria a tabela se a mesma não existir    ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#CreateTable"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.AlterTable", "text": "O método AlterTable cria a tabela ou consulta TableName no banco de dados caso a propriedade TableName não existe no banco de dados e TableName seja diferente de vazio.       O método TUiDmxScroller_sql.AlterTable precisa reconhecer a sintaxe do banco de dados selecionado.      O postgresSQL sintaxe:      CREATE TABLE [IF NOT EXISTS] table_name ( column1 datatype(length) column_contraint, column2 datatype(length) column_contraint, column3 datatype(length) column_contraint, table_constraints );   REFERÊNCIA      [postgresql-create-table](https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-create-table/)         O sqLite3 sintaxe:      CREATE TABLE [IF NOT EXISTS] [schema_name].table_name ( column_1 data_type PRIMARY KEY, column_2 data_type NOT NULL, column_3 data_type DEFAULT 0,table_constraints) [WITHOUT ROWID];   REFERÊNCIA:      [lang_createtable.html](https://www.sqlite.org/lang_createtable.html)   [sqlite-create-table](https://www.sqlitetutorial.net/sqlite-create-table/)   [lang_createtable.html](https://www.sqlite.org/lang_createtable.html)            NOTAS      As tabelas só são criadas automaticamente caso a constante AlterTableQL = true.   Ao adiciona uma coluna que já exista no banco de dados o sistema trata a exceção e tenta adicionar a próxima coluna. Motivo: Poder expandir a tabela dinâmicamente.   O comportamento do Banco de dados SqLite ao criar uma tabela é diferente do postgres.      O sqLite não permite criar tabela vazia.             ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#AlterTable"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.SetSqlCustomBufDataset", "text": "O método SetSqlCustomBufDataset inicializa as propriedades SQLs de CustomBufDataset       PROPRIEDADES OBRIGATÓRIAS SEREM INICIALIZADAS:      CustomBufDataset.SQL;      PROPRIEDADES OPCIONAIS SEREM INICIALIZADAS:      CustomBufDataset.InsertSQL;   CustomBufDataset.UpdataSQL;   CustomBufDataset.DeleteSQL;   CustomBufDataset.RefreshSQL;      GERAÇÃO AUTOMÁTICA DE INSTRUÇÃO SQL DE ATUALIZAÇÃO      O SqlDb (mais em particular, TSQLQuery ) pode gerar automaticamente instruções de atualização para os dados que busca. Para isso, ele irá varrer a instrução propriedade CustomBufDataset.SQL e determinar a tabela principal na consulta: esta é a primeira tabela encontrada na parte FROM da instrução SELECT .      Exemplo:      SELECT * FROM ALUNOS         Alunos será a tabela selecionada para uso dos campos de TField.         Para operações INSERT e UPDATE, a propriedade instrução SQL gerada inserirá e atualizará todos os campos que possuim pfInUpdate em sua propriedade TField.ProviderFlags.      Os campos somente leitura não serão adicionados à instrução SQL.   Os campos que são NULL não serão adicionados a uma consulta de inserção, o que significa que o servidor de banco de dados inserirá o que estiver na cláusula DEFAULT da definição de campo correspondente.      O campos de chave primária      Ao atualizar registros, TSQLQuery precisa saber quais campos compõem a chave primária que pode ser usada para atualizar o registro e quais campos devem ser atualizados: com base nessas informações, ele constrói os comandos SQL UPDATE, INSERT ou DELETE.   A construção da instrução SQL é controlada pela propriedade UsePrimaryKeyAsKey e pelas propriedades ProviderFlags.   A propriedade TField.ProviderFlag é um conjunto de 6 sinalizadores:      pfInUpdate : As alterações no campo devem ser propagadas para o banco de dados..   pfInWhere : O campo deve ser usado na cláusula WHERE de uma instrução de atualização no caso de upWhereChanged.   pfInKey : Campo é um campo chave e usado na cláusula WHERE de uma instrução de atualização.   pfHidden : O valor deste campo deve ser atualizado após a inserção.   pfRefreshOnInsert : O valor deste campo deve ser atualizado após a inserção.   pfRefreshOnUpdate : O valor deste campo deve ser atualizado após a atualização.            REFERẼNCIAS      [TSQLQuery Introdução](https://wiki.freepascal.org/Working_With_TSQLQuery#General)   [TSQLQuery exemplos](https://wiki.freepascal.org/TSQLQuery)   https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.html   Trabalhando com TSQLQuery;   updatesqls.html;          ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#SetSqlCustomBufDataset"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.CreateCustomBufDataset_FieldDefs", "text": "O método CreateCustomBufDataset_FieldDefs é usado para criar os campos de CustomBufDataset    ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#CreateCustomBufDataset_FieldDefs"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetTemplate", "text": "O método GetTemplate retorna uma lista de PSItem (Lista de strings) com o modelo usado para criar a tela.       NOTA      O Evento onGetTemplate só é iniciado em tempo de execução, por isso o formulário não pode ser criado em tempo de desenho do aplicativo.   Caso o evento onGetTemplate seja nil, então não posso ativar a tela.   Esse método pode ser anulado, caso se queira ignorar o evento onGetTemplate e definir o Template em uma método pai herdado desta classe.          ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetTemplate"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.GetBuffers", "text": "O método GetBuffers ler o buffer dos campos dos arquivos associados a classe TUiDmxScroller_sql para o buffer dos campos da classe TUiDmxScroller    ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#GetBuffers"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.PutBuffers", "text": "O método PutBuffers grava o buffer dos campos da classe TUiDmxScroller_sql para o buffer dos campos dos arquivos associados a classe TUiDmxScroller_sql    ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#PutBuffers"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.SetActiveLCL", "text": "    ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#SetActiveLCL"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.DoOnNewRecord", "text": "O método DoOnNewRecord seleciona o registro para adição de um novo registro      NOTA      Está gerando exceção.?????          ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#DoOnNewRecord"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.DoAddRec", "text": "O método DoAddRec adicione o registro editado no banco de dados. = OBSERVAÇÂO      O método DoAddRec só funciona se o registro atender as seguintes condições:      appending =true;   Mb_St_Insert habilidado   CustomBufDataset &lt;&gt; nil   CustomBufDataset.Active = true;           REFERÊNCIA      [tsqlquery.options](https://www.freepascal.org/docs-html/fcl/sqldb/tsqlquery.options.html)          ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#DoAddRec"},
     {"title": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.DataSource", "text": "A propriedade DataSource permite que controles da LCL (Lazarus Componenents Library) possam usar os dados do componenente TDmxScroller.       NOTA      Essa integração permite que TDmxScroller utilize todos os componentes de banco de dados do Free Pascal.         ", "tags": "", "url": "mi_ui_Dmxscroller_sql.TUiDmxScroller_sql.html#DataSource"},
     {"title": "mi_ui_mi_msgbox_dm", "text": "   ", "tags": "", "url": "mi_ui_mi_msgbox_dm.html"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox", "text": "TMi_ui_mi_msgBox       EXEMPLO      Var   S : String[10] = ''; begin    if MI_MsgBox.InputBox('InputBox Test','Gual a sua indade? ',s,'ssssssssss') = Mrok    then ShowMessage('Sua idade é: 's);        ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1", "text": "   ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1InputBox", "text": "    ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1InputBox"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1InputPassword", "text": "    ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1InputPassword"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1InputValue", "text": "    ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1InputValue"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox", "text": "    ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox_03", "text": "    ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox_03"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox_04", "text": "    ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox_04"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox_04_PSItem", "text": "    ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox_04_PSItem"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox_05", "text": "    ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox_05"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox_ListBoxRec_PSItem", "text": "    ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox_ListBoxRec_PSItem"},
     {"title": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.create", "text": "    ", "tags": "", "url": "mi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#create"},
     {"title": "mi_ui_mi_msgbox_dm.Mi_ui_mi_msgBox", "text": "   ", "tags": "", "url": "mi_ui_mi_msgbox_dm.html#Mi_ui_mi_msgBox"},
     {"title": "test", "text": "   ", "tags": "", "url": "test.html"},
     {"title": "test.testAnsi", "text": "    ", "tags": "", "url": "test.html#testAnsi"},
     {"title": "testForm", "text": "A unit testForm implementa o formulário TMI_UI_InputBox usado para criar formulário baseado em Template PSITem.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      uMi_ui_InputBox_lcl.pas      PENDÊNCIAS      T12 A classe Mi_ScrollBox_LCL1 deve ser criada em tempo de execução para quenão tenha problema na instalação. ✅️   T12 A a classe DmxScroller_Form_Lcl1 deve ser criada em tempo de execução para que não tenha problema na instalação. ✅️   T12 A a classe ButtonPanel1 deve ser criada em tempo de execução para que não tenha problema na instalação.   T12 A propriedade autosize deve ser true após o form for criado.           HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br)   2022-05-17      T12 Análise de como será a classe TMI_UI_InputBox. ✅️   T12 Criar a unit testForm. ✅️   T12 Criar formulário TMI_UI_InputBox; ✅️   T12 Adicionar o componente ButtonPanel1 e habilitar os botões ok e cancel; ✅️   T12 Adicionar o componente Mi_ScrollBox_LCL1 ; ✅️   T12 Criar evento: function DmxScroller_Form_Lcl1GetTemplate; ✅️   T12 Criar atributo protected _FormSItem : PSitem; ✅️   T12 Criar propriedade Template:AnsiString; ✅️      Criar método Set_Template(aTemplate:AnsiString); ✅️         2022-05-18      10:51      As alterações que fiz ontem no método TObjectsMethods.StringToSItem() criou efeito colateral.      Corrigido. ✅️         14:28      Criar função:      function InputBox(): TModalResult;            2022-05-19      11:13      Criar os eventos      OnEnterLocal ✅️   OnExistLocal ✅️   onEnterFieldLocal ✅️   OnExitFieldLocal ✅️      Criar função:      function MI_MsgBox1MessageBox_04_PSItem(aPSItem: TMI_MsgBoxTypes.PSItem; DlgType: TMsgDlgType; Buttons: TMsgDlgButtons; ButtonDefault: TMsgDlgBtn ): TModalResult;            2022-06-27      09:30      T12 A classe Mi_ScrollBox_LCL1 deve ser criada em tempo de execução para quenão tenha problema na instalação. ✅️.      10:25      T12 A a classe DmxScroller_Form_Lcl1 deve ser criada em tempo de execução para que não tenha problema na instalação. ✅️      10:41      T12 A a classe ButtonPanel1 deve ser criada em tempo de execução para que não tenha problema na instalação.         2022-06-28      15:52      Criar unit umi_ui_inputbox_lcl_test para desmostrar o uso de InputBox.               ", "tags": "", "url": "testForm.html"},
     {"title": "testForm.ShowFormF", "text": "    ", "tags": "", "url": "testForm.html#ShowFormF"},
     {"title": "testForm.f", "text": "   ", "tags": "", "url": "testForm.html#f"},
     {"title": "uDmxScroller_Form_Lcl_add_test", "text": "A unit uDmxScroller_Form_Lcl_add_test implementa a classe TTForm1 do pacote mi.ui.   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.html"},
     {"title": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.html"},
     {"title": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.ButtonPanel1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.html#ButtonPanel1"},
     {"title": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.DmxScroller_Form_Lcl1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.html#DmxScroller_Form_Lcl1"},
     {"title": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.Mi_ScrollBox_LCL1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.html#Mi_ScrollBox_LCL1"},
     {"title": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.ButtonPanel1Click", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.html#ButtonPanel1Click"},
     {"title": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.DmxScroller_Form_Lcl1AddTemplate", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.html#DmxScroller_Form_Lcl1AddTemplate"},
     {"title": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.DmxScroller_Form_Lcl1Enter", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.html#DmxScroller_Form_Lcl1Enter"},
     {"title": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.DmxScroller_Form_Lcl1EnterField", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.html#DmxScroller_Form_Lcl1EnterField"},
     {"title": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.FormCreate", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.html#FormCreate"},
     {"title": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.destroy", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.TDmxScroller_Form_Lcl_add_test.html#destroy"},
     {"title": "uDmxScroller_Form_Lcl_add_test.DmxScroller_Form_Lcl_add_test", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test.html#DmxScroller_Form_Lcl_add_test"},
     {"title": "uDmxScroller_Form_Lcl_add_test2", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test2.html"},
     {"title": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.html"},
     {"title": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.ButtonPanel1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.html#ButtonPanel1"},
     {"title": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.DmxScroller_Form_Lcl1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.html#DmxScroller_Form_Lcl1"},
     {"title": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.Mi_ScrollBox_LCL1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.html#Mi_ScrollBox_LCL1"},
     {"title": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.DmxScroller_Form_Lcl1GetTemplate", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.html#DmxScroller_Form_Lcl1GetTemplate"},
     {"title": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.FormCreate", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test2.TDmxScroller_Form_Lcl_add_test2.html#FormCreate"},
     {"title": "uDmxScroller_Form_Lcl_add_test2.DmxScroller_Form_Lcl_add_test2", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_add_test2.html#DmxScroller_Form_Lcl_add_test2"},
     {"title": "uDmxScroller_Form_Lcl_test", "text": "A unit uDmxScroller_Form_Lcl_test implementa o teste dos componentes TUiConsts.MI_MsgBox, mi_scrollbox_LCL1 e TDmxScroller_Form_Lcl onde os mesmos são ligados no evento TDmxScroller_Form_Lcl_test.FormCreate       NOTAS      A constante TUiConsts.MI_MsgBox precisa se iniciada com o atributo TMi_ui_mi_msgBox.MI_MsgBox1 da unit mi_ui_mi_msgbox_dm para que os diálogos internos do componente DmxScroller_Form_Lcl1 possa gerar mensagens sem depender diretamente da LCL, ou seja: Será possível implementar dialogs em outros frameworks visuais tais como html, angula 4, etc alterando o método SetActive().      O método SetActive seleciona os método DmxScroller_Form_Lcl1.CreateFormLCL ou o método DmxScroller_Form_Lcl1.CreateFormHTML conforme o tipo de aplicação.      O evento DmxScroller_Form_Lcl1.onGetTemplate precisa se iniciado em OnCreate do form porque a propriedade onGetTemplate ainda não foi lida do arquivo de recursos e precisamos da mesma para executar o método DmxScroller_Form_Lcl1.SetParentLcl.      CÓDIGO PASCAL      procedure TForm_Mi_Ui_Test.FormCreate(Sender: TObject); begin    TUiConsts.MI_MsgBox := get_MI_MsgBox.MI_MsgBox1;    DmxScroller_Form_Lcl1.onGetTemplate:= DmxScroller_Form_Lcl1GetTemplate;    DmxScroller_Form_Lcl1.SetParentLcl(mi_scrollbox_LCL1); end;        ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.html"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Form_ds_test2", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Form_ds_test2"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Action_Form_ds_test", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Action_Form_ds_test"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.AddTemplate", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#AddTemplate"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Button1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Button1"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.GetTemplate", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#GetTemplate"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Novo", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Novo"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Gravar", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Gravar"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Excluir", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Excluir"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Pesquisar", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Pesquisar"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Pesquisa", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Pesquisa"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.ActionList1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#ActionList1"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Button_ModifyFontsAll_LCL", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Button_ModifyFontsAll_LCL"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.InputBox", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#InputBox"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.form_ds_Test", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#form_ds_Test"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Button_Cidades", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Button_Cidades"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.ButtonPanel1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#ButtonPanel1"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.DmxScroller_Form_Lcl1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#DmxScroller_Form_Lcl1"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.GroupBox1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#GroupBox1"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Mi_ScrollBox_LCL1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Mi_ScrollBox_LCL1"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Panel1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Panel1"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.StaticText1", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#StaticText1"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Form_ds_test2Execute", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Form_ds_test2Execute"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Action_Form_ds_testExecute", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Action_Form_ds_testExecute"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.AddTemplateClick", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#AddTemplateClick"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.GetTemplateClick", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#GetTemplateClick"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.Button_ModifyFontsAll_LCLClick", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#Button_ModifyFontsAll_LCLClick"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.form_ds_TestClick", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#form_ds_TestClick"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.InputBoxClick", "text": "O método InputBoxClick demonstra o uso da função MsgBox_Form    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#InputBoxClick"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.DmxScroller_Form_Lcl1Enter", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#DmxScroller_Form_Lcl1Enter"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.DmxScroller_Form_Lcl1EnterField", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#DmxScroller_Form_Lcl1EnterField"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.DmxScroller_Form_Lcl1Exit", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#DmxScroller_Form_Lcl1Exit"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.DmxScroller_Form_Lcl1ExitField", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#DmxScroller_Form_Lcl1ExitField"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.DmxScroller_Form_Lcl1GetTemplate", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#DmxScroller_Form_Lcl1GetTemplate"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.DmxScroller_Form_Lcl1NewRecord", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#DmxScroller_Form_Lcl1NewRecord"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.ExcluirExecute", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#ExcluirExecute"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.FormClose", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#FormClose"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.FormCreate", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#FormCreate"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.GravarExecute", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#GravarExecute"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.mi_scrollbox_LCL1Enter", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#mi_scrollbox_LCL1Enter"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.NovoExecute", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#NovoExecute"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.PesquisarExecute", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#PesquisarExecute"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.PesquisaExecute", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#PesquisaExecute"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.StaticText1Click", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#StaticText1Click"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.StaticText2Click", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#StaticText2Click"},
     {"title": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.destroy", "text": "    ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.TDmxScroller_Form_Lcl_test.html#destroy"},
     {"title": "uDmxScroller_Form_Lcl_test.tmp_Alunos_Idade", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.html#tmp_Alunos_Idade"},
     {"title": "uDmxScroller_Form_Lcl_test.tmp_Alunos_Matricula", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.html#tmp_Alunos_Matricula"},
     {"title": "uDmxScroller_Form_Lcl_test.tmp_Alunos", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.html#tmp_Alunos"},
     {"title": "uDmxScroller_Form_Lcl_test.DmxScroller_Form_Lcl_test", "text": "   ", "tags": "", "url": "uDmxScroller_Form_Lcl_test.html#DmxScroller_Form_Lcl_test"},
     {"title": "uMi_BitBtn_LCL", "text": "   ", "tags": "", "url": "uMi_BitBtn_LCL.html"},
     {"title": "uMi_BitBtn_LCL.TMi_BitBtn_LCL", "text": "A classe TMi_BitBtn_LCL é necessária para que se possa selecionar o controle associado ao botão criado pelo método: pDmxFieldRec&circ;.createExecAction.   ", "tags": "", "url": "uMi_BitBtn_LCL.TMi_BitBtn_LCL.html"},
     {"title": "uMi_BitBtn_LCL.TMi_BitBtn_LCL.DoOnEnter", "text": "    ", "tags": "", "url": "uMi_BitBtn_LCL.TMi_BitBtn_LCL.html#DoOnEnter"},
     {"title": "uMi_BitBtn_LCL.TMi_BitBtn_LCL.UiDmxScroller", "text": "A propriedade UiDmxScroller contém o modelo e os cálculos do formulário   ", "tags": "", "url": "uMi_BitBtn_LCL.TMi_BitBtn_LCL.html#UiDmxScroller"},
     {"title": "uMi_BitBtn_LCL.TMi_BitBtn_LCL.DmxFieldRec", "text": "A propriedade DmxFieldRec fornece os dados necessários para criar o componente TMI_BitBtn_LCL.       NOTA      Esses dados devem ser criados pelo método UiDmxScrollerr.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMi_BitBtn_LCL.TMi_BitBtn_LCL.html#DmxFieldRec"},
     {"title": "uMi_BitBtn_LCL.Register", "text": "    ", "tags": "", "url": "uMi_BitBtn_LCL.html#Register"},
     {"title": "uMI_Button_LCL", "text": "   ", "tags": "", "url": "uMI_Button_LCL.html"},
     {"title": "uMI_Button_LCL.TMI_Button_LCL", "text": "A classe TMI_Button_LCL é necessária para que se possa selecionar o controle associado ao botão criado pelo método: pDmxFieldRec&circ;.createExecAction.   ", "tags": "", "url": "uMI_Button_LCL.TMI_Button_LCL.html"},
     {"title": "uMI_Button_LCL.TMI_Button_LCL.DoOnEnter", "text": "    ", "tags": "", "url": "uMI_Button_LCL.TMI_Button_LCL.html#DoOnEnter"},
     {"title": "uMI_Button_LCL.TMI_Button_LCL.UiDmxScroller", "text": "A propriedade UiDmxScroller contém o modelo e os cálculos do formulário   ", "tags": "", "url": "uMI_Button_LCL.TMI_Button_LCL.html#UiDmxScroller"},
     {"title": "uMI_Button_LCL.TMI_Button_LCL.DmxFieldRec", "text": "A propriedade DmxFieldRec fornece os dados necessários para criar o componente TMI_Button_LCL.       NOTA      Esses dados devem ser criados pelo método UiDmxScrollerr.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMI_Button_LCL.TMI_Button_LCL.html#DmxFieldRec"},
     {"title": "uMI_Button_LCL.Register", "text": "    ", "tags": "", "url": "uMI_Button_LCL.html#Register"},
     {"title": "uMI_CheckBox_LCL", "text": "   ", "tags": "", "url": "uMI_CheckBox_LCL.html"},
     {"title": "uMI_CheckBox_LCL.TMI_CheckBox_LCL", "text": "   ", "tags": "", "url": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.html"},
     {"title": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.PutBuffer", "text": "O método PutBuffer salva os dados do controle (Self) para a propriedade pDmxFieldRec    ", "tags": "", "url": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.html#PutBuffer"},
     {"title": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.GetBuffer", "text": "O método GetBuffer ler os dados da propriedade pDmxFieldRec para o controle (Self).    ", "tags": "", "url": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.html#GetBuffer"},
     {"title": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.DoOnEnter", "text": "    ", "tags": "", "url": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.html#DoOnEnter"},
     {"title": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.DoOnExit", "text": "O método DoOnExit ao perder o foco executa os métodos PuttBuffer e pDmxFieldRec.DoOnExit(Self).    ", "tags": "", "url": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.html#DoOnExit"},
     {"title": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.UiDmxScroller", "text": "A propriedade UiDmxScroller contém o modelo e os cálculos do formulário   ", "tags": "", "url": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.html#UiDmxScroller"},
     {"title": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.DmxFieldRec", "text": "A propriedade DmxFieldRec fornece os dados necessários para criar o componente TMI_Button_LCL.       NOTA      Esses dados devem ser criados pelo método UiDmxScrollerr.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMI_CheckBox_LCL.TMI_CheckBox_LCL.html#DmxFieldRec"},
     {"title": "uMI_CheckBox_LCL.Register", "text": "    ", "tags": "", "url": "uMI_CheckBox_LCL.html#Register"},
     {"title": "uMI_RadioGroup_LCL", "text": "   ", "tags": "", "url": "uMI_RadioGroup_LCL.html"},
     {"title": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL", "text": "   ", "tags": "", "url": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.html"},
     {"title": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.GetBuffer", "text": "O método GetBuffer ler os dados da propriedade pDmxFieldRec para o controle (Self).    ", "tags": "", "url": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.html#GetBuffer"},
     {"title": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.DoOnEnter", "text": "    ", "tags": "", "url": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.html#DoOnEnter"},
     {"title": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.PutBuffer", "text": "O método PutBuffer salva os dados do controle (Self) para a propriedade pDmxFieldRec    ", "tags": "", "url": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.html#PutBuffer"},
     {"title": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.DoOnExit", "text": "O método DoOnExit ao perder o foco executa os métodos PuttBuffer e pDmxFieldRec&circ;.DoOnExit(Self).    ", "tags": "", "url": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.html#DoOnExit"},
     {"title": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.UiDmxScroller", "text": "A propriedade UiDmxScroller contém o modelo e os cálculos do formulário   ", "tags": "", "url": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.html#UiDmxScroller"},
     {"title": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.DmxFieldRec", "text": "A propriedade DmxFieldRec fornece os dados necessários para criar o componente TMI_Button_LCL.       NOTA      Esses dados devem ser criados pelo método UiDmxScrollerr.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMI_RadioGroup_LCL.TMI_RadioGroup_LCL.html#DmxFieldRec"},
     {"title": "uMI_RadioGroup_LCL.Register", "text": "    ", "tags": "", "url": "uMI_RadioGroup_LCL.html#Register"},
     {"title": "uMi_ui_ComboBox_lcl", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.html"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL", "text": "A classe TMI_ComboBox_LCL permite edita um campo enumerado do componente TDmxFieldRec       NOTA      O item zero cont�m a string selecionada e caso a mesma seja editada o valor digitado passa ser o filtro de pesquisa.         ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.DrawItem", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#DrawItem"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Create", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Create"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Create", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Create"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Destroy", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Destroy"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.PutBuffer", "text": "O método PutBuffer transfere os dados do controle para o componente TMI_rtl_ui_DmxScroller.      NOTA      Quando pDmxFieldRec.ListComboBox &lt;&gt; nil usar Value e se pDmxFieldRec.ListComboBox=nil usar ItemIndex.   A propriedade Value pode ser qualquer valor.          ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#PutBuffer"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.GetBuffer", "text": "O método GetBuffer transfere os dados do controle para o componente TMI_rtl_ui_DmxScroller.      NOTA      Quando pDmxFieldRec.ListComboBox &lt;&gt; nil usar Value e se pDmxFieldRec.ListComboBox=nil usar ItemIndex.          ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#GetBuffer"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.DoOnMouseDown", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#DoOnMouseDown"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.DoOnEnter", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#DoOnEnter"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.DoOnExit", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#DoOnExit"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Select", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Select"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.DoOnKeyPress", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#DoOnKeyPress"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Clear", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Clear"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.AddValue", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#AddValue"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.WMPaint", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#WMPaint"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.UiDmxScroller", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#UiDmxScroller"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.DmxFieldRec", "text": "O atributo DmxFieldRec fornece os dados necess�rios para criar o componente TMI_MaskEdit_LCL.       NOTA      Esses dados devem ser criados pelo m�todo TUiDmxScroller.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#DmxFieldRec"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Value", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Value"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.ImgIndexes", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#ImgIndexes"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Images", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Images"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.ShowImages", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#ShowImages"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Color", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Color"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Align", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Align"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.AutoComplete", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#AutoComplete"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.AutoDropDown", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#AutoDropDown"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.AutoSelect", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#AutoSelect"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnEditingDone", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnEditingDone"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.AutoSize", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#AutoSize"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.text", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#text"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.ItemIndex", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#ItemIndex"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.DragMode", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#DragMode"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.DragCursor", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#DragCursor"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.DropDownCount", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#DropDownCount"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Enabled", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Enabled"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Font", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Font"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.ItemHeight", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#ItemHeight"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Items", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Items"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.MaxLength", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#MaxLength"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.ParentColor", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#ParentColor"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.ParentFont", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#ParentFont"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.ParentShowHint", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#ParentShowHint"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.PopupMenu", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#PopupMenu"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.ShowHint", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#ShowHint"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Sorted", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Sorted"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.TabOrder", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#TabOrder"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.TabStop", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#TabStop"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Visible", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Visible"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnChange", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnChange"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnClick", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnClick"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnDblClick", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnDblClick"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnDragDrop", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnDragDrop"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnDragOver", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnDragOver"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnDrawItem", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnDrawItem"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnDropDown", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnDropDown"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnEndDrag", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnEndDrag"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnEnter", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnEnter"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnExit", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnExit"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnKeyDown", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnKeyDown"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnKeyPress", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnKeyPress"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnKeyUp", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnKeyUp"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnMeasureItem", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnMeasureItem"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.OnStartDrag", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#OnStartDrag"},
     {"title": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.Anchors", "text": "   ", "tags": "", "url": "uMi_ui_ComboBox_lcl.TMI_ComboBox_LCL.html#Anchors"},
     {"title": "uMi_ui_ComboBox_lcl.Register", "text": "    ", "tags": "", "url": "uMi_ui_ComboBox_lcl.html#Register"},
     {"title": "uMi_Ui_DBCheckBox_Lcl", "text": "   ", "tags": "", "url": "uMi_Ui_DBCheckBox_Lcl.html"},
     {"title": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl", "text": "A classe TMi_Ui_DBCheckBox_Lcl permite edita um campo boolean do registro TDmxFieldRec       NOTA -      ", "tags": "", "url": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.html"},
     {"title": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.Create", "text": "    ", "tags": "", "url": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.html#Create"},
     {"title": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.DoOnEnter", "text": "    ", "tags": "", "url": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.html#DoOnEnter"},
     {"title": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.DoOnExit", "text": "O método DoOnExit ao perder o foco executa os métodos PuttBuffer e pDmxFieldRec.DoOnExit(Self).    ", "tags": "", "url": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.html#DoOnExit"},
     {"title": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.PutBuffer", "text": "O método PutBuffer salva os dados do controle (Self) para a propriedade pDmxFieldRec    ", "tags": "", "url": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.html#PutBuffer"},
     {"title": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.GetBuffer", "text": "O método GetBuffer ler os dados da propriedade pDmxFieldRec para o controle (Self).    ", "tags": "", "url": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.html#GetBuffer"},
     {"title": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.UiDmxScroller", "text": "   ", "tags": "", "url": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.html#UiDmxScroller"},
     {"title": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.DmxFieldRec", "text": "O atributo DmxFieldRec fornece os dados necessários para criar o componente TMI_MaskEdit_LCL.       NOTA      Esses dados devem ser criados pelo método TUiDmxScroller.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMi_Ui_DBCheckBox_Lcl.TMi_Ui_DBCheckBox_Lcl.html#DmxFieldRec"},
     {"title": "uMi_Ui_DBCheckBox_Lcl.Register", "text": "    ", "tags": "", "url": "uMi_Ui_DBCheckBox_Lcl.html#Register"},
     {"title": "uMi_Ui_DbComboBox_lcl", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.html"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL", "text": "A classe TMi_DbComboBox_LCL permite edita um campo enumerado do registro TDmxFieldRec       NOTA      O item zero contém a string selecionada e caso a mesma seja editada o valor digitado passa ser o filtro de pesquisa.         ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.DrawItem", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#DrawItem"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Create", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Create"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Create", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Create"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Destroy", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Destroy"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.PutBuffer", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#PutBuffer"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.GetBuffer", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#GetBuffer"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.DoOnMouseDown", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#DoOnMouseDown"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.DoOnEnter", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#DoOnEnter"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.DoOnExit", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#DoOnExit"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Select", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Select"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.DoOnKeyPress", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#DoOnKeyPress"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Clear", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Clear"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.AddValue", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#AddValue"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.WMPaint", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#WMPaint"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.UiDmxScroller", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#UiDmxScroller"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.DmxFieldRec", "text": "O atributo DmxFieldRec fornece os dados necessários para criar o componente TMI_MaskEdit_LCL.       NOTA      Esses dados devem ser criados pelo método TUiDmxScroller.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#DmxFieldRec"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Value", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Value"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.ImgIndexes", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#ImgIndexes"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Images", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Images"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.ShowImages", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#ShowImages"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Color", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Color"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Align", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Align"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.AutoComplete", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#AutoComplete"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.AutoDropDown", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#AutoDropDown"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.AutoSelect", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#AutoSelect"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnEditingDone", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnEditingDone"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.AutoSize", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#AutoSize"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.text", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#text"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.ItemIndex", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#ItemIndex"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.DragMode", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#DragMode"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.DragCursor", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#DragCursor"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.DropDownCount", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#DropDownCount"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Enabled", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Enabled"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Font", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Font"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.ItemHeight", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#ItemHeight"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Items", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Items"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.MaxLength", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#MaxLength"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.ParentColor", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#ParentColor"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.ParentFont", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#ParentFont"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.ParentShowHint", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#ParentShowHint"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.PopupMenu", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#PopupMenu"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.ShowHint", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#ShowHint"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Sorted", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Sorted"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.TabOrder", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#TabOrder"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.TabStop", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#TabStop"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Visible", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Visible"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnChange", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnChange"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnClick", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnClick"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnDblClick", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnDblClick"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnDragDrop", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnDragDrop"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnDragOver", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnDragOver"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnDrawItem", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnDrawItem"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnDropDown", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnDropDown"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnEndDrag", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnEndDrag"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnEnter", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnEnter"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnExit", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnExit"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnKeyDown", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnKeyDown"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnKeyPress", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnKeyPress"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnKeyUp", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnKeyUp"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnMeasureItem", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnMeasureItem"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.OnStartDrag", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#OnStartDrag"},
     {"title": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.Anchors", "text": "   ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.TMi_DbComboBox_LCL.html#Anchors"},
     {"title": "uMi_Ui_DbComboBox_lcl.Register", "text": "    ", "tags": "", "url": "uMi_Ui_DbComboBox_lcl.html#Register"},
     {"title": "uMI_ui_DbEdit_LCL", "text": "   ", "tags": "", "url": "uMI_ui_DbEdit_LCL.html"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL", "text": "   ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.Create", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#Create"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.Create", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#Create"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.SeTDmxFieldRec", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#SeTDmxFieldRec"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.PutBuffer", "text": "O método PutBuffer salva os dados do controle (Self) para a propriedade pDmxFieldRec    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#PutBuffer"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.GetBuffer", "text": "O método GetBuffer ler os dados da propriedade pDmxFieldRec para o controle (Self).    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#GetBuffer"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.DoOnEnter", "text": "O método DoOnEnter ao receber o foco executa os métodos GetBuffer e pDmxFieldRec.DoOnEnter(Self).    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#DoOnEnter"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.DoOnExit", "text": "O método DoOnExit ao perder o foco executa os métodos PuttBuffer e pDmxFieldRec.DoOnExit(Self).    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#DoOnExit"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.DoEditNumberKeyPress", "text": "O método DoEditNumberKeyPress edita os campos números de 1 a 10 bytes    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#DoEditNumberKeyPress"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.GetHelpCtx_Hint", "text": "O método GetHelpCtx_Hint captura a Idocumentação do campo definido na classe onde o campo for criado.       Com o programa pasdoc a Idocumentação não precisa está no arquivo de recursos, por isso, para obter o link para o campo � preciso saber apenas o endereço do link.       ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#GetHelpCtx_Hint"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.GetMaxLength", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#GetMaxLength"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.SetMaxLength", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#SetMaxLength"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.GetSize", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#GetSize"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.SetSize", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#SetSize"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.SetAlias", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#SetAlias"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.GetName", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#GetName"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.GetAlias", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#GetAlias"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.WMSetFocus", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#WMSetFocus"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.GetDataLink", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#GetDataLink"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.WMPaint", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#WMPaint"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.ValidateEdit", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#ValidateEdit"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.UiDmxScroller", "text": "A propriedade UiDmxScroller contém o modelo e os cálculos do formulário a ser criado em owner   ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#UiDmxScroller"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.DmxFieldRec", "text": "O atributo DmxFieldRec fornece os dados necessários para criar o componente TMI_DbEdit_LCL.       NOTA      Esses dados devem ser criados pelo método UiDmxScrollerr.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#DmxFieldRec"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.DisplayFormat", "text": "A propriedade DisplayFormat a mascara de saída usada para setar Field.DisplayFormat   ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#DisplayFormat"},
     {"title": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.MaskEdit", "text": "A propriedade MaskEdit contém o modelo e os cálculos do formulário a ser criado em owner   ", "tags": "", "url": "uMI_ui_DbEdit_LCL.TMI_DbEdit_LCL.html#MaskEdit"},
     {"title": "uMI_ui_DbEdit_LCL.Register", "text": "    ", "tags": "", "url": "uMI_ui_DbEdit_LCL.html#Register"},
     {"title": "umi_ui_dblookupComboBox_lcl", "text": "   ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.html"},
     {"title": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl", "text": "   ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.html"},
     {"title": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.Create", "text": "    ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.html#Create"},
     {"title": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.Create", "text": "    ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.html#Create"},
     {"title": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.Destroy", "text": "    ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.html#Destroy"},
     {"title": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.PutBuffer", "text": "    ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.html#PutBuffer"},
     {"title": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.GetBuffer", "text": "    ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.html#GetBuffer"},
     {"title": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.DoOnEnter", "text": "    ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.html#DoOnEnter"},
     {"title": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.DoOnExit", "text": "    ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.html#DoOnExit"},
     {"title": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.UiDmxScroller", "text": "   ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.html#UiDmxScroller"},
     {"title": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.DmxFieldRec", "text": "O atributo DmxFieldRec fornece os dados necessários para criar o componente TMI_MaskEdit_LCL.       NOTA      Esses dados devem ser criados pelo método TUiDmxScroller.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.TMi_ui_DBLookupComboBox_Lcl.html#DmxFieldRec"},
     {"title": "umi_ui_dblookupComboBox_lcl.Register", "text": "    ", "tags": "", "url": "umi_ui_dblookupComboBox_lcl.html#Register"},
     {"title": "uMI_ui_DbRadioGroup_Lcl", "text": "   ", "tags": "", "url": "uMI_ui_DbRadioGroup_Lcl.html"},
     {"title": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl", "text": "   ", "tags": "", "url": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.html"},
     {"title": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.GetBuffer", "text": "O método GetBuffer ler os dados da propriedade pDmxFieldRec para o controle (Self).    ", "tags": "", "url": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.html#GetBuffer"},
     {"title": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.DoOnEnter", "text": "    ", "tags": "", "url": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.html#DoOnEnter"},
     {"title": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.PutBuffer", "text": "O método PutBuffer salva os dados do controle (Self) para a propriedade pDmxFieldRec    ", "tags": "", "url": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.html#PutBuffer"},
     {"title": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.DoOnExit", "text": "O método DoOnExit ao perder o foco executa os métodos PuttBuffer e pDmxFieldRec&circ;.DoOnExit(Self).    ", "tags": "", "url": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.html#DoOnExit"},
     {"title": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.UiDmxScroller", "text": "A propriedade UiDmxScroller contém o modelo e os cálculos do formulário   ", "tags": "", "url": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.html#UiDmxScroller"},
     {"title": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.DmxFieldRec", "text": "A propriedade DmxFieldRec fornece os dados necessários para criar o componente TMI_Button_LCL.       NOTA      Esses dados devem ser criados pelo método UiDmxScrollerr.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMI_ui_DbRadioGroup_Lcl.TMI_ui_DbRadioGroup_Lcl.html#DmxFieldRec"},
     {"title": "uMI_ui_DbRadioGroup_Lcl.Register", "text": "    ", "tags": "", "url": "uMI_ui_DbRadioGroup_Lcl.html#Register"},
     {"title": "uMi_ui_Dmxscroller_form_lcl", "text": "A unit uMi_ui_Dmxscroller_form_lcl implementa a classe TDmxScroller_Form.       Primeiro autor: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br)   VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      uMi_rtl_ui_Dmxscroller_form.pas      HISTÓRICO:      umi_ui_dmxscroller_form_historico.md      PENDÊNCIAS      T12 Documentar a unit.   T12 Em SetParentLCL ao selecionar a fonte Courier New é preciso saber se a mesma existe, caso não existe a tabulação fica maluca.   T12 TMi_ui_Data_lcl   T12 TMi_ui_Hora_lcl   T12 TMi_ui_DataHora_lcl   T12 TMI_ui_Text_LCL      CONCLUÍDO      Criar atributo protected FldRadioButtonsAdicionados:TStringList;✅   Criar método protected procedure ShowControlState;override; ✅   Criar método procedure Scroll_it_inview_LCL ✅   Criar método public procedure Scroll_it_inview ✅   Criar método protected procedure CreateFormLCL ✅   Criar método protected procedure UpdateBuffers_Controls;virtual; ✅   Criar método public procedure UpdateBuffers;override; ✅   Criar método public procedure Refresh;override; ✅   Criar método private _ParentLCL : TScrollingWinControl; ✅   Criar método private procedure SetParentLCL ✅   Criar propriedade published Property ParentLCL ✅   Criar método protected procedure SetActiveLCL(aActive: Boolean);virtual; ✅   Criar método public procedure ModifyFontsAll_LCL ✅   Criar método public procedure ModifyFontsAll_LCL(ctrl: TWinControl;aFontName:String); ✅   Criar método public function GetWidthChar():integer;Overload; ✅   T12 TMI_ui_Edit_LCL ✅   T12 TMI_ui_ComboBox_LCL ✅   T12 TMI_ui_Check_LCL ✅   T12 TMI_ui_RadioButton_Lcl ✅   T12 TMI_ui_Button ✅   T12 TMi_ui_Label_Lcl ✅         ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl", "text": "A classe TDmxScroller_Form_Lcl implementa a construção de formulários usando uma lista de Templates do tipo TDmxScroller   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.Create", "text": "    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#Create"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.ShowControlState", "text": "    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#ShowControlState"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.Scroll_it_inview_LCL", "text": "https://lazarus-ccr.sourceforge.io/docs/lcl/forms/tcontrolscrollbar.html    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#Scroll_it_inview_LCL"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.Scroll_it_inview", "text": "O método Scroll_it_inview é usado para da o scroller na janela onde esse componente for inserido.      NOTA      A LCL não rola a tela com a tecla tab e o controle não estiver visível.          ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#Scroll_it_inview"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.CreateFormLCL", "text": "O Método CreateFormLCL cria o formulário LCL baseado na lista de campos PDmxScroller.    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#CreateFormLCL"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.UpdateBuffers_Controls", "text": "    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#UpdateBuffers_Controls"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.UpdateBuffers", "text": "    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#UpdateBuffers"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.Refresh", "text": "O método Refresh refresh repinta os campo se foi auterado.    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#Refresh"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.SetActiveTarget", "text": "A procedure SetActiveTarget seta a propriedade active e criar um formulário LCL    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#SetActiveTarget"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.ModifyFontsAll_LCL", "text": "O método ModifyFontsAll_LCL altera a fonte e o tamanho do controle passado por ctrl e de seus filhos.    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#ModifyFontsAll_LCL"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.ModifyFontsAll_LCL", "text": "O método ModifyFontsAll_LCL altera a fonte do controle passado por ctrl e de seus filhos.    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#ModifyFontsAll_LCL"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.GetWidthChar", "text": "Essa média só funciona bem para as fontes Courie new ou Dejavu Sans Mono tamanho 12    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#GetWidthChar"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.ParentLCL", "text": "A propriedade ParentLCL informa a janela que será desenhada o formulário   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#ParentLCL"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.name", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#name"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.Alias", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#Alias"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.Strings", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#Strings"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.OnAddTemplate", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#OnAddTemplate"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.OnNewRecord", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#OnNewRecord"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.onCloseQuery", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#onCloseQuery"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.onEnter", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#onEnter"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.onExit", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#onExit"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.onEnterField", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#onEnterField"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.onExitField", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#onExitField"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.onGetTemplate", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#onGetTemplate"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.Active", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#Active"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.AlignmentLabels", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#AlignmentLabels"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.ActionList", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.TDmxScroller_Form_Lcl.html#ActionList"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.accDelimiter", "text": "A constante accDelimiter informa que o campo é delimitador de campos no Template.   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#accDelimiter"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.accHidden", "text": "A constante accHidden (Const accHidden = 2;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o mesmo é invisível.       EXEMPLO      Como usar o mapa de bits accHidden para saber se o campo está invisível.      with pDmxFieldRec&circ; do   If (access and accHidden &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s está invisível'),[CharFieldName]);         end;           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#accHidden"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.AccNormal", "text": "A constante AccNormal (Const AccNormal = 0;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se que o campo pode ser editado.       EXEMPLO      Como usar o mapa de bits accNormal para saber se o campo pode ser editado.      with pDmxFieldRec&circ; do   If (access and accNormal &lt;&gt; 0)    then begin          ShowMessage(Format('O campo %s pode ser editado'),[FieldName]);        end;           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#AccNormal"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.accReadOnly", "text": "A constante accReadOnly (Const ReadOnly = 1;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o campo é somente para leitura.      EXEMPLO      Como usar o mapa de bits ReadOnly para saber se o campo não pode ser editado.    with pDmxFieldRec&circ; do   If (access and ReadOnly &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s não pode ser editado'),[FieldName]);        end;           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#accReadOnly"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.accSkip", "text": "A constante accSkip (Const accSkip = 4;) é um mapa de bits usado para identificar o bit do campo TDmxFieldRec.access que informa se o campo pode receber o focus.      EXEMPLO      Como usar o mapa de bits accSkip para saber se o campo não pode receber o focus.    with pDmxFieldRec&circ; do   If (access and accSkip &lt;&gt; 0)   then begin          ShowMessage(Format('O campo %s não pode receber o focus'),[FieldName]);        end;           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#accSkip"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.CharHint", "text": "A constante CharHint é usado para documentar o campo e indica que todo o texto até o próximo caractere de controle será o conteúdo do campo HelpCtx_Hint.       EXEMPLO      Resourcestring   tmp_Alunos_Idade = '\\BB'+ChFN+'idade'+CharUpperlimit+#64+                      CharHint+'A idade do aluno. Valores válidos 1 a 64'+                      CharHintPorque+'Este campo é necessário para que se agrupe o alunos baseado em sua faixa etária'+                      CharHintOnde+'Ele será usado pelo coordenador ao classificar a turma';    tmp_Alunos_Matricula = \\IIII'+ChFN+'matricula'+CharHint+'A matricula do aluno é um campo sequencial e calculado ao incluir o registro';   tmp_Alunos = '&tilde;     Idade:&tilde;%s'+lf+               '&tilde; Matricula:&tilde;%s        ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#CharHint"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.CharHintOnde", "text": "A contante CharHintOnde informa que todo texto até o próximo delimitador contém informações para o campo HelpCtx_Onde   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#CharHintOnde"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.CharHintPorque", "text": "A contante CharHintPorque informa que todo texto até o próximo delimitador contém informações para o campo HelpCtx_Porque   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#CharHintPorque"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fld_LData", "text": "A constante fld_LData é do tipo TDateTime e guarda a data compactada 'dd/dd/dd'   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fld_LData"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fld_LHora", "text": "A constante fld_LHora é do tipo TDateTime e guarda a hora compactada ##:##:##   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fld_LHora"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldAnsiChar", "text": "A constante fldAnsiChar (Const fldAnsiChar = 'C') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'C' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere maiúsculo.       EXEMPLO      Representação de um AnsiString de 10 dígitos em um buffer de 11 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const   Nome := '\\CCCCCCCCCC'; //PAULO SÉRG           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldAnsiChar"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldAnsiChar_Minuscula", "text": "A constante fldAnsiChar_Minuscula (Const fldAnsiChar = 'c') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'c' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere minúsculo.       EXEMPLO      Representação de um AnsiString de 10 dígitos em um buffer de 11 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const   Nome := '\\cccccccccc'; //paulo Sérg   Nome := '\\Cccccccccc'; //Paulo Sérg           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldAnsiChar_Minuscula"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldAnsiCharNUM", "text": "A constante fldAnsiCharNUM (Const fldAnsiChar = '0') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '0' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere numérico ['0'..'9']] .       EXEMPLO      Representação de um AnsiString de 11 dígitos em um buffer de 12 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const    telefone := '\\(00) 0 0000-0000' //85 9 9702 4498           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldAnsiCharNUM"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldAnsiCharVAL", "text": "A constante fldAnsiCharVAL (Const fldAnsiChar = '0') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '0' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo AnsiString que só aceita caractere numérico ['0'..'9']] com formatação dbase.       EXEMPLO      Representação de um AnsiString de 11 dígitos em um buffer de 12 bytes onde o ultimo byte contém o caractere #0 informando o fim da string;      Const    telefone := '\\(NN) N NNNN-NNNN' //85 9 9702 4498           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldAnsiCharVAL"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldAPPEND", "text": "A constante fldAPPEND é usada para concatenar duas listas do tipo PSItem.       A constante fldAPPEND é necessário porque DmxScroller trabalha com string curta e a mesma tem um tamanho de 255 caracteres, onde o tamanho está na posição 0.   Como usar a constante fldAPPEND:       A função CreateAppendFields retorna a constante fldAPPEND mais o endereço da string a ser concatenada.       EXEMPLO      procedure Template : ShortString;   Var     S1,s2,Template : TString; begin   S1 := '&tilde;Nome do Aluno....:&tilde;\\ssssssssssssssssssssssssssssssssss';   s2 := '&tilde;Endereço do aluno:&tilde;\\sssssssssssssssssssssssss';   result := S1+CreateAppendFields(s2); end;     NOTA      A contante fldAPPEND foi criada porque o projeto inicial foi para turbo pascal e ambiente console.   A versão atual podemos usar AnsiString visto que o limite do mesmo é a memória.   Para usar AnsiString é necessário converter para PSitem com a função: StringToSItem.       EXEMPLO:      function TMI_UI_InputBox.DmxScroller_Form1GetTemplate(aNext: PSItem): PSItem; begin   with DmxScroller_Form1 do   begin     if _Template  &lt;&gt; ''     then Result := StringToSItem(_Template, 80);  //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Esquerda) //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Central) //    Result := StringToSItem(_Template, 40,TObjectsTypes.TAlinhamento.Alinhamento_Direita) //    Result := StringToSItem(_Template, 80,TObjectsTypes.TAlinhamento.Alinhamento_Justificado)      else result := nil;   end; end;                    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldAPPEND"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldBLOb", "text": "A constante fldBLOb indica que o campo é não formatado podendo ser um Record, porém a edição do mesmo será feito por outros meios.       NOTA      Para informar ao buffer do registro que o campo é fldBLOb, a função CreateBlobField é necessário.   A class function TUiMethods.CreateBlobField(Len: integer; AccMode,Default: byte) : DmxIDstr; reserva espaço para o mesmo.   Pendência: Preciso criar um exemplo de uso deste tipo de informação.         ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldBLOb"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldBYTE", "text": "A constante fldBYTE (Const fldBYTE = 'B') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'B' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo byte.       EXEMPLO      Const    idade := '\\BB' //Os dois dígitos estarão em um buffer de 1 byte;        ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldBYTE"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldBoolean", "text": "A constante fldBoolean (fldBoolean = 'X') indica que o campo é do tipo byte e só pode ter dois valores.       NOTA      Valores possíveis:      0 - False; não   1 = True; sim      A forma de editá-los deve ser com o componente checkbox.      EXEMPLO      Resourcestring   tmp_Aceita = '\\[X]'+ChFN+'Aceita_contrato'+CharHint+'Aceita os termos do contrato?';   Template = tmp_Aceita+'&tilde;Aceita os termos do contrato&tilde;';        ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldBoolean"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldCONTRACTION", "text": "A constante fldCONTRACTION ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldCONTRACTION"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldData", "text": "A constante fldData ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldData"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.FldDateTimeDos", "text": "A constante FldDateTimeDos ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#FldDateTimeDos"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldENUM", "text": "A constante fldENUM (fldENUM=&circ;E) é um campo do tipo byte(0..255) que contém uma lista de string que são selecionadas por um componente tipo ComboBox.       EXEMPLO        Const tmpMidia : PSitem = nil; begin   tmpMidia := CreateEnumField(TRUE, accNormal, 0,                               NewSItem(' indefinido ',                               NewSItem(' PenDriver  ',                               NewSItem(' SSD        ',                               nil))))+CharFieldName+'Midia;    Template = NewSItem('&tilde;  Eu uso &tilde;'+ tmpMidia + '&tilde; em meu computador.&tilde;        ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldENUM"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.CharExecAction", "text": "A contante CharExecAction é usado para associar ao campo atual uma classe TAction.       NOTA      O interpretador de Templates associa a ação do Template ao corrente campo.      EXEMPLO DE USO DE AÇÕES NO TEMPLATE      Se o atributo Fieldnum do campo for diferente de zero, então o rótulo do botão associado a ação será o caracteres 🔍 e a ação pode atualizar o buffer do campo.      No exemplo a seguir um rótulo e um campo de cliente:      NewSItem('&tilde;Cliente:&tilde;'+'\\LLLLL'+CharExecAction+CreateExecAction(Action_pesquisa)        Se o atributo Fieldnum do campo for igual a zero, então a rótulo do botão será o rótulo do campo.      No exemplo a seguir um rótulo de novo cliente (icons 🆕) e um botão ok (icons 🆗)      NewSItem('&tilde; 🆕 &amp;Novo cliente:&tilde;'+CharExecAction+CreateExecAction(Action_Novo)+          '&tilde;   &tilde;&tilde; 🆗 &tilde;'+CharExecAction+CreateExecAction(Action_Ok)              ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#CharExecAction"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldExtended", "text": "A constante fldExtended (fldExtended='E') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'E' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo Extended.       EXEMPLO      Const    Valor := '\\EEE,EEE,EEE,EEE,EE' //Todos os números editados nesta                                   //mascara, estarão em um buffer de 10 bytes;        ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldExtended"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.CharFieldName", "text": "A constante CharFieldName usada para informar o nome do campo informado antes deste caractere.       EXEMPLO      Const   idade := '\\BB'+CharFieldName+'idade'        ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#CharFieldName"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.ChFN", "text": "A constante ChFN é igual a CharFieldName. Foi criada para facilitar seu uso.   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#ChFN"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldHexValue", "text": "A constante fldHexValue ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldHexValue"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldLData", "text": "A constante fldLData ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldLData"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldLHora", "text": "A constante fldLHora ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldLHora"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldLONGINT", "text": "A constante fldLONGINT ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldLONGINT"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.FldMemo", "text": "A constante FldMemo ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#FldMemo"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.FldOperador", "text": "A constante FldOperador ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#FldOperador"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.FldRadioButton", "text": "A constante FldRadioButton ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#FldRadioButton"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldReal4", "text": "A constante fldReal4 ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldReal4"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldReal4P", "text": "A constante fldReal4P ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldReal4P"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldReal4Positivo", "text": "A constante fldReal4Positivo ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldReal4Positivo"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldReal4PPositivo", "text": "A constante fldReal4PPositivo ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldReal4PPositivo"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldRealNum", "text": "A constante fldRealNum ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldRealNum"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldRealNum_Positivo", "text": "A constante fldRealNum_Positivo ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldRealNum_Positivo"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.FldSData", "text": "A constante FldSData ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#FldSData"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.FldSDateTimeDos", "text": "A constante FldSDateTimeDos ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#FldSDateTimeDos"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.FldSHora", "text": "A constante FldSHora ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#FldSHora"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldSHORTINT", "text": "A constante fldSHORTINT ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldSHORTINT"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldSItems", "text": "A constante fldSItems ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldSItems"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldSmallInt", "text": "A constante fldSmallInt ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldSmallInt"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldSmallWORD", "text": "A constante fldSmallWORD ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldSmallWORD"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldSTR", "text": "A constante fldSTR (Const fldStr = 'S') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 'S' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere maiúsculo.       EXEMPLO      Representação de um string de 10 dígitos em um buffer de 11 bytes onde o byte zero contém o tamanho da string;      Const   Nome := '\\SSSSSSSSSS'  //PAULO SÉRG           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldSTR"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldSTR_Minuscula", "text": "A constante fldSTR_Minuscula (Const fldSTR_Minuscula = 's') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres 's' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere minúscula.       EXEMPLO      Representação de um string de 10 dígitos em um buffer de 11 bytes onde o byte zero contém o tamanho da string;      Const   Nome := '\\ssssssssss' //paulo sérg   Nome := '\\Ssssssssss' //Paulo sérg           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldSTR_Minuscula"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldSTRNUM", "text": "A constante fldSTRNUM (Const fldSTRNUM = '#') usado na máscara do Template, informa ao componente TUiDmxScroller que a sequência de caracteres '#' após o caractere &quot;\\&quot; representa no buffer do formulário um tipo ShortString que só aceita caractere numérico.       EXEMPLO      Representação de um string de 11 dígitos em um buffer de 12 bytes onde o byte zero contém o tamanho da string;      Const   telefone := '\\(##) # ####-####' //85 9 9702 4498           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldSTRNUM"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.CharUpperlimit", "text": "A constante CharUpperlimit (CharUpperlimit=&circ;U) permite informar um limite superior para campos do tipo byte.       O gerador de formulário deve usar o conteúdo do campo pDmxFieldRec.Upperlimit para criticar se o valor do campo está na faixa entre 1 e pDmxFieldRec.Upperlimit.   O valor zero significa que o campo está nulo.   EXEMPLO      Um campo onde o seu conteúdo não ultrapasse um byte, pode ser informado no Template da seguinte forma:      Const   idade := '\\BBB+CharUpperlimit+#130+CharHint+'Não existe humanos com a idade superior a 130 anos.           ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#CharUpperlimit"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.fldZEROMOD", "text": "A constante fldZEROMOD ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#fldZEROMOD"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.CharShowPassword", "text": "A constante CharShowPassword informa para controle que os caracteres não devem ser visualizado.       NOTA      Usados no campos tipo senha.         ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#CharShowPassword"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.CharShowPasswordChar", "text": "A constante CharShowPasswordChar ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#CharShowPasswordChar"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TypeDate", "text": "A constante TypeDate ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#TypeDate"},
     {"title": "uMi_ui_Dmxscroller_form_lcl._TypeDate", "text": "A constante _TypeDate ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#_TypeDate"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TypeHora", "text": "A constante TypeHora ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#TypeHora"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TypeMemo", "text": "A constante TypeMemo ...   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#TypeMemo"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.Register", "text": "    ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#Register"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.TDmxFieldRec", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#TDmxFieldRec"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.pDmxFieldRec", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#pDmxFieldRec"},
     {"title": "uMi_ui_Dmxscroller_form_lcl.SmallWord", "text": "   ", "tags": "", "url": "uMi_ui_Dmxscroller_form_lcl.html#SmallWord"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds", "text": "A unit umi_ui_dmxscroller_form_lcl_ds implementa a classe TUiDmxScroller_Form_ds.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi_ui_Dmxscroller_form_DS.pas   PENDÊNCIAS      T12 O Componente TMi_ui_DmxScroller_Form_ds quando inserido em um dataModule os campos checkBox e RadioButton não estão visíveis.   T12 Corrigir problema quando vinculados ao dbGrid os controles do tipo:      fldEnum;   FldBoolean;   FldRadioButton;      T12 Criar Método procedure TDmxScroller_Form.CreateFormLCL(aOwner: TScrollingWinControl); ✅      Esse método deve usar as classes da Pallet Data Controls      TMI_ui_DbText_LCL   TMI_ui_DbEdit_LCL ✅   TMI_ui_DbLookupComboBox_LCL ✅   TMI_ui_DbCheck_LCL ✅   TMI_ui_DbRadioButton_Lcl ✅   TMi_ui_DbData_lcl   TMi_ui_DbHora_lcl   TMi_ui_DbDataHora_lcl         T12 HABILITAR OS EVENTOS DE TDataSource.dataset      T12 Executar os eventos do dataSet associado aos controles dbText e Db dbComboBox   T12 Dar opção global para habilitar e desabilitar as mascaras dos textos.      Criar opção global OkEditMask para usar com a propriedade: TMI_DbEdit_LCL.CustomEditMask;             = CONCLUÍDO      T12 A classe deve herdar de TDmxScroller_Form_DS ✅        HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br) ✅   2022-04-27      14:10      Análise de como implementar a unit;   Criar a classe TMI_ui_DbEdit_LCL ✅         2022-06-07      Criar a classe TMI_ui_DbCheck_LCL ✅      Em CreateFormLCL inserir classe TMI_ui_DbCheck_LCL se CurrentField for do tipo FldBoolean; ✅      Criar a classe TMi_Ui_DBRadioGroup_Lcl ✅      Em CreateFormLCL inserir classe TMI_ui_DbRadioGroup_LCL se CurrentField for do tipo FldRadioButton;      Criar função CreateRadioGroup;         Em CreateFormLCL inserir classe TMi_Button_LCL se DmxFieldRec.ExecAction&lt;&gt;''      2022-07-04      09:38      T12 O Componente TMi_ui_DmxScroller_Form_ds quando inserido em um dataModule os campos checkBox e RadioButton não estão visíveis.                  ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.html"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS", "text": "   ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.html"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.CreateFormLCL", "text": "O método CreateFormLCL desenha um formulário TScrollingWinControl usando várias linha.      O modelo cria um registro usando os tipos de dados primitivos.   EXEMPLO:      function TDMAlunos.DmxScroller_Form_AlunoGetTemplate(aNext: PSItem): PSItem; begin   with DmxScroller_Form1_DS do   begin     // AlignmentLabels:= taCenter;     AlignmentLabels := taLeftJustify;     // AlignmentLabels := taRightJustify ;     Result :=       NewSItem('&tilde;     Matrícula &tilde;\\LLLLL'+CharFieldName+'matricula'+CharAccReadOnly+CharPfInKeyPrimary+CharPfInAutoIncrement,       NewSItem('&tilde;Nome do aluno: &tilde;\\ssssssssssssssssssss`sssssss'+CharFieldName+'Nome'+CharPfInKey,       NewSItem('',       NewSItem('&tilde;     Endereço: &tilde;\\ssssssssssssssssssss`sssssssssss'+CharFieldName+'Endereco',       NewSItem('&tilde;P. Referência: &tilde;\\ssssssssssssssssssss`sssss'+CharFieldName+'PontoDeReferencia',       NewSItem('&tilde;          Cep: &tilde;\\##.###-###'+CharFieldName+'cep',       NewSItem('&tilde;       Estado: &tilde;\\SS'+CharFieldName+'Estado'+CharForeignKeyN_Um_false+'Estados,Estado',       NewSItem('&tilde;       Cidade: &tilde;\\ssssssssssssssssssss`sssss'+CharFieldName+'cidade'+CharForeignKeyN_Um_false+'Cidades,Estado;Cidade',        NewSItem('',       aNext)))))))));    end; end;         ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.html#CreateFormLCL"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.UpdateBuffers_Controls", "text": "O método UpdateBuffers_Controls ler o buffer dos campos dos arquivos associados a classe TUiDmxScroller_sql para o buffer dos campos da classe TUiDmxScroller    ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.html#UpdateBuffers_Controls"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.SetActiveTarget", "text": "    ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.html#SetActiveTarget"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.TableName", "text": "   ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.html#TableName"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.DataSource", "text": "   ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.TDmxScroller_Form_Lcl_DS.html#DataSource"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.AccNormal", "text": "   ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.html#AccNormal"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.Register", "text": "    ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.html#Register"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.TDmxFieldRec", "text": "   ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.html#TDmxFieldRec"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.pDmxFieldRec", "text": "   ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.html#pDmxFieldRec"},
     {"title": "umi_ui_dmxscroller_form_lcl_ds.SmallWord", "text": "   ", "tags": "", "url": "umi_ui_dmxscroller_form_lcl_ds.html#SmallWord"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test.html"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test", "text": "A class TMi_ui_DmxScroller_Form_Lcl_ds_test demonstra a classe TDmxScroller_Form_Lcl_DS integrada aos controles associados a DataSource1.       NOTA      A class TMi_ui_DmxScroller_Form_Lcl_ds_test cria o dataset associado a DataSource1 caso DataSource1.DataSet seja nil.   Caso DataSource1.dataSet &lt;&gt; nil, então o mesmo precisa ter os mesmo campos passado pelo template.      Obs: Se o campos passados em DataSource1.DataSet não sejão iguais aos templates, o sistema vai haver execeção.            ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.html"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.DataSource1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.html#DataSource1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.DBGrid1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.html#DBGrid1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.DmxScroller_Form_Lcl_DS1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.html#DmxScroller_Form_Lcl_DS1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.GroupBox1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.html#GroupBox1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.Mi_ScrollBox_LCL1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.html#Mi_ScrollBox_LCL1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.DmxScroller_Form_Lcl_DS1GetTemplate", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.html#DmxScroller_Form_Lcl_DS1GetTemplate"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.FormCreate", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test.TMi_ui_DmxScroller_Form_Lcl_ds_test.html#FormCreate"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test.Mi_ui_DmxScroller_Form_Lcl_ds_test", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test.html#Mi_ui_DmxScroller_Form_Lcl_ds_test"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.html"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.TMi_ui_DmxScroller_Form_Lcl_ds_test2", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.TMi_ui_DmxScroller_Form_Lcl_ds_test2.html"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.TMi_ui_DmxScroller_Form_Lcl_ds_test2.DBGrid1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.TMi_ui_DmxScroller_Form_Lcl_ds_test2.html#DBGrid1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.TMi_ui_DmxScroller_Form_Lcl_ds_test2.Mi_ScrollBox_LCL1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.TMi_ui_DmxScroller_Form_Lcl_ds_test2.html#Mi_ScrollBox_LCL1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.TMi_ui_DmxScroller_Form_Lcl_ds_test2.FormCreate", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.TMi_ui_DmxScroller_Form_Lcl_ds_test2.html#FormCreate"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.Mi_ui_DmxScroller_Form_Lcl_ds_test2", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2.html#Mi_ui_DmxScroller_Form_Lcl_ds_test2"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.GoBof", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#GoBof"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.Next", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#Next"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.Prev", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#Prev"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.GoEof", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#GoEof"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.ActionList1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#ActionList1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.DataSource1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#DataSource1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.DmxScroller_Form_Lcl_DS1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#DmxScroller_Form_Lcl_DS1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.Excluir", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#Excluir"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.Gravar", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#Gravar"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.Novo", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#Novo"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.Pesquisar", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#Pesquisar"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.DataModuleCreate", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#DataModuleCreate"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.GoBofExecute", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#GoBofExecute"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.DmxScroller_Form_Lcl_DS1AddTemplate", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#DmxScroller_Form_Lcl_DS1AddTemplate"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.ExcluirExecute", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#ExcluirExecute"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.GoEofExecute", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#GoEofExecute"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.GravarExecute", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#GravarExecute"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.NextExecute", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#NextExecute"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.NovoExecute", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#NovoExecute"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.PesquisarExecute", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#PesquisarExecute"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.PrevExecute", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#PrevExecute"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.Mi_ui_DmxScroller_Form_Lcl_ds_test2_dm", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test2_dm.html#Mi_ui_DmxScroller_Form_Lcl_ds_test2_dm"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.html"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test_dm", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test_dm.html"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test_dm.DataSource1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test_dm.html#DataSource1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test_dm.DmxScroller_Form_Lcl_DS1", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test_dm.html#DmxScroller_Form_Lcl_DS1"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test_dm.DmxScroller_Form_Lcl_DS1GetTemplate", "text": "    ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.TMi_ui_DmxScroller_Form_Lcl_ds_test_dm.html#DmxScroller_Form_Lcl_DS1GetTemplate"},
     {"title": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.Mi_ui_DmxScroller_Form_Lcl_ds_test_dm", "text": "   ", "tags": "", "url": "uMi_ui_DmxScroller_Form_Lcl_ds_test_dm.html#Mi_ui_DmxScroller_Form_Lcl_ds_test_dm"},
     {"title": "uMI_UI_InputBox", "text": "A unit uMI_UI_InputBox implementa o formulário TMI_UI_InputBox usado para criar formulário baseado em Template PSITem.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      uMi_ui_InputBox.pas      PENDÊNCIAS        HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br)   2022-05-17      T12 Análise de como será a classe TMI_UI_InputBox. ✔   T12 Criar a unit uMI_UI_InputBox. ✔   T12 Criar formulário TMI_UI_InputBox; ✔   T12 Adicionar o componente ButtonPanel1 e habilitar os botões ok e cancel; ✔   T12 Adicionar o componente Mi_ScrollBox_LCL1 ; ✔   T12 Criar evento: function DmxScroller_Form_Lcl1GetTemplate; ✔   T12 Criar atributo protected _FormSItem : PSitem; ✔   T12 Criar propriedade Template:AnsiString; ✔      Criar método Set_Template(aTemplate:AnsiString); ✔         2022-05-18      10:51      As alterações que fiz ontem no método TObjectsMethods.StringToSItem() criou efeito colateral.      Corrigido. ✔         14:28      Criar função:      function InputBox(): TModalResult;            2022-05-19      11:13      Criar os eventos      OnEnterLocal ✔   OnExistLocal ✔   onEnterFieldLocal ✔   OnExitDieldLocal ✔      Criar função:      function MI_MsgBox1MessageBox_04_PSItem(aPSItem: TMI_MsgBoxTypes.PSItem; DlgType: TMsgDlgType; Buttons: TMsgDlgButtons; ButtonDefault: TMsgDlgBtn ): TModalResult;                  ", "tags": "", "url": "uMI_UI_InputBox.html"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox", "text": "A class TMI_UI_InputBox edita uma formulário passado em forma de Template e devolve o formulário LCL caso o botão OK seja pressionando ou nil caso o botão Cancelar seja pressionando.       EXEMPLO      O exemplo abaixo cria um formulário e permite interagir com com os eventos ao entrar e ao sair do formulário.        procedure InputBoxOnEnter(aDmxScroller: TUiDmxScroller);  //Ao entrar no formulário este evento inicia os campos nome, endereço e cep    procedure SetValue(Field:String;Value:String);     var       aField: pDmxFieldRec;   begin     with aDmxScroller do     begin       aField := FieldByName(Field);       if aField&lt;&gt;nil       Then aField.AsString:= value;     end;   end;  begin   with aDmxScroller do   begin     setValue('nome','Paulo Henrique');     setValue('endereço','Rua Francisco de Souza Oliveira, 15');     setValue('cep','60310770');   end; end;  procedure InputBoxOnEnterField(aField: pDmxFieldRec);     // Ao entrar no campo 01 e o mesmo for vazio inicializa-o com o nome Paulo Sérgio  begin   Case aField.Fieldnum of     1 : begin           if aField.AsString = ''           then aField.AsString := 'Paulo Sérgio';         end;     2 : begin end;   end;  end;   Procedure InputBoxOnCloseQuery (aDmxScroller:TUiDmxScroller; var CanClose:boolean);   //Esta função permite validar o formulário ao pressionar o botão ok.    var     idade : byte;     s : string; begin   s := aDmxScroller.FieldByName('idade').AsString;   idade := StrToInt(s);   if  idade &lt;&gt; 64   then begin          ShowMessage('O campo idade &lt;&gt; de 64!.');          CanClose := false;        end   else CanClose := true; end;   Procedure TestInputBox;     //Criar o formulário    Var     MI_UI_InputBox : TMI_UI_InputBox = nil; begin   with TDmxScroller_Form_Lcl do   if InputBox('Dados do aluno',                  '&tilde;Nome do Aluno:&tilde;\\Sssssssssssssssssssssssss`ssssssssssssssss'+ChFN+'Nome'+lf+                  '&tilde;     Endereço:&tilde;\\Sssssssssssssssssssssssss`ssssssssssssssss'+ChFN+'endereco'+lf+                  '&tilde;          Cep:&tilde;\\##-###-###'+ChFN+'cep'+lf+                  '&tilde;       Bairro:&tilde;\\sssssssssssssssssssssssss'+ChFN+'bairro'+lf+                  '&tilde;       Cidade:&tilde;\\sssssssssssssssssssssssss'+ChFN+'cidade'+lf+                  '&tilde;       Estado:&tilde;\\SS'+ChFN+'estado'+lf+                  '&tilde;        Idade:&tilde;\\BB'+ChFN+'idade'+lf+                  '&tilde;    Matricula:&tilde;\\III'+ChFN+'matricula'+lf+                  '&tilde;    Mensalidade:&tilde;\\R,RRR.RR'+ChFN+'mensalidade',                  InputBoxOnEnter,nil,                   InputBoxOnEnterField,nil,                  InputBoxOnCloseQuery,                  MI_UI_InputBox             ) = MrOk   then with MI_UI_InputBox.DmxScroller_Form_Lcl1 do        begin          if FieldByName('nome').AsString = ''          then begin                 ShowMessage('Campo &quot;nome&quot; não pode ser vazio');               end;          MI_UI_InputBox.free;        end; end;  procedure TDmxScroller_Form_Lcl_test.Button_InputBoxClick(Sender: TObject); begin   TestInputBox; end;        ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.ButtonPanel1", "text": "   ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#ButtonPanel1"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.DmxScroller_Form_Lcl1", "text": "   ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#DmxScroller_Form_Lcl1"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.Mi_ScrollBox_LCL1", "text": "   ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#Mi_ScrollBox_LCL1"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.CancelButtonClick", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#CancelButtonClick"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.DmxScroller_Form_Lcl1AddTemplate", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#DmxScroller_Form_Lcl1AddTemplate"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.DmxScroller_Form_Lcl1CloseQuery", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#DmxScroller_Form_Lcl1CloseQuery"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.DmxScroller_Form_Lcl1Enter", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#DmxScroller_Form_Lcl1Enter"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.DmxScroller_Form_Lcl1EnterField", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#DmxScroller_Form_Lcl1EnterField"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.DmxScroller_Form_Lcl1Exit", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#DmxScroller_Form_Lcl1Exit"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.DmxScroller_Form_Lcl1ExitField", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#DmxScroller_Form_Lcl1ExitField"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.DmxScroller_Form_Lcl1GetTemplate", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#DmxScroller_Form_Lcl1GetTemplate"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.DmxScroller_Form_Lcl1NewRecord", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#DmxScroller_Form_Lcl1NewRecord"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.FormCloseQuery", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#FormCloseQuery"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.FormCreate", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#FormCreate"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.OKButtonClick", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#OKButtonClick"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.Set_Template", "text": "O Método Set_Template inicia o atributo _Template e criar a lista _FormSItem : PSitem       NOTAS      Criar em TObjectss.TStringList o método          ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#Set_Template"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.SetAlias", "text": "    ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#SetAlias"},
     {"title": "uMI_UI_InputBox.TMI_UI_InputBox.Template", "text": "A propriedade Template é usada para criar uma lista de PSItem para ser usada como modelo do formulário.       NOTAS      Template é um string comum, onde cada linha é separada com &circ;J.   Template tem uma lista de string com formato Dmx.      Formato da propriedade Template:      Template := '&tilde;Nome do Aluno:&tilde;\\Sssssssssssssssssssssssss`ssssssssssssssss'+ChFN+'Nome'+lf+             '&tilde;     Endereço:&tilde;\\Sssssssssssssssssssssssss`ssssssssssssssss'+ChFN+'endereco'+lf+             '&tilde;          Cep:&tilde;\\##-###-###'+ChFN+'cep'+lf+             '&tilde;       Bairro:&tilde;\\sssssssssssssssssssssssss'+ChFN+'bairro'+lf+             '&tilde;       Cidade:&tilde;\\sssssssssssssssssssssssss'+ChFN+'cidade'+lf+             '&tilde;       Estado:&tilde;\\SS'+ChFN+'estado'+lf+             '&tilde;        Idade:&tilde;\\BB'+ChFN+'idade'+FldUpperLimit+#18+lf+             '&tilde;    Matricula:&tilde;\\III'+ChFN+'matricula'+lf+             '&tilde;     Valor da&tilde;'+lf+             '&tilde;    Mensalidade:&tilde;\\R,RRR.RR'+ChFN+'mensalidade';        SINTAXE      &tilde; (til) : Limitador de rótulos do formulário;   s (s minúsculo) : caracteres alfanumérico incluindo os maiúsculas, minusculas, números e símbolos;   S (S maiúsculo) : caracteres alfanumérico incluindo os maiúsculas, números e símbolos;   # (# cancela) : Aceita somente números de 0 a 99   - (literal ) : Separador de números   B (B maiúsculo): Campo do tipo byte   FldUpperLimit : O caractere seguinte indica o limite superior da variável. No exemplo acima é 18 anos;   R : Indica um caractere de um campo do tipo double;   I : Indica um caractere de um campo do tipo interger. Faixa: -32000 a +32000;            ", "tags": "", "url": "uMI_UI_InputBox.TMI_UI_InputBox.html#Template"},
     {"title": "uMI_UI_InputBox.InputBox", "text": "A função InputBox cria um formulário passado por Template e executa os eventos do formulário passado pelos parâmetros.       PARÂMETROS      atitle; // Título do formulário;   aTemplate; // Modelo do formulário cuja a sintaxe segue abaixo:   aOnEnter; // Executado ao entrar no formulário criado baseado no Template;   aOnExit; // Executado ao sair do formulário criado baseado no Template;   aOnEnterField; // Executado ao entrar um campo focado;   aOnExitField; // Executado ao sair do campo focado;   aOnCloseQuery // Executado ao fechar o form se CanClose = true;      SINTAXE DO MODELO      Exemplo     const   Template := '&tilde;Nome do Aluno:&tilde;\\sssssssssssssssssssssssss'+lf+               '&tilde;     Endereço:&tilde;\\sssssssssssssssssssssssss`ssssssssssssssss'+lf+               '&tilde;          Cep:&tilde;\\##-###-###'+lf+               '&tilde;       Bairro:&tilde;\\sssssssssssssssssssssssss'+lf+               '&tilde;       Cidade:&tilde;\\sssssssssssssssssssssssss'+lf+               '&tilde;       Estado:&tilde;\\sssssssssssssssssssssssss'+lf+               '&tilde;        Idade:&tilde;\\BB'+lf+               '&tilde;    Mensalidade:&tilde;\\R,RRR.RR';     Tipos de dados do formulário:      s = Char alfanumérico   # = Char numérico   R = Double   B = Byte         Exemplo de chamada da função:      if InputBox('Dados do aluno',              '&tilde;Nome do Aluno:&tilde;\\sssssssssssssssssssssssss'+lf+              '&tilde;     Endereço:&tilde;\\sssssssssssssssssssssssss`ssssssssssssssss'+lf+              '&tilde;          Cep:&tilde;\\##-###-###'+lf+              '&tilde;       Bairro:&tilde;\\sssssssssssssssssssssssss'+lf+              '&tilde;       Cidade:&tilde;\\sssssssssssssssssssssssss'+lf+              '&tilde;       Estado:&tilde;\\sssssssssssssssssssssssss'+lf+              '&tilde;        Idade:&tilde;\\BB'+lf+              '&tilde;    Mensalidade:&tilde;\\R,RRR.RR',              nil,nil,nil,nil,nil         ) = MrOk then begin      end;         ", "tags": "", "url": "uMI_UI_InputBox.html#InputBox"},
     {"title": "uMI_UI_InputBox.TOnEnterLocal", "text": "O tipo TOnEnterLocal é usado para implementar evento onEnterLocal do atributo Mi_ScrollBox_LCL1    ", "tags": "", "url": "uMI_UI_InputBox.html#TOnEnterLocal"},
     {"title": "uMI_UI_InputBox.TOnExitLocal", "text": "O tipo TOnExitLocal é usado para implementar evento onExitLocal do atributo Mi_ScrollBox_LCL1    ", "tags": "", "url": "uMI_UI_InputBox.html#TOnExitLocal"},
     {"title": "uMI_UI_InputBox.TOnEnterFieldLocal", "text": "O tipo TOnEnterFieldLocal é usado para implementar evento OnEnterFieldLocal do atributo Mi_ScrollBox_LCL1    ", "tags": "", "url": "uMI_UI_InputBox.html#TOnEnterFieldLocal"},
     {"title": "uMI_UI_InputBox.TOnExitFieldLocal", "text": "O tipo TOnExitFieldLocal é usado para implementar evento OnExitFieldLocal do atributo Mi_ScrollBox_LCL1    ", "tags": "", "url": "uMI_UI_InputBox.html#TOnExitFieldLocal"},
     {"title": "uMI_UI_InputBox.TOnCloseQueryLocal", "text": "O tipo TOnCloseQueryLocal é usado para implementar evento OnCloseQueryLocal do atributo Mi_ScrollBox_LCL1.       NOTA*      Este evento é disparado antes de desativar a classe **TUiDmxScroller   .      Obs: Se o parâmetro CanClose for false, então a classe TUiDmxScroller não é desativado.          ", "tags": "", "url": "uMI_UI_InputBox.html#TOnCloseQueryLocal"},
     {"title": "umi_ui_InputBox_lcl", "text": "A unit umi_ui_InputBox_lcl implementa o formulário TMI_UI_InputBox usado para criar formulário baseado em Template PSITem.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      uMi_ui_InputBox_lcl.pas      PENDÊNCIAS      T12 A propriedade autosize deve ser true após o form for criado.   T12 Dar           HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br)   2022-05-17      T12 Análise de como será a classe TMI_UI_InputBox. ✔   T12 Criar a unit umi_ui_InputBox_lcl. ✔   T12 Criar formulário TMI_UI_InputBox; ✔   T12 Adicionar o componente ButtonPanel1 e habilitar os botões ok e cancel; ✔   T12 Adicionar o componente Mi_ScrollBox_LCL1 ; ✔   T12 Criar evento: function DmxScroller_Form1GetTemplate; ✔   T12 Criar atributo protected _FormSItem : PSitem; ✔   T12 Criar propriedade Template:AnsiString; ✔      Criar método Set_Template(aTemplate:AnsiString); ✔         2022-05-18      10:51      As alterações que fiz ontem no método TObjectsMethods.StringToSItem() criou efeito colateral.      Corrigido. ✔         14:28      Criar função:      function InputBox(): TModalResult;            2022-05-19      11:13      Criar os eventos      OnEnterLocal ✔   OnExistLocal ✔   onEnterFieldLocal ✔   OnExitFieldLocal ✔      Criar função:      function MI_MsgBox1MessageBox_04_PSItem(aPSItem: TMI_MsgBoxTypes.PSItem; DlgType: TMsgDlgType; Buttons: TMsgDlgButtons; ButtonDefault: TMsgDlgBtn ): TModalResult;                  ", "tags": "", "url": "umi_ui_InputBox_lcl.html"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox", "text": "A class TMI_UI_InputBox edita uma formulário passado em forma de Template e devolve o formulário LCL caso o botão OK seja pressionando ou nil caso o botão Cancelar seja pressionando.       EXEMPLO      O exemplo abaixo cria um formulário e permite interagir com com os eventos ao entrar e ao sair do formulário.        procedure InputBoxOnEnter(aDmxScroller: TUiDmxScroller);  //Ao entrar no formulário este evento inicia os campos nome, endereço e cep    procedure SetValue(Field:String;Value:String);     var       aField: pDmxFieldRec;   begin     with aDmxScroller do     begin       aField := FieldByName(Field);       if aField&lt;&gt;nil       Then aField.AsString:= value;     end;   end;  begin   with aDmxScroller do   begin     setValue('nome','Paulo Henrique');     setValue('endereço','Rua Francisco de Souza Oliveira, 15');     setValue('cep','60310770');   end; end;  procedure InputBoxOnEnterField(aField: pDmxFieldRec);     // Ao entrar no campo 01 e o mesmo for vazio inicializa-o com o nome Paulo Sérgio  begin   Case aField.Fieldnum of     1 : begin           if aField.AsString = ''           then aField.AsString := 'Paulo Sérgio';         end;     2 : begin end;   end;  end;   Procedure InputBoxOnCloseQuery (aDmxScroller:TUiDmxScroller; var CanClose:boolean);   //Esta função permite validar o formulário ao pressionar o botão ok.    var     idade : byte;     s : string; begin   s := aDmxScroller.FieldByName('idade').AsString;   idade := StrToInt(s);   if  idade &lt;&gt; 64   then begin          ShowMessage('O campo idade &lt;&gt; de 64!.');          CanClose := false;        end   else CanClose := true; end;   Procedure TestInputBox;     //Criar o formulário    Var     MI_UI_InputBox : TMI_UI_InputBox = nil; begin   with TDmxScroller_Form do   if InputBox('Dados do aluno',                  '&tilde;Nome do Aluno:&tilde;\\Sssssssssssssssssssssssss`ssssssssssssssss'+ChFN+'Nome'+lf+                  '&tilde;     Endereço:&tilde;\\Sssssssssssssssssssssssss`ssssssssssssssss'+ChFN+'endereco'+lf+                  '&tilde;          Cep:&tilde;\\##-###-###'+ChFN+'cep'+lf+                  '&tilde;       Bairro:&tilde;\\sssssssssssssssssssssssss'+ChFN+'bairro'+lf+                  '&tilde;       Cidade:&tilde;\\sssssssssssssssssssssssss'+ChFN+'cidade'+lf+                  '&tilde;       Estado:&tilde;\\SS'+ChFN+'estado'+lf+                  '&tilde;        Idade:&tilde;\\BB'+ChFN+'idade'+lf+                  '&tilde;    Matricula:&tilde;\\III'+ChFN+'matricula'+lf+                  '&tilde;  Mensalidade:&tilde;\\R,RRR.RR'+ChFN+'mensalidade',                  InputBoxOnEnter,nil,                   InputBoxOnEnterField,nil,                  InputBoxOnCloseQuery,                  MI_UI_InputBox             ) = MrOk   then with MI_UI_InputBox.DmxScroller_Form1 do        begin          if FieldByName('nome').AsString = ''          then begin                 ShowMessage('Campo &quot;nome&quot; não pode ser vazio');               end;          MI_UI_InputBox.free;        end; end;  procedure TDmxscroller_form_test.Button_InputBoxClick(Sender: TObject); begin   TestInputBox; end;        ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.ButtonPanel1", "text": "   ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#ButtonPanel1"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.DmxScroller_Form1", "text": "   ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#DmxScroller_Form1"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.Mi_ScrollBox_LCL1", "text": "   ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#Mi_ScrollBox_LCL1"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.CancelButtonClick", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#CancelButtonClick"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.CloseButtonClick", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#CloseButtonClick"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.DmxScroller_Form1AddTemplate", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#DmxScroller_Form1AddTemplate"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.DmxScroller_Form1CloseQuery", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#DmxScroller_Form1CloseQuery"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.DmxScroller_Form1Enter", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#DmxScroller_Form1Enter"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.DmxScroller_Form1EnterField", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#DmxScroller_Form1EnterField"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.DmxScroller_Form1Exit", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#DmxScroller_Form1Exit"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.DmxScroller_Form1ExitField", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#DmxScroller_Form1ExitField"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.DmxScroller_Form1GetTemplate", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#DmxScroller_Form1GetTemplate"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.DmxScroller_Form1NewRecord", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#DmxScroller_Form1NewRecord"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.FormCloseQuery", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#FormCloseQuery"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.FormCreate", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#FormCreate"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.OKButtonClick", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#OKButtonClick"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.Set_Template", "text": "O Método Set_Template inicia o atributo _Template e criar a lista _FormSItem : PSitem       NOTAS      Criar em TObjectss.TStringList o método          ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#Set_Template"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.SetAlias", "text": "    ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#SetAlias"},
     {"title": "umi_ui_InputBox_lcl.TMI_UI_InputBox.Template", "text": "A propriedade Template é usada para criar uma lista de PSItem para ser usada como modelo do formulário.       NOTAS      Template é um string comum, onde cada linha é separada com &circ;J.   Template tem uma lista de string com formato Dmx.      Formato da propriedade Template:      Template := '&tilde;Nome do Aluno:&tilde;\\Sssssssssssssssssssssssss`ssssssssssssssss'+ChFN+'Nome'+lf+             '&tilde;     Endereço:&tilde;\\Sssssssssssssssssssssssss`ssssssssssssssss'+ChFN+'endereco'+lf+             '&tilde;          Cep:&tilde;\\##-###-###'+ChFN+'cep'+lf+             '&tilde;       Bairro:&tilde;\\sssssssssssssssssssssssss'+ChFN+'bairro'+lf+             '&tilde;       Cidade:&tilde;\\sssssssssssssssssssssssss'+ChFN+'cidade'+lf+             '&tilde;       Estado:&tilde;\\SS'+ChFN+'estado'+lf+             '&tilde;        Idade:&tilde;\\BB'+ChFN+'idade'+FldUpperLimit+#18+lf+             '&tilde;    Matricula:&tilde;\\III'+ChFN+'matricula'+lf+             '&tilde;     Valor da&tilde;'+lf+             '&tilde;    Mensalidade:&tilde;\\R,RRR.RR'+ChFN+'mensalidade';        SINTAXE      &tilde; (til) : Limitador de rótulos do formulário;   s (s minúsculo) : caracteres alfanumérico incluindo os maiúsculas, minusculas, números e símbolos;   S (S maiúsculo) : caracteres alfanumérico incluindo os maiúsculas, números e símbolos;   # (# cancela) : Aceita somente números de 0 a 99   - (literal ) : Separador de números   B (B maiúsculo): Campo do tipo byte   FldUpperLimit : O caractere seguinte indica o limite superior da variável. No exemplo acima é 18 anos;   R : Indica um caractere de um campo do tipo double;   I : Indica um caractere de um campo do tipo interger. Faixa: -32000 a +32000;            ", "tags": "", "url": "umi_ui_InputBox_lcl.TMI_UI_InputBox.html#Template"},
     {"title": "umi_ui_InputBox_lcl.InputBox", "text": "A função InputBox cria um formulário passado por Template e executa os eventos do formulário passado pelos parâmetros.       PARÂMETROS      atitle; // Título do formulário;   aTemplate; // Modelo do formulário cuja a sintaxe segue abaixo:   aOnEnter; // Executado ao entrar no formulário criado baseado no Template;   aOnExit; // Executado ao sair do formulário criado baseado no Template;   aOnEnterField; // Executado ao entrar um campo focado;   aOnExitField; // Executado ao sair do campo focado;   aOnCloseQuery // Executado ao fechar o form se CanClose = true;      SINTAXE DO MODELO      Exemplo     const   Template := '&tilde;Nome do Aluno:&tilde;\\sssssssssssssssssssssssss'+lf+               '&tilde;     Endereço:&tilde;\\sssssssssssssssssssssssss`ssssssssssssssss'+lf+               '&tilde;          Cep:&tilde;\\##-###-###'+lf+               '&tilde;       Bairro:&tilde;\\sssssssssssssssssssssssss'+lf+               '&tilde;       Cidade:&tilde;\\sssssssssssssssssssssssss'+lf+               '&tilde;       Estado:&tilde;\\sssssssssssssssssssssssss'+lf+               '&tilde;        Idade:&tilde;\\BB'+lf+               '&tilde;  Mensalidade:&tilde;\\R,RRR.RR';     Tipos de dados do formulário:      s = Char alfanumérico   # = Char numérico   R = Double   B = Byte         Exemplo de chamada da função:      if InputBox('Dados do aluno',              '&tilde;Nome do Aluno:&tilde;\\sssssssssssssssssssssssss'+lf+              '&tilde;     Endereço:&tilde;\\sssssssssssssssssssssssss`ssssssssssssssss'+lf+              '&tilde;          Cep:&tilde;\\##-###-###'+lf+              '&tilde;       Bairro:&tilde;\\sssssssssssssssssssssssss'+lf+              '&tilde;       Cidade:&tilde;\\sssssssssssssssssssssssss'+lf+              '&tilde;       Estado:&tilde;\\sssssssssssssssssssssssss'+lf+              '&tilde;        Idade:&tilde;\\BB'+lf+              '&tilde;    Mensalidade:&tilde;\\R,RRR.RR',              nil,nil,nil,nil,nil         ) = MrOk then begin      end;         ", "tags": "", "url": "umi_ui_InputBox_lcl.html#InputBox"},
     {"title": "umi_ui_InputBox_lcl.TOnEnterLocal", "text": "O tipo TOnEnterLocal é usado para implementar evento onEnterLocal do atributo Mi_ScrollBox_LCL1    ", "tags": "", "url": "umi_ui_InputBox_lcl.html#TOnEnterLocal"},
     {"title": "umi_ui_InputBox_lcl.TOnExitLocal", "text": "O tipo TOnExitLocal é usado para implementar evento onExitLocal do atributo Mi_ScrollBox_LCL1    ", "tags": "", "url": "umi_ui_InputBox_lcl.html#TOnExitLocal"},
     {"title": "umi_ui_InputBox_lcl.TOnEnterFieldLocal", "text": "O tipo TOnEnterFieldLocal é usado para implementar evento OnEnterFieldLocal do atributo Mi_ScrollBox_LCL1    ", "tags": "", "url": "umi_ui_InputBox_lcl.html#TOnEnterFieldLocal"},
     {"title": "umi_ui_InputBox_lcl.TOnExitFieldLocal", "text": "O tipo TOnExitFieldLocal é usado para implementar evento OnExitFieldLocal do atributo Mi_ScrollBox_LCL1    ", "tags": "", "url": "umi_ui_InputBox_lcl.html#TOnExitFieldLocal"},
     {"title": "umi_ui_InputBox_lcl.TOnCloseQueryLocal", "text": "O tipo TOnCloseQueryLocal é usado para implementar evento OnCloseQueryLocal do atributo Mi_ScrollBox_LCL1.       NOTA*      Este evento é disparado antes de desativar a classe **TUiDmxScroller   .      Obs: Se o parâmetro CanClose for false, então a classe TUiDmxScroller não é desativado.          ", "tags": "", "url": "umi_ui_InputBox_lcl.html#TOnCloseQueryLocal"},
     {"title": "umi_ui_inputbox_lcl_test", "text": "   ", "tags": "", "url": "umi_ui_inputbox_lcl_test.html"},
     {"title": "umi_ui_inputbox_lcl_test.TestinputBox", "text": "    ", "tags": "", "url": "umi_ui_inputbox_lcl_test.html#TestinputBox"},
     {"title": "uMi_ui_Label_lcl", "text": "   ", "tags": "", "url": "uMi_ui_Label_lcl.html"},
     {"title": "uMi_ui_Label_lcl.TMi_ui_Label_lcl", "text": "   ", "tags": "", "url": "uMi_ui_Label_lcl.TMi_ui_Label_lcl.html"},
     {"title": "uMi_ui_Label_lcl.TMi_ui_Label_lcl.DoOnClick", "text": "    ", "tags": "", "url": "uMi_ui_Label_lcl.TMi_ui_Label_lcl.html#DoOnClick"},
     {"title": "uMi_ui_Label_lcl.TMi_ui_Label_lcl.UiDmxScroller", "text": "A propriedade UiDmxScroller contém o modelo e os cálculos do formulário   ", "tags": "", "url": "uMi_ui_Label_lcl.TMi_ui_Label_lcl.html#UiDmxScroller"},
     {"title": "uMi_ui_Label_lcl.TMi_ui_Label_lcl.DmxFieldRec", "text": "A propriedade DmxFieldRec fornece os dados necessários para criar o componente TMI_BitBtn_LCL.       NOTA      Esses dados devem ser criados pelo método UiDmxScrollerr.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMi_ui_Label_lcl.TMi_ui_Label_lcl.html#DmxFieldRec"},
     {"title": "uMi_ui_Label_lcl.Register", "text": "    ", "tags": "", "url": "uMi_ui_Label_lcl.html#Register"},
     {"title": "uMi_ui_maskedit_lcl", "text": "   ", "tags": "", "url": "uMi_ui_maskedit_lcl.html"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL", "text": "   ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL._StringGrid", "text": "   ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#_StringGrid"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.Create", "text": "    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#Create"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.PutBuffer", "text": "O método PutBuffer salva os dados do controle (Self) para a propriedade pDmxFieldRec    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#PutBuffer"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.GetBuffer", "text": "O método GetBuffer ler os dados da propriedade pDmxFieldRec para o controle (Self).    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#GetBuffer"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.DoOnMouseDown", "text": "O método DoOnMouseDown seleciona todas as letras ou número do controle focado.    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#DoOnMouseDown"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.DoOnEnter", "text": "O método DoOnEnter ao receber o foco executa os métodos GetBuffer e pDmxFieldRec.DoOnEnter(Self).    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#DoOnEnter"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.DoOnExit", "text": "O método DoOnExit ao perder o foco executa os métodos PuttBuffer e pDmxFieldRec.DoOnExit(Self).    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#DoOnExit"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.DoEditNumberKeyPress", "text": "O método DoEditNumberKeyPress edita os campos números de 1 a 10 bytes    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#DoEditNumberKeyPress"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.DoOnKeyPress", "text": "O método DoOnKeyPress não usado por enquanto???    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#DoOnKeyPress"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.GetHelpCtx_Hint", "text": "O método GetHelpCtx_Hint captura a documentação do campo definido na classe onde o campo for criado.       Com o programa pasdoc a documentação não precisa está no arquivo de recursos, por isso, para obter o link para o campo é preciso saber apenas o endereço do link.       ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#GetHelpCtx_Hint"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.GetSize", "text": "    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#GetSize"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.SetSize", "text": "    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#SetSize"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.SetAlias", "text": "    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#SetAlias"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.GetName", "text": "    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#GetName"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.GetAlias", "text": "    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#GetAlias"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.WMPaint", "text": "    ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#WMPaint"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.UiDmxScroller", "text": "A propriedade UiDmxScroller contém o modelo e os cálculos do formulário   ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#UiDmxScroller"},
     {"title": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.DmxFieldRec", "text": "O atributo DmxFieldRec fornece os dados necessários para criar o componente TMI_MaskEdit_LCL.       NOTA      Esses dados devem ser criados pelo método UiDmxScrollerr.CreateStruct(var ATemplate : TString)         ", "tags": "", "url": "uMi_ui_maskedit_lcl.TMI_MaskEdit_LCL.html#DmxFieldRec"},
     {"title": "uMi_ui_maskedit_lcl.Register", "text": "    ", "tags": "", "url": "uMi_ui_maskedit_lcl.html#Register"},
     {"title": "umi_ui_mi_msgbox_dm", "text": "   ", "tags": "", "url": "umi_ui_mi_msgbox_dm.html"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox", "text": "   ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1", "text": "   ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1InputBox", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1InputBox"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1InputPassword", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1InputPassword"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1InputValue", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1InputValue"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox_03", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox_03"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox_04", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox_04"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox_04_PSItem", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox_04_PSItem"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.MI_MsgBox1MessageBox_05", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#MI_MsgBox1MessageBox_05"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.Alert", "text": "     A procedure Alert executa um dialogo com botão OK       ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#Alert"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.Confirm", "text": "     A função Confirm executa um dialogo com os botões OK e Cancel fazendo uma pergunta.       RETORNA:      True : Se o botão OK foi pŕessionando;   False : Se o botão Cancel foi pŕessionando.             ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#Confirm"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.Prompt", "text": "     A função Prompt mostra um dialogo com dois botões OK e Cancel e um campo input solicitando que o usuário digite um valor.       RETORNA:      True : Se o botão ok foi pŕessionando;   False : Se o botão cancel foi pŕessionando.   aResult : Retorna a string digitada no formulário;             ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#Prompt"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.InputPassword", "text": "     A função InputPassword mostra um dialogo solicitando o login do usuário e a senha e dois botões OK e Cancel       RETORNA:      True : Se o botão ok foi pŕessionando;   False : Se o botão cancel foi pŕessionando.   aUsername : Retorna a string com nome do usuário.   apassword : Retorna a string com a senha do usuário.             ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#InputPassword"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.InputPassword", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#InputPassword"},
     {"title": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.create", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.TMi_ui_mi_msgBox.html#create"},
     {"title": "umi_ui_mi_msgbox_dm.get_MI_MsgBox", "text": "    ", "tags": "", "url": "umi_ui_mi_msgbox_dm.html#get_MI_MsgBox"},
     {"title": "uMi_ui_scrollbox_lcl", "text": "A unit uMi_ui_scrollbox_lcl implementa a classe TMi_ScrollBox_LCL para ser usado como container para UiDmxScroller.       VERSÃO      Alpha - 0.5.0.693      CÓDIGO FONTE:      mi.rtl.objects.methods.ui.DmxScroller.pas      PENDÊNCIAS      O evento onGetTemplate não está funcionando de forma automática, preciso setá-lo.   Antes de executar onGetTemplate definir um nome de fonte padrão e checar se o mesmo precede a fonte editada na IDE.      HISTÓRICO      Criado por: Paulo Sérgio da Silva Pacheco paulosspacheco@yahoo.com.br)      2022-02-21       Data em que essa unity foi criada. ✅      2022-02-22 14:00      Documentar a unidade. ✅ -      2022-02-24 21:00      Implementar os enventos OnEnter e OnExit de TMi_ScrollBox_LCL para executar os eventos OnEnter e onExit de UiDmxScroller ✅           2022-03-01 11:00      Em TMi_ScrollBox_LCL.Create inicializar a fonte fixa Courie New se windows ou DejaVu Sans Mono se linux e em ambas as plataformas foi definido o tamanho da fonte em 12 px. ✅      2022-03-22 20:00      Os eventos onEnter e OnExit não estavam executando TUiDmxScroller.DoOnEnter e TUiDmxScroller.OnExit caso o usuário não tenha iniciado os eventos OnEnter e OnExit do formulário isso gerava problema em GetBuffer e SetBuffer. Corrigido. ✅      2022-06-27 18:19      Redefinir procedure ComputeScrollbars; virtual;      Implementei mais meus problema continuaram. Tem algo muito errado no controle ScrollBox do Lazarus.                  ", "tags": "", "url": "uMi_ui_scrollbox_lcl.html"},
     {"title": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL", "text": "A Classe TMi_ScrollBox_LCL foi redefinida para que os eventos DmxScroller.OnEnter e DmxScroller.OnExit sejam executados quando o ScrollBox recebe e perde o foco.       REFERẼNCIAS      [TScrollBox](https://lazarus-ccr.sourceforge.io/docs/lcl/forms/tscrollbox.html)   Form_Tutorial -         ", "tags": "", "url": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.html"},
     {"title": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.DoOnEnter", "text": "A procedure DoOnEnter é usado para executar o evento onEnter de DmxScroller    ", "tags": "", "url": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.html#DoOnEnter"},
     {"title": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.DoOnExit", "text": "A procedure DoOnExit é usado para executar o evento onExit de DmxScroller    ", "tags": "", "url": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.html#DoOnExit"},
     {"title": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.Create", "text": "O constructor Create foi redefinido para que os eventos OnEnter e OnExit sajam iniciados com DoOnEnter e DoOnExit respectivamente.    ", "tags": "", "url": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.html#Create"},
     {"title": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.SetUiDmxScroller", "text": "O método SetUiDmxScroller é usado para inicializar o atributo _UiDmxScroller       NOTA      Caso a propriedade DmxScroller.Active seja true, então deve-se toná-la false para que perca o vínculo com a visão anterior.          ", "tags": "", "url": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.html#SetUiDmxScroller"},
     {"title": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.Refresh", "text": "    ", "tags": "", "url": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.html#Refresh"},
     {"title": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.WidthChar", "text": "    ", "tags": "", "url": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.html#WidthChar"},
     {"title": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.HeightChar", "text": "    ", "tags": "", "url": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.html#HeightChar"},
     {"title": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.UiDmxScroller", "text": "A propriedade UiDmxScroller foi crada para que os eventos DmxScroller.OnEnter e DmxScroller.OnExit sejam executados quando o ScrollBox recebe o foco e perde o foco.       A propriedade UiDmxScroller não deve ser published por que a mesma deve ser inicializada automatiocamente em TUiDmxScroller.SetParentLCL()      ", "tags": "", "url": "uMi_ui_scrollbox_lcl.TMi_ScrollBox_LCL.html#UiDmxScroller"},
     {"title": "uMi_ui_scrollbox_lcl.Register", "text": "    ", "tags": "", "url": "uMi_ui_scrollbox_lcl.html#Register"},
     {"title": "uMi_ui_scrollbox_lcl.PSItem", "text": "   ", "tags": "", "url": "uMi_ui_scrollbox_lcl.html#PSItem"},
     {"title": "Unit1", "text": "   ", "tags": "", "url": "Unit1.html"},
     {"title": "Unit1.TDmxScroller_Form_Lcl_add_test1", "text": "   ", "tags": "", "url": "Unit1.TDmxScroller_Form_Lcl_add_test1.html"},
     {"title": "Unit1.DmxScroller_Form_Lcl_add_test1", "text": "   ", "tags": "", "url": "Unit1.html#DmxScroller_Form_Lcl_add_test1"}
]};
